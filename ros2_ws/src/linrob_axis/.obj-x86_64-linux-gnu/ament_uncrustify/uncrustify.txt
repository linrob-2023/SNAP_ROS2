-- run_test.py: invoking following command in '/home/boschrexroth/ctrlx-automation-sdk/samples-python/SNAP_ROS2/ros2_ws/src/linrob_axis':
 - /opt/ros/humble/bin/ament_uncrustify --xunit-file /home/boschrexroth/ctrlx-automation-sdk/samples-python/SNAP_ROS2/ros2_ws/src/linrob_axis/.obj-x86_64-linux-gnu/test_results/linrob_axis/uncrustify.xunit.xml

Code style divergence in file 'build/linrob_axis/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c':

--- build/linrob_axis/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c
+++ build/linrob_axis/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c.uncrustify
@@ -32 +32 @@
-  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
+/* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
@@ -35,2 +35,2 @@
-#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
-#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER / 100)
+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER / 10 % 10)
@@ -40 +40 @@
-#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER % 10)
@@ -45 +45 @@
-   /* The third version component from --version is an update index,
+/* The third version component from --version is an update index,
@@ -50 +50 @@
-   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+/* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
@@ -54 +54 @@
-   /* _MSC_VER = VVRR */
+/* _MSC_VER = VVRR */
@@ -83,3 +83,3 @@
-# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
-# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
-# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER / 100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER % 10)
@@ -87,3 +87,3 @@
-# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
-# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
-# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER / 10000)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER / 100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER % 100)
@@ -92 +92 @@
-  /* _MSC_VER = VVRR */
+/* _MSC_VER = VVRR */
@@ -118,3 +118,3 @@
-# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
-# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
-# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__ >> 24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__ >> 16 & 0x00FF)
+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__ & 0xFFFF)
@@ -124,2 +124,2 @@
-  /* __BORLANDC__ = 0xVRR */
-# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+/* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__ >> 8)
@@ -130 +130 @@
-   /* __WATCOMC__ = VVRR */
+/* __WATCOMC__ = VVRR */
@@ -139 +139 @@
-   /* __WATCOMC__ = VVRP + 1100 */
+/* __WATCOMC__ = VVRP + 1100 */
@@ -149,4 +149,4 @@
-   /* __SUNPRO_C = 0xVRRP */
-#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)
-#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)
-#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
+/* __SUNPRO_C = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C >> 12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C >> 4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C & 0xF)
@@ -154,4 +154,4 @@
-   /* __SUNPRO_CC = 0xVRP */
-#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)
-#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)
-#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
+/* __SUNPRO_CC = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C >> 8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C >> 4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C & 0xF)
@@ -162,4 +162,4 @@
-  /* __HP_cc = VVRRPP */
-# define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)
-# define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)
-# define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)
+/* __HP_cc = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_cc / 10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_cc / 100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_cc % 100)
@@ -169,4 +169,4 @@
-  /* __DECC_VER = VVRRTPPPP */
-# define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)
-# define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)
-# define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)
+/* __DECC_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECC_VER / 10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECC_VER / 100000 % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECC_VER % 10000)
@@ -176,4 +176,4 @@
-  /* __IBMC__ = VRP */
-# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+/* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__ / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__ % 10)
@@ -191,4 +191,4 @@
-  /* __IBMC__ = VRP */
-# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+/* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__ / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__ % 10)
@@ -198,4 +198,4 @@
-  /* __IBMC__ = VRP */
-# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+/* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__ / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__ % 10)
@@ -226,4 +226,4 @@
-  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
-# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
-# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
-# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+/* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__ / 1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__ / 1000 % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__ % 1000)
@@ -261 +261 @@
-# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER % 10)
@@ -276,4 +276,4 @@
-  /* __ARMCC_VERSION = VRRPPPP */
-  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
-  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
-  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
+/* __ARMCC_VERSION = VRRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION / 1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION / 10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION % 10000)
@@ -281,4 +281,4 @@
-  /* __ARMCC_VERSION = VRPPPP */
-  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
-  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
-  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
+/* __ARMCC_VERSION = VRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION / 100000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION / 10000 % 10)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION % 10000)
@@ -297 +297 @@
-   /* _MSC_VER = VVRR */
+/* _MSC_VER = VVRR */
@@ -305,3 +305,3 @@
-  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
-  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
-  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION / 1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION / 10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION % 10000)
@@ -319 +319 @@
-   /* _MSC_VER = VVRR */
+/* _MSC_VER = VVRR */
@@ -336 +336 @@
-  /* _MSC_VER = VVRR */
+/* _MSC_VER = VVRR */
@@ -341 +341 @@
-    /* _MSC_FULL_VER = VVRRPPPPP */
+/* _MSC_FULL_VER = VVRRPPPPP */
@@ -344 +344 @@
-    /* _MSC_FULL_VER = VVRRPPPP */
+/* _MSC_FULL_VER = VVRRPPPP */
@@ -352 +352,2 @@
-#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
+#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || \
+  defined(__ADSP21000__)
@@ -355,4 +356,4 @@
-  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
-# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
-# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
-# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
+/* __VISUALDSPVERSION__ = 0xVVRRPP00 */
+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__ >> 24)
+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__ >> 16 & 0xFF)
+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__ >> 8 & 0xFF)
@@ -368 +369,3 @@
-# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || \
+  defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || \
+  defined(__ICC8051__) || defined(__ICCSTM8__))
@@ -370 +373 @@
-#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
+#  define COMPILER_VERSION_MINOR DEC((__VER__) -(((__VER__) / 100) * 100))
@@ -382,4 +385,4 @@
-  /* SDCC = VRP */
-#  define COMPILER_VERSION_MAJOR DEC(SDCC/100)
-#  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)
-#  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)
+/* SDCC = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(SDCC / 100)
+#  define COMPILER_VERSION_MINOR DEC(SDCC / 10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(SDCC % 10)
@@ -403 +406 @@
-char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+char const * info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
@@ -405 +408 @@
-char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+char const * info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
@@ -409 +412 @@
-char const* qnxnto = "INFO" ":" "qnxnto[]";
+char const * qnxnto = "INFO" ":" "qnxnto[]";
@@ -413 +416 @@
-char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
+char const * info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
@@ -656,9 +659,9 @@
-#define DEC(n)                   \
-  ('0' + (((n) / 10000000)%10)), \
-  ('0' + (((n) / 1000000)%10)),  \
-  ('0' + (((n) / 100000)%10)),   \
-  ('0' + (((n) / 10000)%10)),    \
-  ('0' + (((n) / 1000)%10)),     \
-  ('0' + (((n) / 100)%10)),      \
-  ('0' + (((n) / 10)%10)),       \
-  ('0' +  ((n) % 10))
+#define DEC(n) \
+  ('0' + (((n) / 10000000) % 10)), \
+  ('0' + (((n) / 1000000) % 10)), \
+  ('0' + (((n) / 100000) % 10)), \
+  ('0' + (((n) / 10000) % 10)), \
+  ('0' + (((n) / 1000) % 10)), \
+  ('0' + (((n) / 100) % 10)), \
+  ('0' + (((n) / 10) % 10)), \
+  ('0' + ((n) % 10))
@@ -667,9 +670,9 @@
-#define HEX(n)             \
-  ('0' + ((n)>>28 & 0xF)), \
-  ('0' + ((n)>>24 & 0xF)), \
-  ('0' + ((n)>>20 & 0xF)), \
-  ('0' + ((n)>>16 & 0xF)), \
-  ('0' + ((n)>>12 & 0xF)), \
-  ('0' + ((n)>>8  & 0xF)), \
-  ('0' + ((n)>>4  & 0xF)), \
-  ('0' + ((n)     & 0xF))
+#define HEX(n) \
+  ('0' + ((n) >> 28 & 0xF)), \
+  ('0' + ((n) >> 24 & 0xF)), \
+  ('0' + ((n) >> 20 & 0xF)), \
+  ('0' + ((n) >> 16 & 0xF)), \
+  ('0' + ((n) >> 12 & 0xF)), \
+  ('0' + ((n) >> 8 & 0xF)), \
+  ('0' + ((n) >> 4 & 0xF)), \
+  ('0' + ((n) & 0xF))
@@ -679 +682 @@
-char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
+char const * info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
@@ -685 +688 @@
-  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  'c', 'o', 'm', 'p', 'i', 'l', 'e', 'r', '_', 'v', 'e', 'r', 's', 'i', 'o', 'n', '[',
@@ -690 +693 @@
-   '.', COMPILER_VERSION_PATCH,
+  '.', COMPILER_VERSION_PATCH,
@@ -692 +695 @@
-    '.', COMPILER_VERSION_TWEAK,
+  '.', COMPILER_VERSION_TWEAK,
@@ -696 +699,2 @@
-  ']','\0'};
+  ']', '\0'
+};
@@ -703,3 +707,4 @@
-  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
-  'i','n','t','e','r','n','a','l','[',
-  COMPILER_VERSION_INTERNAL,']','\0'};
+  'c', 'o', 'm', 'p', 'i', 'l', 'e', 'r', '_', 'v', 'e', 'r', 's', 'i', 'o', 'n', '_',
+  'i', 'n', 't', 'e', 'r', 'n', 'a', 'l', '[',
+  COMPILER_VERSION_INTERNAL, ']', '\0'
+};
@@ -707 +712,2 @@
-char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
+char const * info_version_internal =
+  "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
@@ -714 +720 @@
-  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  's', 'i', 'm', 'u', 'l', 'a', 't', 'e', '_', 'v', 'e', 'r', 's', 'i', 'o', 'n', '[',
@@ -719 +725 @@
-   '.', SIMULATE_VERSION_PATCH,
+  '.', SIMULATE_VERSION_PATCH,
@@ -721 +727 @@
-    '.', SIMULATE_VERSION_TWEAK,
+  '.', SIMULATE_VERSION_TWEAK,
@@ -725 +731,2 @@
-  ']','\0'};
+  ']', '\0'
+};
@@ -732,3 +739,2 @@
-char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
-char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
-
+char const * info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const * info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
@@ -754 +760 @@
-const char* info_language_standard_default =
+const char * info_language_standard_default =
@@ -757 +763 @@
-const char* info_language_extensions_default = "INFO" ":" "extensions_default["
+const char * info_language_extensions_default = "INFO" ":" "extensions_default["
@@ -759,2 +765,2 @@
-#if (defined(__clang__) || defined(__GNUC__) ||                               \
-     defined(__TI_COMPILER_VERSION__)) &&                                     \
+#if (defined(__clang__) || defined(__GNUC__) || \
+  defined(__TI_COMPILER_VERSION__)) && \
@@ -766 +772 @@
-"]";
+  "]";
@@ -774 +780 @@
-int main(argc, argv) int argc; char *argv[];
+int main(argc, argv) int argc; char * argv[];
@@ -776 +782 @@
-int main(int argc, char* argv[])
+int main(int argc, char * argv[])

Code style divergence in file 'build/linrob_axis/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp':

--- build/linrob_axis/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp
+++ build/linrob_axis/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp.uncrustify
@@ -20 +20 @@
-  /* __COMO_VERSION__ = VRR */
+/* __COMO_VERSION__ = VRR */
@@ -32 +32 @@
-  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
+/* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
@@ -35,2 +35,2 @@
-#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
-#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER / 100)
+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER / 10 % 10)
@@ -40 +40 @@
-#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER % 10)
@@ -45 +45 @@
-   /* The third version component from --version is an update index,
+/* The third version component from --version is an update index,
@@ -50 +50 @@
-   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+/* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
@@ -54 +54 @@
-   /* _MSC_VER = VVRR */
+/* _MSC_VER = VVRR */
@@ -83,3 +83,3 @@
-# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
-# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
-# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER / 100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER % 10)
@@ -87,3 +87,3 @@
-# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
-# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
-# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER / 10000)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER / 100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER % 100)
@@ -92 +92 @@
-  /* _MSC_VER = VVRR */
+/* _MSC_VER = VVRR */
@@ -118,3 +118,3 @@
-# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
-# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
-# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__ >> 24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__ >> 16 & 0x00FF)
+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__ & 0xFFFF)
@@ -124,2 +124,2 @@
-  /* __BORLANDC__ = 0xVRR */
-# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+/* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__ >> 8)
@@ -130 +130 @@
-   /* __WATCOMC__ = VVRR */
+/* __WATCOMC__ = VVRR */
@@ -139 +139 @@
-   /* __WATCOMC__ = VVRP + 1100 */
+/* __WATCOMC__ = VVRP + 1100 */
@@ -149,4 +149,4 @@
-   /* __SUNPRO_CC = 0xVRRP */
-#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
-#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
-#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+/* __SUNPRO_CC = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC >> 12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC >> 4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC & 0xF)
@@ -154,4 +154,4 @@
-   /* __SUNPRO_CC = 0xVRP */
-#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
-#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
-#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+/* __SUNPRO_CC = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC >> 8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC >> 4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC & 0xF)
@@ -162,4 +162,4 @@
-  /* __HP_aCC = VVRRPP */
-# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
-# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
-# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
+/* __HP_aCC = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_aCC / 10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_aCC / 100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_aCC % 100)
@@ -169,4 +169,4 @@
-  /* __DECCXX_VER = VVRRTPPPP */
-# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
-# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
-# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
+/* __DECCXX_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER / 10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER / 100000 % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER % 10000)
@@ -176,4 +176,4 @@
-  /* __IBMCPP__ = VRP */
-# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+/* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__ / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__ % 10)
@@ -191,4 +191,4 @@
-  /* __IBMCPP__ = VRP */
-# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+/* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__ / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__ % 10)
@@ -198,4 +198,4 @@
-  /* __IBMCPP__ = VRP */
-# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+/* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__ / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__ % 10)
@@ -226,4 +226,4 @@
-  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
-# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
-# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
-# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+/* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__ / 1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__ / 1000 % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__ % 1000)
@@ -261 +261 @@
-# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER % 10)
@@ -270,4 +270,4 @@
-  /* __ARMCC_VERSION = VRRPPPP */
-  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
-  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
-  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
+/* __ARMCC_VERSION = VRRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION / 1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION / 10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION % 10000)
@@ -275,4 +275,4 @@
-  /* __ARMCC_VERSION = VRPPPP */
-  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
-  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
-  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
+/* __ARMCC_VERSION = VRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION / 100000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION / 10000 % 10)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION % 10000)
@@ -291 +291 @@
-   /* _MSC_VER = VVRR */
+/* _MSC_VER = VVRR */
@@ -299,3 +299,3 @@
-  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
-  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
-  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION / 1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION / 10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION % 10000)
@@ -313 +313 @@
-   /* _MSC_VER = VVRR */
+/* _MSC_VER = VVRR */
@@ -334 +334 @@
-  /* _MSC_VER = VVRR */
+/* _MSC_VER = VVRR */
@@ -339 +339 @@
-    /* _MSC_FULL_VER = VVRRPPPPP */
+/* _MSC_FULL_VER = VVRRPPPPP */
@@ -342 +342 @@
-    /* _MSC_FULL_VER = VVRRPPPP */
+/* _MSC_FULL_VER = VVRRPPPP */
@@ -350 +350,2 @@
-#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
+#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || \
+  defined(__ADSP21000__)
@@ -353,4 +354,4 @@
-  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
-# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
-# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
-# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
+/* __VISUALDSPVERSION__ = 0xVVRRPP00 */
+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__ >> 24)
+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__ >> 16 & 0xFF)
+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__ >> 8 & 0xFF)
@@ -366 +367,3 @@
-# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || \
+  defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || \
+  defined(__ICC8051__) || defined(__ICCSTM8__))
@@ -368 +371 @@
-#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
+#  define COMPILER_VERSION_MINOR DEC((__VER__) -(((__VER__) / 100) * 100))
@@ -388 +391 @@
-char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+char const * info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
@@ -390 +393 @@
-char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+char const * info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
@@ -394 +397 @@
-char const* qnxnto = "INFO" ":" "qnxnto[]";
+char const * qnxnto = "INFO" ":" "qnxnto[]";
@@ -398 +401 @@
-char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
+char const * info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
@@ -641,9 +644,9 @@
-#define DEC(n)                   \
-  ('0' + (((n) / 10000000)%10)), \
-  ('0' + (((n) / 1000000)%10)),  \
-  ('0' + (((n) / 100000)%10)),   \
-  ('0' + (((n) / 10000)%10)),    \
-  ('0' + (((n) / 1000)%10)),     \
-  ('0' + (((n) / 100)%10)),      \
-  ('0' + (((n) / 10)%10)),       \
-  ('0' +  ((n) % 10))
+#define DEC(n) \
+  ('0' + (((n) / 10000000) % 10)), \
+  ('0' + (((n) / 1000000) % 10)), \
+  ('0' + (((n) / 100000) % 10)), \
+  ('0' + (((n) / 10000) % 10)), \
+  ('0' + (((n) / 1000) % 10)), \
+  ('0' + (((n) / 100) % 10)), \
+  ('0' + (((n) / 10) % 10)), \
+  ('0' + ((n) % 10))
@@ -652,9 +655,9 @@
-#define HEX(n)             \
-  ('0' + ((n)>>28 & 0xF)), \
-  ('0' + ((n)>>24 & 0xF)), \
-  ('0' + ((n)>>20 & 0xF)), \
-  ('0' + ((n)>>16 & 0xF)), \
-  ('0' + ((n)>>12 & 0xF)), \
-  ('0' + ((n)>>8  & 0xF)), \
-  ('0' + ((n)>>4  & 0xF)), \
-  ('0' + ((n)     & 0xF))
+#define HEX(n) \
+  ('0' + ((n) >> 28 & 0xF)), \
+  ('0' + ((n) >> 24 & 0xF)), \
+  ('0' + ((n) >> 20 & 0xF)), \
+  ('0' + ((n) >> 16 & 0xF)), \
+  ('0' + ((n) >> 12 & 0xF)), \
+  ('0' + ((n) >> 8 & 0xF)), \
+  ('0' + ((n) >> 4 & 0xF)), \
+  ('0' + ((n) & 0xF))
@@ -664 +667 @@
-char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
+char const * info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
@@ -670 +673 @@
-  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  'c', 'o', 'm', 'p', 'i', 'l', 'e', 'r', '_', 'v', 'e', 'r', 's', 'i', 'o', 'n', '[',
@@ -675 +678 @@
-   '.', COMPILER_VERSION_PATCH,
+  '.', COMPILER_VERSION_PATCH,
@@ -677 +680 @@
-    '.', COMPILER_VERSION_TWEAK,
+  '.', COMPILER_VERSION_TWEAK,
@@ -681 +684 @@
-  ']','\0'};
+  ']', '\0'};
@@ -688,3 +691,3 @@
-  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
-  'i','n','t','e','r','n','a','l','[',
-  COMPILER_VERSION_INTERNAL,']','\0'};
+  'c', 'o', 'm', 'p', 'i', 'l', 'e', 'r', '_', 'v', 'e', 'r', 's', 'i', 'o', 'n', '_',
+  'i', 'n', 't', 'e', 'r', 'n', 'a', 'l', '[',
+  COMPILER_VERSION_INTERNAL, ']', '\0'};
@@ -692 +695,2 @@
-char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
+char const * info_version_internal =
+  "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
@@ -699 +703 @@
-  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  's', 'i', 'm', 'u', 'l', 'a', 't', 'e', '_', 'v', 'e', 'r', 's', 'i', 'o', 'n', '[',
@@ -704 +708 @@
-   '.', SIMULATE_VERSION_PATCH,
+  '.', SIMULATE_VERSION_PATCH,
@@ -706 +710 @@
-    '.', SIMULATE_VERSION_TWEAK,
+  '.', SIMULATE_VERSION_TWEAK,
@@ -710 +714 @@
-  ']','\0'};
+  ']', '\0'};
@@ -717,3 +721,2 @@
-char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
-char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
-
+char const * info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const * info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
@@ -738 +741 @@
-const char* info_language_standard_default = "INFO" ":" "standard_default["
+const char * info_language_standard_default = "INFO" ":" "standard_default["
@@ -752,3 +755,3 @@
-"]";
-
-const char* info_language_extensions_default = "INFO" ":" "extensions_default["
+  "]";
+
+const char * info_language_extensions_default = "INFO" ":" "extensions_default["
@@ -756,2 +759,2 @@
-#if (defined(__clang__) || defined(__GNUC__) ||                               \
-     defined(__TI_COMPILER_VERSION__)) &&                                     \
+#if (defined(__clang__) || defined(__GNUC__) || \
+  defined(__TI_COMPILER_VERSION__)) && \
@@ -763 +766 @@
-"]";
+  "]";
@@ -767 +770 @@
-int main(int argc, char* argv[])
+int main(int argc, char * argv[])

Code style divergence in file 'build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c':

--- build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c
+++ build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c':

--- build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c
+++ build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c':

--- build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c
+++ build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_reference_axis_s.c':

--- build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_reference_axis_s.c
+++ build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_reference_axis_s.c.uncrustify
@@ -21 +21,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -50 +52,4 @@
-    assert(strncmp("linrob_axis.srv._reference_axis.ReferenceAxis_Request", full_classname_dest, 53) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._reference_axis.ReferenceAxis_Request", full_classname_dest,
+        53) == 0);
@@ -100 +105,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -129 +136,4 @@
-    assert(strncmp("linrob_axis.srv._reference_axis.ReferenceAxis_Response", full_classname_dest, 54) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._reference_axis.ReferenceAxis_Response", full_classname_dest,
+        54) == 0);
@@ -177 +187,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;

Code style divergence in file 'build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_reset_axis_s.c':

--- build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_reset_axis_s.c
+++ build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_reset_axis_s.c.uncrustify
@@ -177 +177,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;

Code style divergence in file 'build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_start_motion_s.c':

--- build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_start_motion_s.c
+++ build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_start_motion_s.c.uncrustify
@@ -21 +21,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -50 +52,4 @@
-    assert(strncmp("linrob_axis.srv._start_motion.StartMotion_Request", full_classname_dest, 49) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._start_motion.StartMotion_Request", full_classname_dest,
+        49) == 0);
@@ -92 +97,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -139 +145,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -168 +176,4 @@
-    assert(strncmp("linrob_axis.srv._start_motion.StartMotion_Response", full_classname_dest, 50) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._start_motion.StartMotion_Response", full_classname_dest,
+        50) == 0);
@@ -216 +227,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;

Code style divergence in file 'build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_stop_axis_s.c':

--- build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_stop_axis_s.c
+++ build/linrob_axis/ament_cmake_python/linrob_axis/linrob_axis/srv/_stop_axis_s.c.uncrustify
@@ -177 +177,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;

Code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reference_axis__functions.c':

--- build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reference_axis__functions.c
+++ build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reference_axis__functions.c.uncrustify
@@ -33 +33,3 @@
-linrob_axis__srv__ReferenceAxis_Request__are_equal(const linrob_axis__srv__ReferenceAxis_Request * lhs, const linrob_axis__srv__ReferenceAxis_Request * rhs)
+linrob_axis__srv__ReferenceAxis_Request__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request * rhs)
@@ -62 +64,4 @@
-  linrob_axis__srv__ReferenceAxis_Request * msg = (linrob_axis__srv__ReferenceAxis_Request *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Request), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Request * msg =
+    (linrob_axis__srv__ReferenceAxis_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Request), allocator.state);
@@ -87 +92,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__init(linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size)
@@ -96 +102,5 @@
-    data = (linrob_axis__srv__ReferenceAxis_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ReferenceAxis_Request), allocator.state);
+    data =
+      (linrob_axis__srv__ReferenceAxis_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ReferenceAxis_Request),
+      allocator.state);
@@ -124 +134,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
@@ -153 +164,4 @@
-  linrob_axis__srv__ReferenceAxis_Request__Sequence * array = (linrob_axis__srv__ReferenceAxis_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Request__Sequence), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array =
+    (linrob_axis__srv__ReferenceAxis_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Request__Sequence), allocator.state);
@@ -166 +180,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
@@ -176 +191,3 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs)
@@ -269 +286,3 @@
-linrob_axis__srv__ReferenceAxis_Response__are_equal(const linrob_axis__srv__ReferenceAxis_Response * lhs, const linrob_axis__srv__ReferenceAxis_Response * rhs)
+linrob_axis__srv__ReferenceAxis_Response__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response * rhs)
@@ -310 +329,4 @@
-  linrob_axis__srv__ReferenceAxis_Response * msg = (linrob_axis__srv__ReferenceAxis_Response *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Response), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Response * msg =
+    (linrob_axis__srv__ReferenceAxis_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Response), allocator.state);
@@ -335 +357,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__init(linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size)
@@ -344 +367,5 @@
-    data = (linrob_axis__srv__ReferenceAxis_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ReferenceAxis_Response), allocator.state);
+    data =
+      (linrob_axis__srv__ReferenceAxis_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ReferenceAxis_Response),
+      allocator.state);
@@ -372 +399,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
@@ -401 +429,4 @@
-  linrob_axis__srv__ReferenceAxis_Response__Sequence * array = (linrob_axis__srv__ReferenceAxis_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Response__Sequence), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array =
+    (linrob_axis__srv__ReferenceAxis_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Response__Sequence), allocator.state);
@@ -414 +445,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
@@ -424 +456,3 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs)

Code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reference_axis__functions.h':

--- build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reference_axis__functions.h
+++ build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reference_axis__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__ReferenceAxis_Request__are_equal(const linrob_axis__srv__ReferenceAxis_Request * lhs, const linrob_axis__srv__ReferenceAxis_Request * rhs);
+linrob_axis__srv__ReferenceAxis_Request__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__init(linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__ReferenceAxis_Response__are_equal(const linrob_axis__srv__ReferenceAxis_Response * lhs, const linrob_axis__srv__ReferenceAxis_Response * rhs);
+linrob_axis__srv__ReferenceAxis_Response__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__init(linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs);

Code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reset_axis__functions.c':

--- build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reset_axis__functions.c
+++ build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reset_axis__functions.c.uncrustify
@@ -33 +33,3 @@
-linrob_axis__srv__ResetAxis_Request__are_equal(const linrob_axis__srv__ResetAxis_Request * lhs, const linrob_axis__srv__ResetAxis_Request * rhs)
+linrob_axis__srv__ResetAxis_Request__are_equal(
+  const linrob_axis__srv__ResetAxis_Request * lhs,
+  const linrob_axis__srv__ResetAxis_Request * rhs)
@@ -62 +64,4 @@
-  linrob_axis__srv__ResetAxis_Request * msg = (linrob_axis__srv__ResetAxis_Request *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Request), allocator.state);
+  linrob_axis__srv__ResetAxis_Request * msg =
+    (linrob_axis__srv__ResetAxis_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Request), allocator.state);
@@ -87 +92,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__init(linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size)
+linrob_axis__srv__ResetAxis_Request__Sequence__init(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size)
@@ -96 +102,5 @@
-    data = (linrob_axis__srv__ResetAxis_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ResetAxis_Request), allocator.state);
+    data =
+      (linrob_axis__srv__ResetAxis_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ResetAxis_Request),
+      allocator.state);
@@ -124 +134,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__fini(linrob_axis__srv__ResetAxis_Request__Sequence * array)
+linrob_axis__srv__ResetAxis_Request__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array)
@@ -153 +164,4 @@
-  linrob_axis__srv__ResetAxis_Request__Sequence * array = (linrob_axis__srv__ResetAxis_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Request__Sequence), allocator.state);
+  linrob_axis__srv__ResetAxis_Request__Sequence * array =
+    (linrob_axis__srv__ResetAxis_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Request__Sequence), allocator.state);
@@ -166 +180,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__destroy(linrob_axis__srv__ResetAxis_Request__Sequence * array)
+linrob_axis__srv__ResetAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array)
@@ -176 +191,3 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Request__Sequence * lhs, const linrob_axis__srv__ResetAxis_Request__Sequence * rhs)
+linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Request__Sequence * rhs)
@@ -269 +286,3 @@
-linrob_axis__srv__ResetAxis_Response__are_equal(const linrob_axis__srv__ResetAxis_Response * lhs, const linrob_axis__srv__ResetAxis_Response * rhs)
+linrob_axis__srv__ResetAxis_Response__are_equal(
+  const linrob_axis__srv__ResetAxis_Response * lhs,
+  const linrob_axis__srv__ResetAxis_Response * rhs)
@@ -310 +329,4 @@
-  linrob_axis__srv__ResetAxis_Response * msg = (linrob_axis__srv__ResetAxis_Response *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Response), allocator.state);
+  linrob_axis__srv__ResetAxis_Response * msg =
+    (linrob_axis__srv__ResetAxis_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Response), allocator.state);
@@ -335 +357,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__init(linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size)
+linrob_axis__srv__ResetAxis_Response__Sequence__init(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size)
@@ -344 +367,5 @@
-    data = (linrob_axis__srv__ResetAxis_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ResetAxis_Response), allocator.state);
+    data =
+      (linrob_axis__srv__ResetAxis_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ResetAxis_Response),
+      allocator.state);
@@ -372 +399,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__fini(linrob_axis__srv__ResetAxis_Response__Sequence * array)
+linrob_axis__srv__ResetAxis_Response__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array)
@@ -401 +429,4 @@
-  linrob_axis__srv__ResetAxis_Response__Sequence * array = (linrob_axis__srv__ResetAxis_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Response__Sequence), allocator.state);
+  linrob_axis__srv__ResetAxis_Response__Sequence * array =
+    (linrob_axis__srv__ResetAxis_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Response__Sequence), allocator.state);
@@ -414 +445,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__destroy(linrob_axis__srv__ResetAxis_Response__Sequence * array)
+linrob_axis__srv__ResetAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array)
@@ -424 +456,3 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Response__Sequence * lhs, const linrob_axis__srv__ResetAxis_Response__Sequence * rhs)
+linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Response__Sequence * rhs)

Code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reset_axis__functions.h':

--- build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reset_axis__functions.h
+++ build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reset_axis__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__ResetAxis_Request__are_equal(const linrob_axis__srv__ResetAxis_Request * lhs, const linrob_axis__srv__ResetAxis_Request * rhs);
+linrob_axis__srv__ResetAxis_Request__are_equal(
+  const linrob_axis__srv__ResetAxis_Request * lhs,
+  const linrob_axis__srv__ResetAxis_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__init(linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size);
+linrob_axis__srv__ResetAxis_Request__Sequence__init(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__fini(linrob_axis__srv__ResetAxis_Request__Sequence * array);
+linrob_axis__srv__ResetAxis_Request__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__destroy(linrob_axis__srv__ResetAxis_Request__Sequence * array);
+linrob_axis__srv__ResetAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Request__Sequence * lhs, const linrob_axis__srv__ResetAxis_Request__Sequence * rhs);
+linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__ResetAxis_Response__are_equal(const linrob_axis__srv__ResetAxis_Response * lhs, const linrob_axis__srv__ResetAxis_Response * rhs);
+linrob_axis__srv__ResetAxis_Response__are_equal(
+  const linrob_axis__srv__ResetAxis_Response * lhs,
+  const linrob_axis__srv__ResetAxis_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__init(linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size);
+linrob_axis__srv__ResetAxis_Response__Sequence__init(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__fini(linrob_axis__srv__ResetAxis_Response__Sequence * array);
+linrob_axis__srv__ResetAxis_Response__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__destroy(linrob_axis__srv__ResetAxis_Response__Sequence * array);
+linrob_axis__srv__ResetAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Response__Sequence * lhs, const linrob_axis__srv__ResetAxis_Response__Sequence * rhs);
+linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Response__Sequence * rhs);

Code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/start_motion__functions.c':

--- build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/start_motion__functions.c
+++ build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/start_motion__functions.c.uncrustify
@@ -37 +37,3 @@
-linrob_axis__srv__StartMotion_Request__are_equal(const linrob_axis__srv__StartMotion_Request * lhs, const linrob_axis__srv__StartMotion_Request * rhs)
+linrob_axis__srv__StartMotion_Request__are_equal(
+  const linrob_axis__srv__StartMotion_Request * lhs,
+  const linrob_axis__srv__StartMotion_Request * rhs)
@@ -78 +80,4 @@
-  linrob_axis__srv__StartMotion_Request * msg = (linrob_axis__srv__StartMotion_Request *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Request), allocator.state);
+  linrob_axis__srv__StartMotion_Request * msg =
+    (linrob_axis__srv__StartMotion_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Request), allocator.state);
@@ -103 +108,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__init(linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size)
+linrob_axis__srv__StartMotion_Request__Sequence__init(
+  linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size)
@@ -112 +118,5 @@
-    data = (linrob_axis__srv__StartMotion_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StartMotion_Request), allocator.state);
+    data =
+      (linrob_axis__srv__StartMotion_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StartMotion_Request),
+      allocator.state);
@@ -140 +150,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__fini(linrob_axis__srv__StartMotion_Request__Sequence * array)
+linrob_axis__srv__StartMotion_Request__Sequence__fini(
+  linrob_axis__srv__StartMotion_Request__Sequence * array)
@@ -169 +180,4 @@
-  linrob_axis__srv__StartMotion_Request__Sequence * array = (linrob_axis__srv__StartMotion_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Request__Sequence), allocator.state);
+  linrob_axis__srv__StartMotion_Request__Sequence * array =
+    (linrob_axis__srv__StartMotion_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Request__Sequence), allocator.state);
@@ -182 +196,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__destroy(linrob_axis__srv__StartMotion_Request__Sequence * array)
+linrob_axis__srv__StartMotion_Request__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Request__Sequence * array)
@@ -192 +207,3 @@
-linrob_axis__srv__StartMotion_Request__Sequence__are_equal(const linrob_axis__srv__StartMotion_Request__Sequence * lhs, const linrob_axis__srv__StartMotion_Request__Sequence * rhs)
+linrob_axis__srv__StartMotion_Request__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Request__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Request__Sequence * rhs)
@@ -285 +302,3 @@
-linrob_axis__srv__StartMotion_Response__are_equal(const linrob_axis__srv__StartMotion_Response * lhs, const linrob_axis__srv__StartMotion_Response * rhs)
+linrob_axis__srv__StartMotion_Response__are_equal(
+  const linrob_axis__srv__StartMotion_Response * lhs,
+  const linrob_axis__srv__StartMotion_Response * rhs)
@@ -326 +345,4 @@
-  linrob_axis__srv__StartMotion_Response * msg = (linrob_axis__srv__StartMotion_Response *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Response), allocator.state);
+  linrob_axis__srv__StartMotion_Response * msg =
+    (linrob_axis__srv__StartMotion_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Response), allocator.state);
@@ -351 +373,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__init(linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size)
+linrob_axis__srv__StartMotion_Response__Sequence__init(
+  linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size)
@@ -360 +383,5 @@
-    data = (linrob_axis__srv__StartMotion_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StartMotion_Response), allocator.state);
+    data =
+      (linrob_axis__srv__StartMotion_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StartMotion_Response),
+      allocator.state);
@@ -388 +415,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__fini(linrob_axis__srv__StartMotion_Response__Sequence * array)
+linrob_axis__srv__StartMotion_Response__Sequence__fini(
+  linrob_axis__srv__StartMotion_Response__Sequence * array)
@@ -417 +445,4 @@
-  linrob_axis__srv__StartMotion_Response__Sequence * array = (linrob_axis__srv__StartMotion_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Response__Sequence), allocator.state);
+  linrob_axis__srv__StartMotion_Response__Sequence * array =
+    (linrob_axis__srv__StartMotion_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Response__Sequence), allocator.state);
@@ -430 +461,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__destroy(linrob_axis__srv__StartMotion_Response__Sequence * array)
+linrob_axis__srv__StartMotion_Response__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Response__Sequence * array)
@@ -440 +472,3 @@
-linrob_axis__srv__StartMotion_Response__Sequence__are_equal(const linrob_axis__srv__StartMotion_Response__Sequence * lhs, const linrob_axis__srv__StartMotion_Response__Sequence * rhs)
+linrob_axis__srv__StartMotion_Response__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Response__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Response__Sequence * rhs)

Code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/start_motion__functions.h':

--- build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/start_motion__functions.h
+++ build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/start_motion__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__StartMotion_Request__are_equal(const linrob_axis__srv__StartMotion_Request * lhs, const linrob_axis__srv__StartMotion_Request * rhs);
+linrob_axis__srv__StartMotion_Request__are_equal(
+  const linrob_axis__srv__StartMotion_Request * lhs,
+  const linrob_axis__srv__StartMotion_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__init(linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size);
+linrob_axis__srv__StartMotion_Request__Sequence__init(
+  linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__fini(linrob_axis__srv__StartMotion_Request__Sequence * array);
+linrob_axis__srv__StartMotion_Request__Sequence__fini(
+  linrob_axis__srv__StartMotion_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__destroy(linrob_axis__srv__StartMotion_Request__Sequence * array);
+linrob_axis__srv__StartMotion_Request__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__StartMotion_Request__Sequence__are_equal(const linrob_axis__srv__StartMotion_Request__Sequence * lhs, const linrob_axis__srv__StartMotion_Request__Sequence * rhs);
+linrob_axis__srv__StartMotion_Request__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Request__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__StartMotion_Response__are_equal(const linrob_axis__srv__StartMotion_Response * lhs, const linrob_axis__srv__StartMotion_Response * rhs);
+linrob_axis__srv__StartMotion_Response__are_equal(
+  const linrob_axis__srv__StartMotion_Response * lhs,
+  const linrob_axis__srv__StartMotion_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__init(linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size);
+linrob_axis__srv__StartMotion_Response__Sequence__init(
+  linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__fini(linrob_axis__srv__StartMotion_Response__Sequence * array);
+linrob_axis__srv__StartMotion_Response__Sequence__fini(
+  linrob_axis__srv__StartMotion_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__destroy(linrob_axis__srv__StartMotion_Response__Sequence * array);
+linrob_axis__srv__StartMotion_Response__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__StartMotion_Response__Sequence__are_equal(const linrob_axis__srv__StartMotion_Response__Sequence * lhs, const linrob_axis__srv__StartMotion_Response__Sequence * rhs);
+linrob_axis__srv__StartMotion_Response__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Response__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Response__Sequence * rhs);

Code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/stop_axis__functions.c':

--- build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/stop_axis__functions.c
+++ build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/stop_axis__functions.c.uncrustify
@@ -33 +33,3 @@
-linrob_axis__srv__StopAxis_Request__are_equal(const linrob_axis__srv__StopAxis_Request * lhs, const linrob_axis__srv__StopAxis_Request * rhs)
+linrob_axis__srv__StopAxis_Request__are_equal(
+  const linrob_axis__srv__StopAxis_Request * lhs,
+  const linrob_axis__srv__StopAxis_Request * rhs)
@@ -62 +64,4 @@
-  linrob_axis__srv__StopAxis_Request * msg = (linrob_axis__srv__StopAxis_Request *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Request), allocator.state);
+  linrob_axis__srv__StopAxis_Request * msg =
+    (linrob_axis__srv__StopAxis_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Request), allocator.state);
@@ -87 +92,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__init(linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size)
+linrob_axis__srv__StopAxis_Request__Sequence__init(
+  linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size)
@@ -96 +102,5 @@
-    data = (linrob_axis__srv__StopAxis_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StopAxis_Request), allocator.state);
+    data =
+      (linrob_axis__srv__StopAxis_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StopAxis_Request),
+      allocator.state);
@@ -124 +134,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__fini(linrob_axis__srv__StopAxis_Request__Sequence * array)
+linrob_axis__srv__StopAxis_Request__Sequence__fini(
+  linrob_axis__srv__StopAxis_Request__Sequence * array)
@@ -153 +164,4 @@
-  linrob_axis__srv__StopAxis_Request__Sequence * array = (linrob_axis__srv__StopAxis_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Request__Sequence), allocator.state);
+  linrob_axis__srv__StopAxis_Request__Sequence * array =
+    (linrob_axis__srv__StopAxis_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Request__Sequence), allocator.state);
@@ -166 +180,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__destroy(linrob_axis__srv__StopAxis_Request__Sequence * array)
+linrob_axis__srv__StopAxis_Request__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Request__Sequence * array)
@@ -176 +191,3 @@
-linrob_axis__srv__StopAxis_Request__Sequence__are_equal(const linrob_axis__srv__StopAxis_Request__Sequence * lhs, const linrob_axis__srv__StopAxis_Request__Sequence * rhs)
+linrob_axis__srv__StopAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Request__Sequence * rhs)
@@ -269 +286,3 @@
-linrob_axis__srv__StopAxis_Response__are_equal(const linrob_axis__srv__StopAxis_Response * lhs, const linrob_axis__srv__StopAxis_Response * rhs)
+linrob_axis__srv__StopAxis_Response__are_equal(
+  const linrob_axis__srv__StopAxis_Response * lhs,
+  const linrob_axis__srv__StopAxis_Response * rhs)
@@ -310 +329,4 @@
-  linrob_axis__srv__StopAxis_Response * msg = (linrob_axis__srv__StopAxis_Response *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Response), allocator.state);
+  linrob_axis__srv__StopAxis_Response * msg =
+    (linrob_axis__srv__StopAxis_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Response), allocator.state);
@@ -335 +357,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__init(linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size)
+linrob_axis__srv__StopAxis_Response__Sequence__init(
+  linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size)
@@ -344 +367,5 @@
-    data = (linrob_axis__srv__StopAxis_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StopAxis_Response), allocator.state);
+    data =
+      (linrob_axis__srv__StopAxis_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StopAxis_Response),
+      allocator.state);
@@ -372 +399,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__fini(linrob_axis__srv__StopAxis_Response__Sequence * array)
+linrob_axis__srv__StopAxis_Response__Sequence__fini(
+  linrob_axis__srv__StopAxis_Response__Sequence * array)
@@ -401 +429,4 @@
-  linrob_axis__srv__StopAxis_Response__Sequence * array = (linrob_axis__srv__StopAxis_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Response__Sequence), allocator.state);
+  linrob_axis__srv__StopAxis_Response__Sequence * array =
+    (linrob_axis__srv__StopAxis_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Response__Sequence), allocator.state);
@@ -414 +445,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__destroy(linrob_axis__srv__StopAxis_Response__Sequence * array)
+linrob_axis__srv__StopAxis_Response__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Response__Sequence * array)
@@ -424 +456,3 @@
-linrob_axis__srv__StopAxis_Response__Sequence__are_equal(const linrob_axis__srv__StopAxis_Response__Sequence * lhs, const linrob_axis__srv__StopAxis_Response__Sequence * rhs)
+linrob_axis__srv__StopAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Response__Sequence * rhs)

Code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/stop_axis__functions.h':

--- build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/stop_axis__functions.h
+++ build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/stop_axis__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__StopAxis_Request__are_equal(const linrob_axis__srv__StopAxis_Request * lhs, const linrob_axis__srv__StopAxis_Request * rhs);
+linrob_axis__srv__StopAxis_Request__are_equal(
+  const linrob_axis__srv__StopAxis_Request * lhs,
+  const linrob_axis__srv__StopAxis_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__init(linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size);
+linrob_axis__srv__StopAxis_Request__Sequence__init(
+  linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__fini(linrob_axis__srv__StopAxis_Request__Sequence * array);
+linrob_axis__srv__StopAxis_Request__Sequence__fini(
+  linrob_axis__srv__StopAxis_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__destroy(linrob_axis__srv__StopAxis_Request__Sequence * array);
+linrob_axis__srv__StopAxis_Request__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__StopAxis_Request__Sequence__are_equal(const linrob_axis__srv__StopAxis_Request__Sequence * lhs, const linrob_axis__srv__StopAxis_Request__Sequence * rhs);
+linrob_axis__srv__StopAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__StopAxis_Response__are_equal(const linrob_axis__srv__StopAxis_Response * lhs, const linrob_axis__srv__StopAxis_Response * rhs);
+linrob_axis__srv__StopAxis_Response__are_equal(
+  const linrob_axis__srv__StopAxis_Response * lhs,
+  const linrob_axis__srv__StopAxis_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__init(linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size);
+linrob_axis__srv__StopAxis_Response__Sequence__init(
+  linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__fini(linrob_axis__srv__StopAxis_Response__Sequence * array);
+linrob_axis__srv__StopAxis_Response__Sequence__fini(
+  linrob_axis__srv__StopAxis_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__destroy(linrob_axis__srv__StopAxis_Response__Sequence * array);
+linrob_axis__srv__StopAxis_Response__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__StopAxis_Response__Sequence__are_equal(const linrob_axis__srv__StopAxis_Response__Sequence * lhs, const linrob_axis__srv__StopAxis_Response__Sequence * rhs);
+linrob_axis__srv__StopAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Response__Sequence * rhs);

Code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reference_axis__builder.hpp':

--- build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reference_axis__builder.hpp
+++ build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reference_axis__builder.hpp.uncrustify
@@ -52 +52,2 @@
-  ::linrob_axis::srv::ReferenceAxis_Response message(::linrob_axis::srv::ReferenceAxis_Response::_message_type arg)
+  ::linrob_axis::srv::ReferenceAxis_Response message(
+    ::linrob_axis::srv::ReferenceAxis_Response::_message_type arg)
@@ -68 +69,2 @@
-  Init_ReferenceAxis_Response_message success(::linrob_axis::srv::ReferenceAxis_Response::_success_type arg)
+  Init_ReferenceAxis_Response_message success(
+    ::linrob_axis::srv::ReferenceAxis_Response::_success_type arg)

Code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reference_axis__struct.hpp':

--- build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reference_axis__struct.hpp
+++ build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reference_axis__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit ReferenceAxis_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -45 +46,3 @@
-  explicit ReferenceAxis_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -143 +146,2 @@
-  explicit ReferenceAxis_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -153 +157,3 @@
-  explicit ReferenceAxis_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -169 +175,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -180 +187,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reset_axis__builder.hpp':

--- build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reset_axis__builder.hpp
+++ build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reset_axis__builder.hpp.uncrustify
@@ -52 +52,2 @@
-  ::linrob_axis::srv::ResetAxis_Response message(::linrob_axis::srv::ResetAxis_Response::_message_type arg)
+  ::linrob_axis::srv::ResetAxis_Response message(
+    ::linrob_axis::srv::ResetAxis_Response::_message_type arg)

Code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reset_axis__struct.hpp':

--- build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reset_axis__struct.hpp
+++ build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reset_axis__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit ResetAxis_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -45 +46,3 @@
-  explicit ResetAxis_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -143 +146,2 @@
-  explicit ResetAxis_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -153 +157,3 @@
-  explicit ResetAxis_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -169 +175,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -180 +187,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/start_motion__builder.hpp':

--- build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/start_motion__builder.hpp
+++ build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/start_motion__builder.hpp.uncrustify
@@ -30 +30,2 @@
-  ::linrob_axis::srv::StartMotion_Request velocity(::linrob_axis::srv::StartMotion_Request::_velocity_type arg)
+  ::linrob_axis::srv::StartMotion_Request velocity(
+    ::linrob_axis::srv::StartMotion_Request::_velocity_type arg)
@@ -46 +47,2 @@
-  Init_StartMotion_Request_velocity target_position(::linrob_axis::srv::StartMotion_Request::_target_position_type arg)
+  Init_StartMotion_Request_velocity target_position(
+    ::linrob_axis::srv::StartMotion_Request::_target_position_type arg)
@@ -62 +64,2 @@
-  Init_StartMotion_Request_target_position start(::linrob_axis::srv::StartMotion_Request::_start_type arg)
+  Init_StartMotion_Request_target_position start(
+    ::linrob_axis::srv::StartMotion_Request::_start_type arg)
@@ -104 +107,2 @@
-  ::linrob_axis::srv::StartMotion_Response message(::linrob_axis::srv::StartMotion_Response::_message_type arg)
+  ::linrob_axis::srv::StartMotion_Response message(
+    ::linrob_axis::srv::StartMotion_Response::_message_type arg)
@@ -120 +124,2 @@
-  Init_StartMotion_Response_message success(::linrob_axis::srv::StartMotion_Response::_success_type arg)
+  Init_StartMotion_Response_message success(
+    ::linrob_axis::srv::StartMotion_Response::_success_type arg)

Code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/start_motion__struct.hpp':

--- build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/start_motion__struct.hpp
+++ build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/start_motion__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit StartMotion_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -47 +48,3 @@
-  explicit StartMotion_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -178 +181,2 @@
-  explicit StartMotion_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -188 +192,3 @@
-  explicit StartMotion_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -204 +210,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -215 +222,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/stop_axis__builder.hpp':

--- build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/stop_axis__builder.hpp
+++ build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/stop_axis__builder.hpp.uncrustify
@@ -52 +52,2 @@
-  ::linrob_axis::srv::StopAxis_Response message(::linrob_axis::srv::StopAxis_Response::_message_type arg)
+  ::linrob_axis::srv::StopAxis_Response message(
+    ::linrob_axis::srv::StopAxis_Response::_message_type arg)

Code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/stop_axis__struct.hpp':

--- build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/stop_axis__struct.hpp
+++ build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/stop_axis__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit StopAxis_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -45 +46,3 @@
-  explicit StopAxis_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -143 +146,2 @@
-  explicit StopAxis_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -153 +157,3 @@
-  explicit StopAxis_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -169 +175,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -180 +187,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'build/linrob_axis/rosidl_generator_py/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c':

--- build/linrob_axis/rosidl_generator_py/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c
+++ build/linrob_axis/rosidl_generator_py/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'build/linrob_axis/rosidl_generator_py/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c':

--- build/linrob_axis/rosidl_generator_py/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c
+++ build/linrob_axis/rosidl_generator_py/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'build/linrob_axis/rosidl_generator_py/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c':

--- build/linrob_axis/rosidl_generator_py/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c
+++ build/linrob_axis/rosidl_generator_py/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_reference_axis_s.c':

--- build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_reference_axis_s.c
+++ build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_reference_axis_s.c.uncrustify
@@ -21 +21,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -50 +52,4 @@
-    assert(strncmp("linrob_axis.srv._reference_axis.ReferenceAxis_Request", full_classname_dest, 53) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._reference_axis.ReferenceAxis_Request", full_classname_dest,
+        53) == 0);
@@ -100 +105,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -129 +136,4 @@
-    assert(strncmp("linrob_axis.srv._reference_axis.ReferenceAxis_Response", full_classname_dest, 54) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._reference_axis.ReferenceAxis_Response", full_classname_dest,
+        54) == 0);
@@ -177 +187,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;

Code style divergence in file 'build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_reset_axis_s.c':

--- build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_reset_axis_s.c
+++ build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_reset_axis_s.c.uncrustify
@@ -177 +177,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;

Code style divergence in file 'build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_start_motion_s.c':

--- build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_start_motion_s.c
+++ build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_start_motion_s.c.uncrustify
@@ -21 +21,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -50 +52,4 @@
-    assert(strncmp("linrob_axis.srv._start_motion.StartMotion_Request", full_classname_dest, 49) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._start_motion.StartMotion_Request", full_classname_dest,
+        49) == 0);
@@ -101 +106,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -159 +165,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -188 +196,4 @@
-    assert(strncmp("linrob_axis.srv._start_motion.StartMotion_Response", full_classname_dest, 50) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._start_motion.StartMotion_Response", full_classname_dest,
+        50) == 0);
@@ -236 +247,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;

Code style divergence in file 'build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_stop_axis_s.c':

--- build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_stop_axis_s.c
+++ build/linrob_axis/rosidl_generator_py/linrob_axis/srv/_stop_axis_s.c.uncrustify
@@ -177 +177,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/reference_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/reference_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/reference_axis__type_support.cpp.uncrustify
@@ -29 +29,2 @@
-static const _ReferenceAxis_Request_type_support_ids_t _ReferenceAxis_Request_message_typesupport_ids = {
+static const _ReferenceAxis_Request_type_support_ids_t
+  _ReferenceAxis_Request_message_typesupport_ids = {
@@ -44,4 +45,11 @@
-static const _ReferenceAxis_Request_type_support_symbol_names_t _ReferenceAxis_Request_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Request)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)),
+static const _ReferenceAxis_Request_type_support_symbol_names_t
+  _ReferenceAxis_Request_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, ReferenceAxis_Request)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, ReferenceAxis_Request)),
@@ -56 +64,2 @@
-static _ReferenceAxis_Request_type_support_data_t _ReferenceAxis_Request_message_typesupport_data = {
+static _ReferenceAxis_Request_type_support_data_t _ReferenceAxis_Request_message_typesupport_data =
+{
@@ -89,2 +98,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_c::ReferenceAxis_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_c::
+         ReferenceAxis_Request_message_type_support_handle;
@@ -130 +142,2 @@
-static const _ReferenceAxis_Response_type_support_ids_t _ReferenceAxis_Response_message_typesupport_ids = {
+static const _ReferenceAxis_Response_type_support_ids_t
+  _ReferenceAxis_Response_message_typesupport_ids = {
@@ -145,4 +158,11 @@
-static const _ReferenceAxis_Response_type_support_symbol_names_t _ReferenceAxis_Response_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Response)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)),
+static const _ReferenceAxis_Response_type_support_symbol_names_t
+  _ReferenceAxis_Response_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, ReferenceAxis_Response)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, ReferenceAxis_Response)),
@@ -157,6 +177,8 @@
-static _ReferenceAxis_Response_type_support_data_t _ReferenceAxis_Response_message_typesupport_data = {
-  {
-    0,  // will store the shared library later
-    0,  // will store the shared library later
-  }
-};
+static _ReferenceAxis_Response_type_support_data_t _ReferenceAxis_Response_message_typesupport_data
+  =
+  {
+  {
+    0,  // will store the shared library later
+    0,  // will store the shared library later
+  }
+  };
@@ -190,2 +212,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_c::ReferenceAxis_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_c::
+         ReferenceAxis_Response_message_type_support_handle;
@@ -240,4 +265,11 @@
-static const _ReferenceAxis_type_support_symbol_names_t _ReferenceAxis_service_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis)),
+static const _ReferenceAxis_type_support_symbol_names_t
+  _ReferenceAxis_service_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, ReferenceAxis)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, ReferenceAxis)),
@@ -285 +317,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/reset_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/reset_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/reset_axis__type_support.cpp.uncrustify
@@ -44,4 +44,11 @@
-static const _ResetAxis_Request_type_support_symbol_names_t _ResetAxis_Request_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Request)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)),
+static const _ResetAxis_Request_type_support_symbol_names_t
+  _ResetAxis_Request_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, ResetAxis_Request)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, ResetAxis_Request)),
@@ -89 +96,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis_Request)() {
@@ -145,4 +154,11 @@
-static const _ResetAxis_Response_type_support_symbol_names_t _ResetAxis_Response_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Response)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)),
+static const _ResetAxis_Response_type_support_symbol_names_t
+  _ResetAxis_Response_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, ResetAxis_Response)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, ResetAxis_Response)),
@@ -190 +206,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis_Response)() {
@@ -242,2 +260,8 @@
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, ResetAxis)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, ResetAxis)),
@@ -285 +309,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/start_motion__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/start_motion__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/start_motion__type_support.cpp.uncrustify
@@ -29 +29,2 @@
-static const _StartMotion_Request_type_support_ids_t _StartMotion_Request_message_typesupport_ids = {
+static const _StartMotion_Request_type_support_ids_t _StartMotion_Request_message_typesupport_ids =
+{
@@ -44,4 +45,11 @@
-static const _StartMotion_Request_type_support_symbol_names_t _StartMotion_Request_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Request)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)),
+static const _StartMotion_Request_type_support_symbol_names_t
+  _StartMotion_Request_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, StartMotion_Request)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, StartMotion_Request)),
@@ -89 +97,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion_Request)() {
@@ -130 +140,3 @@
-static const _StartMotion_Response_type_support_ids_t _StartMotion_Response_message_typesupport_ids = {
+static const _StartMotion_Response_type_support_ids_t _StartMotion_Response_message_typesupport_ids
+  =
+  {
@@ -135 +147 @@
-};
+  };
@@ -145,4 +157,11 @@
-static const _StartMotion_Response_type_support_symbol_names_t _StartMotion_Response_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Response)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)),
+static const _StartMotion_Response_type_support_symbol_names_t
+  _StartMotion_Response_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, StartMotion_Response)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, StartMotion_Response)),
@@ -190 +209,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion_Response)() {
@@ -240,6 +261,14 @@
-static const _StartMotion_type_support_symbol_names_t _StartMotion_service_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion)),
-  }
-};
+static const _StartMotion_type_support_symbol_names_t _StartMotion_service_typesupport_symbol_names
+  =
+  {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, StartMotion)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, StartMotion)),
+  }
+  };
@@ -285 +314,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/stop_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/stop_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_c/linrob_axis/srv/stop_axis__type_support.cpp.uncrustify
@@ -44,4 +44,11 @@
-static const _StopAxis_Request_type_support_symbol_names_t _StopAxis_Request_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Request)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)),
+static const _StopAxis_Request_type_support_symbol_names_t
+  _StopAxis_Request_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, StopAxis_Request)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, StopAxis_Request)),
@@ -89 +96,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis_Request)() {
@@ -145,4 +154,11 @@
-static const _StopAxis_Response_type_support_symbol_names_t _StopAxis_Response_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Response)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)),
+static const _StopAxis_Response_type_support_symbol_names_t
+  _StopAxis_Response_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, StopAxis_Response)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, StopAxis_Response)),
@@ -190 +206,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis_Response)() {
@@ -242,2 +260,8 @@
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_c,
+        linrob_axis, srv, StopAxis)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_c,
+        linrob_axis, srv, StopAxis)),
@@ -285 +309,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/reference_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/reference_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/reference_axis__type_support.cpp.uncrustify
@@ -29 +29,2 @@
-static const _ReferenceAxis_Request_type_support_ids_t _ReferenceAxis_Request_message_typesupport_ids = {
+static const _ReferenceAxis_Request_type_support_ids_t
+  _ReferenceAxis_Request_message_typesupport_ids = {
@@ -44,4 +45,11 @@
-static const _ReferenceAxis_Request_type_support_symbol_names_t _ReferenceAxis_Request_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Request)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Request)),
+static const _ReferenceAxis_Request_type_support_symbol_names_t
+  _ReferenceAxis_Request_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, ReferenceAxis_Request)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, ReferenceAxis_Request)),
@@ -56 +64,2 @@
-static _ReferenceAxis_Request_type_support_data_t _ReferenceAxis_Request_message_typesupport_data = {
+static _ReferenceAxis_Request_type_support_data_t _ReferenceAxis_Request_message_typesupport_data =
+{
@@ -91 +100,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_cpp::ReferenceAxis_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_cpp::
+         ReferenceAxis_Request_message_type_support_handle;
@@ -101 +111,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, ReferenceAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  ReferenceAxis_Request)() {
@@ -143 +155,2 @@
-static const _ReferenceAxis_Response_type_support_ids_t _ReferenceAxis_Response_message_typesupport_ids = {
+static const _ReferenceAxis_Response_type_support_ids_t
+  _ReferenceAxis_Response_message_typesupport_ids = {
@@ -158,4 +171,11 @@
-static const _ReferenceAxis_Response_type_support_symbol_names_t _ReferenceAxis_Response_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Response)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Response)),
+static const _ReferenceAxis_Response_type_support_symbol_names_t
+  _ReferenceAxis_Response_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, ReferenceAxis_Response)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, ReferenceAxis_Response)),
@@ -170,6 +190,8 @@
-static _ReferenceAxis_Response_type_support_data_t _ReferenceAxis_Response_message_typesupport_data = {
-  {
-    0,  // will store the shared library later
-    0,  // will store the shared library later
-  }
-};
+static _ReferenceAxis_Response_type_support_data_t _ReferenceAxis_Response_message_typesupport_data
+  =
+  {
+  {
+    0,  // will store the shared library later
+    0,  // will store the shared library later
+  }
+  };
@@ -205 +227,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_cpp::ReferenceAxis_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_cpp::
+         ReferenceAxis_Response_message_type_support_handle;
@@ -215 +238,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, ReferenceAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  ReferenceAxis_Response)() {
@@ -269,4 +294,11 @@
-static const _ReferenceAxis_type_support_symbol_names_t _ReferenceAxis_service_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis)),
+static const _ReferenceAxis_type_support_symbol_names_t
+  _ReferenceAxis_service_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, ReferenceAxis)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, ReferenceAxis)),
@@ -328 +360,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, ReferenceAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  ReferenceAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/reset_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/reset_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/reset_axis__type_support.cpp.uncrustify
@@ -44,4 +44,11 @@
-static const _ResetAxis_Request_type_support_symbol_names_t _ResetAxis_Request_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Request)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Request)),
+static const _ResetAxis_Request_type_support_symbol_names_t
+  _ResetAxis_Request_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, ResetAxis_Request)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, ResetAxis_Request)),
@@ -101 +108,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, ResetAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  ResetAxis_Request)() {
@@ -158,4 +167,11 @@
-static const _ResetAxis_Response_type_support_symbol_names_t _ResetAxis_Response_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Response)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Response)),
+static const _ResetAxis_Response_type_support_symbol_names_t
+  _ResetAxis_Response_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, ResetAxis_Response)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, ResetAxis_Response)),
@@ -215 +231,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, ResetAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  ResetAxis_Response)() {
@@ -271,2 +289,8 @@
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, ResetAxis)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, ResetAxis)),
@@ -328 +352,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, ResetAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  ResetAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/start_motion__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/start_motion__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/start_motion__type_support.cpp.uncrustify
@@ -29 +29,2 @@
-static const _StartMotion_Request_type_support_ids_t _StartMotion_Request_message_typesupport_ids = {
+static const _StartMotion_Request_type_support_ids_t _StartMotion_Request_message_typesupport_ids =
+{
@@ -44,4 +45,11 @@
-static const _StartMotion_Request_type_support_symbol_names_t _StartMotion_Request_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Request)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Request)),
+static const _StartMotion_Request_type_support_symbol_names_t
+  _StartMotion_Request_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, StartMotion_Request)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, StartMotion_Request)),
@@ -91 +99,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_cpp::StartMotion_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_cpp::
+         StartMotion_Request_message_type_support_handle;
@@ -101 +110,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, StartMotion_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  StartMotion_Request)() {
@@ -143 +154,3 @@
-static const _StartMotion_Response_type_support_ids_t _StartMotion_Response_message_typesupport_ids = {
+static const _StartMotion_Response_type_support_ids_t _StartMotion_Response_message_typesupport_ids
+  =
+  {
@@ -148 +161 @@
-};
+  };
@@ -158,4 +171,11 @@
-static const _StartMotion_Response_type_support_symbol_names_t _StartMotion_Response_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Response)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Response)),
+static const _StartMotion_Response_type_support_symbol_names_t
+  _StartMotion_Response_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, StartMotion_Response)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, StartMotion_Response)),
@@ -205 +225,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_cpp::StartMotion_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_cpp::
+         StartMotion_Response_message_type_support_handle;
@@ -215 +236,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, StartMotion_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  StartMotion_Response)() {
@@ -269,6 +292,14 @@
-static const _StartMotion_type_support_symbol_names_t _StartMotion_service_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion)),
-  }
-};
+static const _StartMotion_type_support_symbol_names_t _StartMotion_service_typesupport_symbol_names
+  =
+  {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, StartMotion)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, StartMotion)),
+  }
+  };
@@ -328 +359,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, StartMotion)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  StartMotion)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/stop_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/stop_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_cpp/linrob_axis/srv/stop_axis__type_support.cpp.uncrustify
@@ -44,4 +44,11 @@
-static const _StopAxis_Request_type_support_symbol_names_t _StopAxis_Request_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Request)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Request)),
+static const _StopAxis_Request_type_support_symbol_names_t
+  _StopAxis_Request_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, StopAxis_Request)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, StopAxis_Request)),
@@ -101 +108,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, StopAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  StopAxis_Request)() {
@@ -158,4 +167,11 @@
-static const _StopAxis_Response_type_support_symbol_names_t _StopAxis_Response_message_typesupport_symbol_names = {
-  {
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Response)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Response)),
+static const _StopAxis_Response_type_support_symbol_names_t
+  _StopAxis_Response_message_typesupport_symbol_names = {
+  {
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, StopAxis_Response)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, StopAxis_Response)),
@@ -215 +231,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, StopAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  StopAxis_Response)() {
@@ -271,2 +289,8 @@
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis)),
-    STRINGIFY(ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_fastrtps_cpp,
+        linrob_axis, srv, StopAxis)),
+    STRINGIFY(
+      ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+        rosidl_typesupport_introspection_cpp,
+        linrob_axis, srv, StopAxis)),
@@ -328 +352,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_cpp, linrob_axis, srv, StopAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_cpp, linrob_axis, srv,
+  StopAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/msg/rosidl_typesupport_fastrtps_c__visibility_control.h':

--- build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/msg/rosidl_typesupport_fastrtps_c__visibility_control.h
+++ build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/msg/rosidl_typesupport_fastrtps_c__visibility_control.h.uncrustify
@@ -25 +25,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_C_EXPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_C_EXPORT_linrob_axis
@@ -27 +28,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_C_IMPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_C_IMPORT_linrob_axis

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_c.h':

--- build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_c.h
+++ build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reference_axis__type_support_c.cpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reference_axis__type_support_c.cpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reference_axis__type_support_c.cpp.uncrustify
@@ -51 +51,2 @@
-  const _ReferenceAxis_Request__ros_msg_type * ros_message = static_cast<const _ReferenceAxis_Request__ros_msg_type *>(untyped_ros_message);
+  const _ReferenceAxis_Request__ros_msg_type * ros_message =
+    static_cast<const _ReferenceAxis_Request__ros_msg_type *>(untyped_ros_message);
@@ -68 +69,2 @@
-  _ReferenceAxis_Request__ros_msg_type * ros_message = static_cast<_ReferenceAxis_Request__ros_msg_type *>(untyped_ros_message);
+  _ReferenceAxis_Request__ros_msg_type * ros_message =
+    static_cast<_ReferenceAxis_Request__ros_msg_type *>(untyped_ros_message);
@@ -82 +84,2 @@
-  const _ReferenceAxis_Request__ros_msg_type * ros_message = static_cast<const _ReferenceAxis_Request__ros_msg_type *>(untyped_ros_message);
+  const _ReferenceAxis_Request__ros_msg_type * ros_message =
+    static_cast<const _ReferenceAxis_Request__ros_msg_type *>(untyped_ros_message);
@@ -161 +164,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -182 +186,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis_Request)() {
@@ -246 +252,2 @@
-  const _ReferenceAxis_Response__ros_msg_type * ros_message = static_cast<const _ReferenceAxis_Response__ros_msg_type *>(untyped_ros_message);
+  const _ReferenceAxis_Response__ros_msg_type * ros_message =
+    static_cast<const _ReferenceAxis_Response__ros_msg_type *>(untyped_ros_message);
@@ -277 +284,2 @@
-  _ReferenceAxis_Response__ros_msg_type * ros_message = static_cast<_ReferenceAxis_Response__ros_msg_type *>(untyped_ros_message);
+  _ReferenceAxis_Response__ros_msg_type * ros_message =
+    static_cast<_ReferenceAxis_Response__ros_msg_type *>(untyped_ros_message);
@@ -309 +317,2 @@
-  const _ReferenceAxis_Response__ros_msg_type * ros_message = static_cast<const _ReferenceAxis_Response__ros_msg_type *>(untyped_ros_message);
+  const _ReferenceAxis_Response__ros_msg_type * ros_message =
+    static_cast<const _ReferenceAxis_Response__ros_msg_type *>(untyped_ros_message);
@@ -404 +413,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -425 +435,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis_Response)() {
@@ -449,2 +461,6 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Request)(),
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Response)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+    ReferenceAxis_Request)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+    ReferenceAxis_Response)(),
@@ -460 +476,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_c.h':

--- build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_c.h
+++ build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reset_axis__type_support_c.cpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reset_axis__type_support_c.cpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/reset_axis__type_support_c.cpp.uncrustify
@@ -51 +51,2 @@
-  const _ResetAxis_Request__ros_msg_type * ros_message = static_cast<const _ResetAxis_Request__ros_msg_type *>(untyped_ros_message);
+  const _ResetAxis_Request__ros_msg_type * ros_message =
+    static_cast<const _ResetAxis_Request__ros_msg_type *>(untyped_ros_message);
@@ -68 +69,2 @@
-  _ResetAxis_Request__ros_msg_type * ros_message = static_cast<_ResetAxis_Request__ros_msg_type *>(untyped_ros_message);
+  _ResetAxis_Request__ros_msg_type * ros_message =
+    static_cast<_ResetAxis_Request__ros_msg_type *>(untyped_ros_message);
@@ -82 +84,2 @@
-  const _ResetAxis_Request__ros_msg_type * ros_message = static_cast<const _ResetAxis_Request__ros_msg_type *>(untyped_ros_message);
+  const _ResetAxis_Request__ros_msg_type * ros_message =
+    static_cast<const _ResetAxis_Request__ros_msg_type *>(untyped_ros_message);
@@ -161 +164,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -182 +186,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis_Request)() {
@@ -246 +252,2 @@
-  const _ResetAxis_Response__ros_msg_type * ros_message = static_cast<const _ResetAxis_Response__ros_msg_type *>(untyped_ros_message);
+  const _ResetAxis_Response__ros_msg_type * ros_message =
+    static_cast<const _ResetAxis_Response__ros_msg_type *>(untyped_ros_message);
@@ -277 +284,2 @@
-  _ResetAxis_Response__ros_msg_type * ros_message = static_cast<_ResetAxis_Response__ros_msg_type *>(untyped_ros_message);
+  _ResetAxis_Response__ros_msg_type * ros_message =
+    static_cast<_ResetAxis_Response__ros_msg_type *>(untyped_ros_message);
@@ -309 +317,2 @@
-  const _ResetAxis_Response__ros_msg_type * ros_message = static_cast<const _ResetAxis_Response__ros_msg_type *>(untyped_ros_message);
+  const _ResetAxis_Response__ros_msg_type * ros_message =
+    static_cast<const _ResetAxis_Response__ros_msg_type *>(untyped_ros_message);
@@ -404 +413,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -425 +435,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis_Response)() {
@@ -449,2 +461,6 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Request)(),
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Response)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+    ResetAxis_Request)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+    ResetAxis_Response)(),
@@ -460 +476,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_c.h':

--- build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_c.h
+++ build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/start_motion__type_support_c.cpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/start_motion__type_support_c.cpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/start_motion__type_support_c.cpp.uncrustify
@@ -51 +51,2 @@
-  const _StartMotion_Request__ros_msg_type * ros_message = static_cast<const _StartMotion_Request__ros_msg_type *>(untyped_ros_message);
+  const _StartMotion_Request__ros_msg_type * ros_message =
+    static_cast<const _StartMotion_Request__ros_msg_type *>(untyped_ros_message);
@@ -78 +79,2 @@
-  _StartMotion_Request__ros_msg_type * ros_message = static_cast<_StartMotion_Request__ros_msg_type *>(untyped_ros_message);
+  _StartMotion_Request__ros_msg_type * ros_message =
+    static_cast<_StartMotion_Request__ros_msg_type *>(untyped_ros_message);
@@ -104 +106,2 @@
-  const _StartMotion_Request__ros_msg_type * ros_message = static_cast<const _StartMotion_Request__ros_msg_type *>(untyped_ros_message);
+  const _StartMotion_Request__ros_msg_type * ros_message =
+    static_cast<const _StartMotion_Request__ros_msg_type *>(untyped_ros_message);
@@ -211 +214,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -232 +236,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion_Request)() {
@@ -296 +302,2 @@
-  const _StartMotion_Response__ros_msg_type * ros_message = static_cast<const _StartMotion_Response__ros_msg_type *>(untyped_ros_message);
+  const _StartMotion_Response__ros_msg_type * ros_message =
+    static_cast<const _StartMotion_Response__ros_msg_type *>(untyped_ros_message);
@@ -327 +334,2 @@
-  _StartMotion_Response__ros_msg_type * ros_message = static_cast<_StartMotion_Response__ros_msg_type *>(untyped_ros_message);
+  _StartMotion_Response__ros_msg_type * ros_message =
+    static_cast<_StartMotion_Response__ros_msg_type *>(untyped_ros_message);
@@ -359 +367,2 @@
-  const _StartMotion_Response__ros_msg_type * ros_message = static_cast<const _StartMotion_Response__ros_msg_type *>(untyped_ros_message);
+  const _StartMotion_Response__ros_msg_type * ros_message =
+    static_cast<const _StartMotion_Response__ros_msg_type *>(untyped_ros_message);
@@ -454 +463,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -475 +485,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion_Response)() {
@@ -499,2 +511,6 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Request)(),
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Response)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+    StartMotion_Request)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+    StartMotion_Response)(),
@@ -510 +526,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_c.h':

--- build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_c.h
+++ build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/stop_axis__type_support_c.cpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/stop_axis__type_support_c.cpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_c/linrob_axis/srv/detail/stop_axis__type_support_c.cpp.uncrustify
@@ -51 +51,2 @@
-  const _StopAxis_Request__ros_msg_type * ros_message = static_cast<const _StopAxis_Request__ros_msg_type *>(untyped_ros_message);
+  const _StopAxis_Request__ros_msg_type * ros_message =
+    static_cast<const _StopAxis_Request__ros_msg_type *>(untyped_ros_message);
@@ -68 +69,2 @@
-  _StopAxis_Request__ros_msg_type * ros_message = static_cast<_StopAxis_Request__ros_msg_type *>(untyped_ros_message);
+  _StopAxis_Request__ros_msg_type * ros_message =
+    static_cast<_StopAxis_Request__ros_msg_type *>(untyped_ros_message);
@@ -82 +84,2 @@
-  const _StopAxis_Request__ros_msg_type * ros_message = static_cast<const _StopAxis_Request__ros_msg_type *>(untyped_ros_message);
+  const _StopAxis_Request__ros_msg_type * ros_message =
+    static_cast<const _StopAxis_Request__ros_msg_type *>(untyped_ros_message);
@@ -161 +164,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -182 +186,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis_Request)() {
@@ -246 +252,2 @@
-  const _StopAxis_Response__ros_msg_type * ros_message = static_cast<const _StopAxis_Response__ros_msg_type *>(untyped_ros_message);
+  const _StopAxis_Response__ros_msg_type * ros_message =
+    static_cast<const _StopAxis_Response__ros_msg_type *>(untyped_ros_message);
@@ -277 +284,2 @@
-  _StopAxis_Response__ros_msg_type * ros_message = static_cast<_StopAxis_Response__ros_msg_type *>(untyped_ros_message);
+  _StopAxis_Response__ros_msg_type * ros_message =
+    static_cast<_StopAxis_Response__ros_msg_type *>(untyped_ros_message);
@@ -309 +317,2 @@
-  const _StopAxis_Response__ros_msg_type * ros_message = static_cast<const _StopAxis_Response__ros_msg_type *>(untyped_ros_message);
+  const _StopAxis_Response__ros_msg_type * ros_message =
+    static_cast<const _StopAxis_Response__ros_msg_type *>(untyped_ros_message);
@@ -404 +413,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -425 +435,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis_Response)() {
@@ -449,2 +461,6 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Request)(),
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Response)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+    StopAxis_Request)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+    StopAxis_Response)(),
@@ -460 +476,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h':

--- build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h
+++ build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h.uncrustify
@@ -25 +25,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_CPP_EXPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_CPP_EXPORT_linrob_axis
@@ -27 +28,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_CPP_IMPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_CPP_IMPORT_linrob_axis

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/reference_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/reference_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/reference_axis__type_support.cpp.uncrustify
@@ -158 +158,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -202 +203,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  ReferenceAxis_Request)() {
@@ -396 +399,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -440 +444,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  ReferenceAxis_Response)() {
@@ -466,2 +472,6 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Request)(),
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Response)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_cpp, linrob_axis,
+    srv, ReferenceAxis_Request)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_cpp, linrob_axis,
+    srv, ReferenceAxis_Response)(),
@@ -501 +511,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  ReferenceAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/reset_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/reset_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/reset_axis__type_support.cpp.uncrustify
@@ -158 +158,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -202 +203,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  ResetAxis_Request)() {
@@ -396 +399,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -440 +444,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  ResetAxis_Response)() {
@@ -466,2 +472,6 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Request)(),
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Response)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_cpp, linrob_axis,
+    srv, ResetAxis_Request)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_cpp, linrob_axis,
+    srv, ResetAxis_Response)(),
@@ -501 +511,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  ResetAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/start_motion__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/start_motion__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/start_motion__type_support.cpp.uncrustify
@@ -202 +202,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -246 +247,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  StartMotion_Request)() {
@@ -440 +443,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -484 +488,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  StartMotion_Response)() {
@@ -510,2 +516,6 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Request)(),
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Response)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_cpp, linrob_axis,
+    srv, StartMotion_Request)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_cpp, linrob_axis,
+    srv, StartMotion_Response)(),
@@ -545 +555,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  StartMotion)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/stop_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/stop_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/dds_fastrtps/stop_axis__type_support.cpp.uncrustify
@@ -158 +158,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -202 +203,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Request)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  StopAxis_Request)() {
@@ -396 +399,2 @@
-    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE : ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
+    full_bounded ? ROSIDL_TYPESUPPORT_FASTRTPS_BOUNDED_TYPE :
+    ROSIDL_TYPESUPPORT_FASTRTPS_UNBOUNDED_TYPE;
@@ -440 +444,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Response)() {
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  StopAxis_Response)() {
@@ -466,2 +472,6 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Request)(),
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Response)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_cpp, linrob_axis,
+    srv, StopAxis_Request)(),
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+    rosidl_typesupport_fastrtps_cpp, linrob_axis,
+    srv, StopAxis_Response)(),
@@ -501 +511,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_cpp, linrob_axis, srv,
+  StopAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_cpp.hpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_cpp.hpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ReferenceAxis_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ReferenceAxis_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ReferenceAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_cpp.hpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_cpp.hpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ResetAxis_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ResetAxis_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ResetAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_cpp.hpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_cpp.hpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StartMotion_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StartMotion_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StartMotion)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_cpp.hpp':

--- build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_cpp.hpp
+++ build/linrob_axis/rosidl_typesupport_fastrtps_cpp/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StopAxis_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StopAxis_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StopAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/msg/rosidl_typesupport_introspection_c__visibility_control.h':

--- build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/msg/rosidl_typesupport_introspection_c__visibility_control.h
+++ build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/msg/rosidl_typesupport_introspection_c__visibility_control.h.uncrustify
@@ -25 +25,2 @@
-    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_INTROSPECTION_C_EXPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_INTROSPECTION_C_EXPORT_linrob_axis
@@ -27 +28,2 @@
-    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_INTROSPECTION_C_IMPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_INTROSPECTION_C_IMPORT_linrob_axis
@@ -33 +35,2 @@
-    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis __attribute__ ((visibility("default")))
+    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis __attribute__ ((visibility( \
+      "default")))

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_c.h':

--- build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_c.h
+++ build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reference_axis__type_support.c':

--- build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reference_axis__type_support.c
+++ build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reference_axis__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_init_function(
+void
+linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_member_array[1] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_member_array
+[1] = {
@@ -54 +59,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members
+  =
+  {
@@ -62 +70 @@
-};
+  };
@@ -66 +74,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle
+  =
+  {
@@ -68 +79,2 @@
-  &linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members,
+  &
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members,
@@ -70 +82 @@
-};
+  };
@@ -74,3 +86,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)() {
-  if (!linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Request)() {
+  if (!
+    linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -79 +97,2 @@
-  return &linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle;
@@ -112 +131,2 @@
-void linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_init_function(
+void
+linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_init_function(
@@ -121 +141,3 @@
-void linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_fini_function(
+  void * message_memory)
@@ -126 +148,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_member_array
+[2] = {
@@ -163 +187,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members
+  =
+  {
@@ -171 +198 @@
-};
+  };
@@ -175 +202,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle
+  =
+  {
@@ -177 +207,2 @@
-  &linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members,
+  &
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members,
@@ -179 +210 @@
-};
+  };
@@ -183,3 +214,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)() {
-  if (!linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Response)() {
+  if (!
+    linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -188 +225,2 @@
-  return &linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle;
@@ -204 +242,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members
+  =
+  {
@@ -212,3 +253,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+  =
+  {
@@ -216 +260,2 @@
-  &linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members,
+  &
+  linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members,
@@ -218 +263 @@
-};
+  };
@@ -222 +267,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Request)();
@@ -225 +272,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Response)();
@@ -229,3 +278,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis)() {
-  if (!linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis)() {
+  if (!
+    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+    .typesupport_identifier =
@@ -235 +290,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+    .data;
@@ -240 +297,4 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ReferenceAxis_Request)()->data;
@@ -245,5 +305,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ReferenceAxis_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle;
+}

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_c.h':

--- build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_c.h
+++ build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reset_axis__type_support.c':

--- build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reset_axis__type_support.c
+++ build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/reset_axis__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_init_function(
+void
+linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_member_array[1] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_member_array
+[1] = {
@@ -54 +59,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members
+  =
+  {
@@ -62 +70 @@
-};
+  };
@@ -66 +74,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle
+  =
+  {
@@ -68 +79,2 @@
-  &linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members,
+  &
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members,
@@ -70 +82 @@
-};
+  };
@@ -74,3 +86,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)() {
-  if (!linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Request)() {
+  if (!
+    linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -79 +97,2 @@
-  return &linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle;
@@ -112 +131,2 @@
-void linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_init_function(
+void
+linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_init_function(
@@ -121 +141,3 @@
-void linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_fini_function(
+  void * message_memory)
@@ -126 +148,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_member_array
+[2] = {
@@ -163 +187,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members
+  =
+  {
@@ -171 +198 @@
-};
+  };
@@ -175 +202,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle
+  =
+  {
@@ -177 +207,2 @@
-  &linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members,
+  &
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members,
@@ -179 +210 @@
-};
+  };
@@ -183,3 +214,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)() {
-  if (!linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Response)() {
+  if (!
+    linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -188 +225,2 @@
-  return &linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle;
@@ -204 +242,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members
+  =
+  {
@@ -212,3 +253,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+  =
+  {
@@ -216 +260,2 @@
-  &linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members,
+  &
+  linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members,
@@ -218 +263 @@
-};
+  };
@@ -222 +267,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Request)();
@@ -225 +272,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Response)();
@@ -229,3 +278,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis)() {
-  if (!linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis)() {
+  if (!
+    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+    .typesupport_identifier =
@@ -235 +290,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+    .data;
@@ -240 +297,4 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ResetAxis_Request)()->data;
@@ -245,5 +305,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ResetAxis_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle;
+}

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_c.h':

--- build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_c.h
+++ build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/start_motion__type_support.c':

--- build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/start_motion__type_support.c
+++ build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/start_motion__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_init_function(
+void
+linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_member_array[3] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_member_array
+[3] = {
@@ -88 +93,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members
+  =
+  {
@@ -96 +104 @@
-};
+  };
@@ -100 +108,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle
+  =
+  {
@@ -102 +113,2 @@
-  &linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members,
+  &
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members,
@@ -104 +116 @@
-};
+  };
@@ -108,3 +120,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)() {
-  if (!linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Request)() {
+  if (!
+    linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -113 +131,2 @@
-  return &linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle;
@@ -146 +165,2 @@
-void linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_init_function(
+void
+linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_init_function(
@@ -155 +175,3 @@
-void linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_fini_function(
+  void * message_memory)
@@ -160 +182,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_member_array
+[2] = {
@@ -197 +221,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members
+  =
+  {
@@ -205 +232 @@
-};
+  };
@@ -209 +236,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle
+  =
+  {
@@ -211 +241,2 @@
-  &linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members,
+  &
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members,
@@ -213 +244 @@
-};
+  };
@@ -217,3 +248,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)() {
-  if (!linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Response)() {
+  if (!
+    linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -222 +259,2 @@
-  return &linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle;
@@ -238 +276,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members
+  =
+  {
@@ -246,3 +287,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+  =
+  {
@@ -250 +294,2 @@
-  &linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members,
+  &
+  linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members,
@@ -252 +297 @@
-};
+  };
@@ -256 +301,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Request)();
@@ -259 +306,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Response)();
@@ -263,3 +312,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion)() {
-  if (!linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion)() {
+  if (!
+    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+    .typesupport_identifier =
@@ -269 +324,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+    .data;
@@ -274 +331,4 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      StartMotion_Request)()->data;
@@ -279,5 +339,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      StartMotion_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle;
+}

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_c.h':

--- build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_c.h
+++ build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/stop_axis__type_support.c':

--- build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/stop_axis__type_support.c
+++ build/linrob_axis/rosidl_typesupport_introspection_c/linrob_axis/srv/detail/stop_axis__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_init_function(
+void
+linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_member_array[1] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_member_array
+[1] = {
@@ -54 +59,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members
+  =
+  {
@@ -62 +70 @@
-};
+  };
@@ -66 +74,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle
+  =
+  {
@@ -68 +79,2 @@
-  &linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members,
+  &
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members,
@@ -70 +82 @@
-};
+  };
@@ -74,3 +86,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)() {
-  if (!linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Request)() {
+  if (!
+    linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -79 +97,2 @@
-  return &linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle;
@@ -112 +131,2 @@
-void linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_init_function(
+void
+linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_init_function(
@@ -121 +141,3 @@
-void linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_fini_function(
+  void * message_memory)
@@ -126 +148,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_member_array
+[2] = {
@@ -163 +187,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members
+  =
+  {
@@ -171 +198 @@
-};
+  };
@@ -175 +202,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle
+  =
+  {
@@ -177 +207,2 @@
-  &linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members,
+  &
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members,
@@ -179 +210 @@
-};
+  };
@@ -183,3 +214,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)() {
-  if (!linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Response)() {
+  if (!
+    linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -188 +225,2 @@
-  return &linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle;
@@ -204 +242,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_members
+  =
+  {
@@ -212,3 +253,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+  =
+  {
@@ -218 +262 @@
-};
+  };
@@ -222 +266,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Request)();
@@ -225 +271,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Response)();
@@ -229,3 +277,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis)() {
-  if (!linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis)() {
+  if (!
+    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+    .typesupport_identifier =
@@ -235 +289,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+    .data;
@@ -240 +296,3 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv, StopAxis_Request)()->data;
@@ -245,5 +303,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      StopAxis_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle;
+}

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_cpp.hpp':

--- build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_cpp.hpp
+++ build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ReferenceAxis_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ReferenceAxis_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ReferenceAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reference_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reference_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reference_axis__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ReferenceAxis_Request_message_member_array[1] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ReferenceAxis_Request_message_member_array[1] = {
@@ -60 +61,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ReferenceAxis_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ReferenceAxis_Request_message_members = {
@@ -91 +93,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Request_message_type_support_handle;
@@ -103,2 +106,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ReferenceAxis_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Request_message_type_support_handle;
@@ -159 +165,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ReferenceAxis_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ReferenceAxis_Response_message_member_array[2] = {
@@ -196 +203,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ReferenceAxis_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ReferenceAxis_Response_message_members = {
@@ -227 +235,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Response_message_type_support_handle;
@@ -239,2 +248,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ReferenceAxis_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Response_message_type_support_handle;
@@ -306 +318,2 @@
-    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_service_type_support_handle;
+    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+    ReferenceAxis_service_type_support_handle;
@@ -347 +360,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ReferenceAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_cpp.hpp':

--- build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_cpp.hpp
+++ build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ResetAxis_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ResetAxis_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ResetAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reset_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reset_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/reset_axis__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ResetAxis_Request_message_member_array[1] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ResetAxis_Request_message_member_array[1] = {
@@ -60 +61,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ResetAxis_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ResetAxis_Request_message_members = {
@@ -91 +93,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Request_message_type_support_handle;
@@ -103,2 +106,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ResetAxis_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Request_message_type_support_handle;
@@ -159 +165,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ResetAxis_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ResetAxis_Response_message_member_array[2] = {
@@ -196 +203,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ResetAxis_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ResetAxis_Response_message_members = {
@@ -227 +235,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Response_message_type_support_handle;
@@ -239,2 +248,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ResetAxis_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Response_message_type_support_handle;
@@ -347 +359,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ResetAxis)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_cpp.hpp':

--- build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_cpp.hpp
+++ build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StartMotion_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StartMotion_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StartMotion)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/start_motion__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/start_motion__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/start_motion__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StartMotion_Request_message_member_array[3] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StartMotion_Request_message_member_array[3] = {
@@ -94 +95,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StartMotion_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  StartMotion_Request_message_members = {
@@ -125 +127,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Request_message_type_support_handle;
@@ -137,2 +140,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StartMotion_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Request_message_type_support_handle;
@@ -193 +199,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StartMotion_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StartMotion_Response_message_member_array[2] = {
@@ -230 +237,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StartMotion_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  StartMotion_Response_message_members = {
@@ -261 +269,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Response_message_type_support_handle;
@@ -273,2 +282,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StartMotion_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Response_message_type_support_handle;
@@ -340 +352,2 @@
-    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_service_type_support_handle;
+    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+    StartMotion_service_type_support_handle;
@@ -381 +394,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StartMotion)() {

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_cpp.hpp':

--- build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_cpp.hpp
+++ build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StopAxis_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StopAxis_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StopAxis)();

Code style divergence in file 'build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/stop_axis__type_support.cpp':

--- build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/stop_axis__type_support.cpp
+++ build/linrob_axis/rosidl_typesupport_introspection_cpp/linrob_axis/srv/detail/stop_axis__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StopAxis_Request_message_member_array[1] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StopAxis_Request_message_member_array[1] = {
@@ -60 +61,3 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StopAxis_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers StopAxis_Request_message_members
+  =
+  {
@@ -68 +71 @@
-};
+  };
@@ -91 +94,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Request_message_type_support_handle;
@@ -103,2 +107,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StopAxis_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Request_message_type_support_handle;
@@ -159 +166,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StopAxis_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StopAxis_Response_message_member_array[2] = {
@@ -196 +204,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StopAxis_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  StopAxis_Response_message_members = {
@@ -227 +236,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Response_message_type_support_handle;
@@ -239,2 +249,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StopAxis_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Response_message_type_support_handle;
@@ -347 +360,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StopAxis)() {

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_c__visibility_control.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_c__visibility_control.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_c__visibility_control.h.uncrustify
@@ -25 +25,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_C_EXPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_C_EXPORT_linrob_axis
@@ -27 +28,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_C_IMPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_C_IMPORT_linrob_axis

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h.uncrustify
@@ -25 +25,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_CPP_EXPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_CPP_EXPORT_linrob_axis
@@ -27 +28,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_CPP_IMPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_CPP_IMPORT_linrob_axis

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_introspection_c__visibility_control.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_introspection_c__visibility_control.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_introspection_c__visibility_control.h.uncrustify
@@ -25 +25,2 @@
-    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_INTROSPECTION_C_EXPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_INTROSPECTION_C_EXPORT_linrob_axis
@@ -27 +28,2 @@
-    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_INTROSPECTION_C_IMPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_INTROSPECTION_C_IMPORT_linrob_axis
@@ -33 +35,2 @@
-    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis __attribute__ ((visibility("default")))
+    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis __attribute__ ((visibility( \
+      "default")))

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__builder.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__builder.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__builder.hpp.uncrustify
@@ -52 +52,2 @@
-  ::linrob_axis::srv::ReferenceAxis_Response message(::linrob_axis::srv::ReferenceAxis_Response::_message_type arg)
+  ::linrob_axis::srv::ReferenceAxis_Response message(
+    ::linrob_axis::srv::ReferenceAxis_Response::_message_type arg)
@@ -68 +69,2 @@
-  Init_ReferenceAxis_Response_message success(::linrob_axis::srv::ReferenceAxis_Response::_success_type arg)
+  Init_ReferenceAxis_Response_message success(
+    ::linrob_axis::srv::ReferenceAxis_Response::_success_type arg)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.c.uncrustify
@@ -33 +33,3 @@
-linrob_axis__srv__ReferenceAxis_Request__are_equal(const linrob_axis__srv__ReferenceAxis_Request * lhs, const linrob_axis__srv__ReferenceAxis_Request * rhs)
+linrob_axis__srv__ReferenceAxis_Request__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request * rhs)
@@ -62 +64,4 @@
-  linrob_axis__srv__ReferenceAxis_Request * msg = (linrob_axis__srv__ReferenceAxis_Request *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Request), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Request * msg =
+    (linrob_axis__srv__ReferenceAxis_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Request), allocator.state);
@@ -87 +92,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__init(linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size)
@@ -96 +102,5 @@
-    data = (linrob_axis__srv__ReferenceAxis_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ReferenceAxis_Request), allocator.state);
+    data =
+      (linrob_axis__srv__ReferenceAxis_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ReferenceAxis_Request),
+      allocator.state);
@@ -124 +134,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
@@ -153 +164,4 @@
-  linrob_axis__srv__ReferenceAxis_Request__Sequence * array = (linrob_axis__srv__ReferenceAxis_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Request__Sequence), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array =
+    (linrob_axis__srv__ReferenceAxis_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Request__Sequence), allocator.state);
@@ -166 +180,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
@@ -176 +191,3 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs)
@@ -269 +286,3 @@
-linrob_axis__srv__ReferenceAxis_Response__are_equal(const linrob_axis__srv__ReferenceAxis_Response * lhs, const linrob_axis__srv__ReferenceAxis_Response * rhs)
+linrob_axis__srv__ReferenceAxis_Response__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response * rhs)
@@ -310 +329,4 @@
-  linrob_axis__srv__ReferenceAxis_Response * msg = (linrob_axis__srv__ReferenceAxis_Response *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Response), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Response * msg =
+    (linrob_axis__srv__ReferenceAxis_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Response), allocator.state);
@@ -335 +357,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__init(linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size)
@@ -344 +367,5 @@
-    data = (linrob_axis__srv__ReferenceAxis_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ReferenceAxis_Response), allocator.state);
+    data =
+      (linrob_axis__srv__ReferenceAxis_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ReferenceAxis_Response),
+      allocator.state);
@@ -372 +399,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
@@ -401 +429,4 @@
-  linrob_axis__srv__ReferenceAxis_Response__Sequence * array = (linrob_axis__srv__ReferenceAxis_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Response__Sequence), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array =
+    (linrob_axis__srv__ReferenceAxis_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Response__Sequence), allocator.state);
@@ -414 +445,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
@@ -424 +456,3 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__ReferenceAxis_Request__are_equal(const linrob_axis__srv__ReferenceAxis_Request * lhs, const linrob_axis__srv__ReferenceAxis_Request * rhs);
+linrob_axis__srv__ReferenceAxis_Request__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__init(linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__ReferenceAxis_Response__are_equal(const linrob_axis__srv__ReferenceAxis_Response * lhs, const linrob_axis__srv__ReferenceAxis_Response * rhs);
+linrob_axis__srv__ReferenceAxis_Response__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__init(linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs);

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_c.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_c.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_cpp.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_cpp.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ReferenceAxis_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ReferenceAxis_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ReferenceAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_c.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_c.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_cpp.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_cpp.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ReferenceAxis_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ReferenceAxis_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ReferenceAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__struct.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__struct.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit ReferenceAxis_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -45 +46,3 @@
-  explicit ReferenceAxis_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -143 +146,2 @@
-  explicit ReferenceAxis_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -153 +157,3 @@
-  explicit ReferenceAxis_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -169 +175,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -180 +187,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_init_function(
+void
+linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_member_array[1] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_member_array
+[1] = {
@@ -54 +59,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members
+  =
+  {
@@ -62 +70 @@
-};
+  };
@@ -66 +74,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle
+  =
+  {
@@ -68 +79,2 @@
-  &linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members,
+  &
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members,
@@ -70 +82 @@
-};
+  };
@@ -74,3 +86,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)() {
-  if (!linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Request)() {
+  if (!
+    linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -79 +97,2 @@
-  return &linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle;
@@ -112 +131,2 @@
-void linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_init_function(
+void
+linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_init_function(
@@ -121 +141,3 @@
-void linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_fini_function(
+  void * message_memory)
@@ -126 +148,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_member_array
+[2] = {
@@ -163 +187,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members
+  =
+  {
@@ -171 +198 @@
-};
+  };
@@ -175 +202,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle
+  =
+  {
@@ -177 +207,2 @@
-  &linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members,
+  &
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members,
@@ -179 +210 @@
-};
+  };
@@ -183,3 +214,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)() {
-  if (!linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Response)() {
+  if (!
+    linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -188 +225,2 @@
-  return &linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle;
@@ -204 +242,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members
+  =
+  {
@@ -212,3 +253,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+  =
+  {
@@ -216 +260,2 @@
-  &linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members,
+  &
+  linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members,
@@ -218 +263 @@
-};
+  };
@@ -222 +267,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Request)();
@@ -225 +272,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Response)();
@@ -229,3 +278,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis)() {
-  if (!linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis)() {
+  if (!
+    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+    .typesupport_identifier =
@@ -235 +290,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+    .data;
@@ -240 +297,4 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ReferenceAxis_Request)()->data;
@@ -245,5 +305,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ReferenceAxis_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle;
+}

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.cpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.cpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ReferenceAxis_Request_message_member_array[1] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ReferenceAxis_Request_message_member_array[1] = {
@@ -60 +61,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ReferenceAxis_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ReferenceAxis_Request_message_members = {
@@ -91 +93,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Request_message_type_support_handle;
@@ -103,2 +106,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ReferenceAxis_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Request_message_type_support_handle;
@@ -159 +165,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ReferenceAxis_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ReferenceAxis_Response_message_member_array[2] = {
@@ -196 +203,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ReferenceAxis_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ReferenceAxis_Response_message_members = {
@@ -227 +235,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Response_message_type_support_handle;
@@ -239,2 +248,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ReferenceAxis_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Response_message_type_support_handle;
@@ -306 +318,2 @@
-    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_service_type_support_handle;
+    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+    ReferenceAxis_service_type_support_handle;
@@ -347 +360,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ReferenceAxis)() {

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__builder.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__builder.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__builder.hpp.uncrustify
@@ -52 +52,2 @@
-  ::linrob_axis::srv::ResetAxis_Response message(::linrob_axis::srv::ResetAxis_Response::_message_type arg)
+  ::linrob_axis::srv::ResetAxis_Response message(
+    ::linrob_axis::srv::ResetAxis_Response::_message_type arg)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.c.uncrustify
@@ -33 +33,3 @@
-linrob_axis__srv__ResetAxis_Request__are_equal(const linrob_axis__srv__ResetAxis_Request * lhs, const linrob_axis__srv__ResetAxis_Request * rhs)
+linrob_axis__srv__ResetAxis_Request__are_equal(
+  const linrob_axis__srv__ResetAxis_Request * lhs,
+  const linrob_axis__srv__ResetAxis_Request * rhs)
@@ -62 +64,4 @@
-  linrob_axis__srv__ResetAxis_Request * msg = (linrob_axis__srv__ResetAxis_Request *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Request), allocator.state);
+  linrob_axis__srv__ResetAxis_Request * msg =
+    (linrob_axis__srv__ResetAxis_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Request), allocator.state);
@@ -87 +92,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__init(linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size)
+linrob_axis__srv__ResetAxis_Request__Sequence__init(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size)
@@ -96 +102,5 @@
-    data = (linrob_axis__srv__ResetAxis_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ResetAxis_Request), allocator.state);
+    data =
+      (linrob_axis__srv__ResetAxis_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ResetAxis_Request),
+      allocator.state);
@@ -124 +134,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__fini(linrob_axis__srv__ResetAxis_Request__Sequence * array)
+linrob_axis__srv__ResetAxis_Request__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array)
@@ -153 +164,4 @@
-  linrob_axis__srv__ResetAxis_Request__Sequence * array = (linrob_axis__srv__ResetAxis_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Request__Sequence), allocator.state);
+  linrob_axis__srv__ResetAxis_Request__Sequence * array =
+    (linrob_axis__srv__ResetAxis_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Request__Sequence), allocator.state);
@@ -166 +180,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__destroy(linrob_axis__srv__ResetAxis_Request__Sequence * array)
+linrob_axis__srv__ResetAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array)
@@ -176 +191,3 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Request__Sequence * lhs, const linrob_axis__srv__ResetAxis_Request__Sequence * rhs)
+linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Request__Sequence * rhs)
@@ -269 +286,3 @@
-linrob_axis__srv__ResetAxis_Response__are_equal(const linrob_axis__srv__ResetAxis_Response * lhs, const linrob_axis__srv__ResetAxis_Response * rhs)
+linrob_axis__srv__ResetAxis_Response__are_equal(
+  const linrob_axis__srv__ResetAxis_Response * lhs,
+  const linrob_axis__srv__ResetAxis_Response * rhs)
@@ -310 +329,4 @@
-  linrob_axis__srv__ResetAxis_Response * msg = (linrob_axis__srv__ResetAxis_Response *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Response), allocator.state);
+  linrob_axis__srv__ResetAxis_Response * msg =
+    (linrob_axis__srv__ResetAxis_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Response), allocator.state);
@@ -335 +357,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__init(linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size)
+linrob_axis__srv__ResetAxis_Response__Sequence__init(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size)
@@ -344 +367,5 @@
-    data = (linrob_axis__srv__ResetAxis_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ResetAxis_Response), allocator.state);
+    data =
+      (linrob_axis__srv__ResetAxis_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ResetAxis_Response),
+      allocator.state);
@@ -372 +399,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__fini(linrob_axis__srv__ResetAxis_Response__Sequence * array)
+linrob_axis__srv__ResetAxis_Response__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array)
@@ -401 +429,4 @@
-  linrob_axis__srv__ResetAxis_Response__Sequence * array = (linrob_axis__srv__ResetAxis_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Response__Sequence), allocator.state);
+  linrob_axis__srv__ResetAxis_Response__Sequence * array =
+    (linrob_axis__srv__ResetAxis_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Response__Sequence), allocator.state);
@@ -414 +445,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__destroy(linrob_axis__srv__ResetAxis_Response__Sequence * array)
+linrob_axis__srv__ResetAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array)
@@ -424 +456,3 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Response__Sequence * lhs, const linrob_axis__srv__ResetAxis_Response__Sequence * rhs)
+linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Response__Sequence * rhs)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__ResetAxis_Request__are_equal(const linrob_axis__srv__ResetAxis_Request * lhs, const linrob_axis__srv__ResetAxis_Request * rhs);
+linrob_axis__srv__ResetAxis_Request__are_equal(
+  const linrob_axis__srv__ResetAxis_Request * lhs,
+  const linrob_axis__srv__ResetAxis_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__init(linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size);
+linrob_axis__srv__ResetAxis_Request__Sequence__init(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__fini(linrob_axis__srv__ResetAxis_Request__Sequence * array);
+linrob_axis__srv__ResetAxis_Request__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__destroy(linrob_axis__srv__ResetAxis_Request__Sequence * array);
+linrob_axis__srv__ResetAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Request__Sequence * lhs, const linrob_axis__srv__ResetAxis_Request__Sequence * rhs);
+linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__ResetAxis_Response__are_equal(const linrob_axis__srv__ResetAxis_Response * lhs, const linrob_axis__srv__ResetAxis_Response * rhs);
+linrob_axis__srv__ResetAxis_Response__are_equal(
+  const linrob_axis__srv__ResetAxis_Response * lhs,
+  const linrob_axis__srv__ResetAxis_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__init(linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size);
+linrob_axis__srv__ResetAxis_Response__Sequence__init(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__fini(linrob_axis__srv__ResetAxis_Response__Sequence * array);
+linrob_axis__srv__ResetAxis_Response__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__destroy(linrob_axis__srv__ResetAxis_Response__Sequence * array);
+linrob_axis__srv__ResetAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Response__Sequence * lhs, const linrob_axis__srv__ResetAxis_Response__Sequence * rhs);
+linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Response__Sequence * rhs);

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_c.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_c.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_cpp.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_cpp.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ResetAxis_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ResetAxis_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ResetAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_c.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_c.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_cpp.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_cpp.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ResetAxis_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ResetAxis_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ResetAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__struct.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__struct.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit ResetAxis_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -45 +46,3 @@
-  explicit ResetAxis_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -143 +146,2 @@
-  explicit ResetAxis_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -153 +157,3 @@
-  explicit ResetAxis_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -169 +175,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -180 +187,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_init_function(
+void
+linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_member_array[1] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_member_array
+[1] = {
@@ -54 +59,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members
+  =
+  {
@@ -62 +70 @@
-};
+  };
@@ -66 +74,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle
+  =
+  {
@@ -68 +79,2 @@
-  &linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members,
+  &
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members,
@@ -70 +82 @@
-};
+  };
@@ -74,3 +86,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)() {
-  if (!linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Request)() {
+  if (!
+    linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -79 +97,2 @@
-  return &linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle;
@@ -112 +131,2 @@
-void linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_init_function(
+void
+linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_init_function(
@@ -121 +141,3 @@
-void linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_fini_function(
+  void * message_memory)
@@ -126 +148,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_member_array
+[2] = {
@@ -163 +187,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members
+  =
+  {
@@ -171 +198 @@
-};
+  };
@@ -175 +202,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle
+  =
+  {
@@ -177 +207,2 @@
-  &linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members,
+  &
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members,
@@ -179 +210 @@
-};
+  };
@@ -183,3 +214,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)() {
-  if (!linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Response)() {
+  if (!
+    linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -188 +225,2 @@
-  return &linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle;
@@ -204 +242,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members
+  =
+  {
@@ -212,3 +253,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+  =
+  {
@@ -216 +260,2 @@
-  &linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members,
+  &
+  linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members,
@@ -218 +263 @@
-};
+  };
@@ -222 +267,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Request)();
@@ -225 +272,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Response)();
@@ -229,3 +278,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis)() {
-  if (!linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis)() {
+  if (!
+    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+    .typesupport_identifier =
@@ -235 +290,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+    .data;
@@ -240 +297,4 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ResetAxis_Request)()->data;
@@ -245,5 +305,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ResetAxis_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle;
+}

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.cpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.cpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ResetAxis_Request_message_member_array[1] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ResetAxis_Request_message_member_array[1] = {
@@ -60 +61,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ResetAxis_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ResetAxis_Request_message_members = {
@@ -91 +93,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Request_message_type_support_handle;
@@ -103,2 +106,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ResetAxis_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Request_message_type_support_handle;
@@ -159 +165,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ResetAxis_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ResetAxis_Response_message_member_array[2] = {
@@ -196 +203,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ResetAxis_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ResetAxis_Response_message_members = {
@@ -227 +235,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Response_message_type_support_handle;
@@ -239,2 +248,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ResetAxis_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Response_message_type_support_handle;
@@ -347 +359,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ResetAxis)() {

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__builder.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__builder.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__builder.hpp.uncrustify
@@ -30 +30,2 @@
-  ::linrob_axis::srv::StartMotion_Request velocity(::linrob_axis::srv::StartMotion_Request::_velocity_type arg)
+  ::linrob_axis::srv::StartMotion_Request velocity(
+    ::linrob_axis::srv::StartMotion_Request::_velocity_type arg)
@@ -46 +47,2 @@
-  Init_StartMotion_Request_velocity target_position(::linrob_axis::srv::StartMotion_Request::_target_position_type arg)
+  Init_StartMotion_Request_velocity target_position(
+    ::linrob_axis::srv::StartMotion_Request::_target_position_type arg)
@@ -62 +64,2 @@
-  Init_StartMotion_Request_target_position start(::linrob_axis::srv::StartMotion_Request::_start_type arg)
+  Init_StartMotion_Request_target_position start(
+    ::linrob_axis::srv::StartMotion_Request::_start_type arg)
@@ -104 +107,2 @@
-  ::linrob_axis::srv::StartMotion_Response message(::linrob_axis::srv::StartMotion_Response::_message_type arg)
+  ::linrob_axis::srv::StartMotion_Response message(
+    ::linrob_axis::srv::StartMotion_Response::_message_type arg)
@@ -120 +124,2 @@
-  Init_StartMotion_Response_message success(::linrob_axis::srv::StartMotion_Response::_success_type arg)
+  Init_StartMotion_Response_message success(
+    ::linrob_axis::srv::StartMotion_Response::_success_type arg)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.c.uncrustify
@@ -37 +37,3 @@
-linrob_axis__srv__StartMotion_Request__are_equal(const linrob_axis__srv__StartMotion_Request * lhs, const linrob_axis__srv__StartMotion_Request * rhs)
+linrob_axis__srv__StartMotion_Request__are_equal(
+  const linrob_axis__srv__StartMotion_Request * lhs,
+  const linrob_axis__srv__StartMotion_Request * rhs)
@@ -78 +80,4 @@
-  linrob_axis__srv__StartMotion_Request * msg = (linrob_axis__srv__StartMotion_Request *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Request), allocator.state);
+  linrob_axis__srv__StartMotion_Request * msg =
+    (linrob_axis__srv__StartMotion_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Request), allocator.state);
@@ -103 +108,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__init(linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size)
+linrob_axis__srv__StartMotion_Request__Sequence__init(
+  linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size)
@@ -112 +118,5 @@
-    data = (linrob_axis__srv__StartMotion_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StartMotion_Request), allocator.state);
+    data =
+      (linrob_axis__srv__StartMotion_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StartMotion_Request),
+      allocator.state);
@@ -140 +150,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__fini(linrob_axis__srv__StartMotion_Request__Sequence * array)
+linrob_axis__srv__StartMotion_Request__Sequence__fini(
+  linrob_axis__srv__StartMotion_Request__Sequence * array)
@@ -169 +180,4 @@
-  linrob_axis__srv__StartMotion_Request__Sequence * array = (linrob_axis__srv__StartMotion_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Request__Sequence), allocator.state);
+  linrob_axis__srv__StartMotion_Request__Sequence * array =
+    (linrob_axis__srv__StartMotion_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Request__Sequence), allocator.state);
@@ -182 +196,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__destroy(linrob_axis__srv__StartMotion_Request__Sequence * array)
+linrob_axis__srv__StartMotion_Request__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Request__Sequence * array)
@@ -192 +207,3 @@
-linrob_axis__srv__StartMotion_Request__Sequence__are_equal(const linrob_axis__srv__StartMotion_Request__Sequence * lhs, const linrob_axis__srv__StartMotion_Request__Sequence * rhs)
+linrob_axis__srv__StartMotion_Request__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Request__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Request__Sequence * rhs)
@@ -285 +302,3 @@
-linrob_axis__srv__StartMotion_Response__are_equal(const linrob_axis__srv__StartMotion_Response * lhs, const linrob_axis__srv__StartMotion_Response * rhs)
+linrob_axis__srv__StartMotion_Response__are_equal(
+  const linrob_axis__srv__StartMotion_Response * lhs,
+  const linrob_axis__srv__StartMotion_Response * rhs)
@@ -326 +345,4 @@
-  linrob_axis__srv__StartMotion_Response * msg = (linrob_axis__srv__StartMotion_Response *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Response), allocator.state);
+  linrob_axis__srv__StartMotion_Response * msg =
+    (linrob_axis__srv__StartMotion_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Response), allocator.state);
@@ -351 +373,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__init(linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size)
+linrob_axis__srv__StartMotion_Response__Sequence__init(
+  linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size)
@@ -360 +383,5 @@
-    data = (linrob_axis__srv__StartMotion_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StartMotion_Response), allocator.state);
+    data =
+      (linrob_axis__srv__StartMotion_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StartMotion_Response),
+      allocator.state);
@@ -388 +415,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__fini(linrob_axis__srv__StartMotion_Response__Sequence * array)
+linrob_axis__srv__StartMotion_Response__Sequence__fini(
+  linrob_axis__srv__StartMotion_Response__Sequence * array)
@@ -417 +445,4 @@
-  linrob_axis__srv__StartMotion_Response__Sequence * array = (linrob_axis__srv__StartMotion_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Response__Sequence), allocator.state);
+  linrob_axis__srv__StartMotion_Response__Sequence * array =
+    (linrob_axis__srv__StartMotion_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Response__Sequence), allocator.state);
@@ -430 +461,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__destroy(linrob_axis__srv__StartMotion_Response__Sequence * array)
+linrob_axis__srv__StartMotion_Response__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Response__Sequence * array)
@@ -440 +472,3 @@
-linrob_axis__srv__StartMotion_Response__Sequence__are_equal(const linrob_axis__srv__StartMotion_Response__Sequence * lhs, const linrob_axis__srv__StartMotion_Response__Sequence * rhs)
+linrob_axis__srv__StartMotion_Response__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Response__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Response__Sequence * rhs)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__StartMotion_Request__are_equal(const linrob_axis__srv__StartMotion_Request * lhs, const linrob_axis__srv__StartMotion_Request * rhs);
+linrob_axis__srv__StartMotion_Request__are_equal(
+  const linrob_axis__srv__StartMotion_Request * lhs,
+  const linrob_axis__srv__StartMotion_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__init(linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size);
+linrob_axis__srv__StartMotion_Request__Sequence__init(
+  linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__fini(linrob_axis__srv__StartMotion_Request__Sequence * array);
+linrob_axis__srv__StartMotion_Request__Sequence__fini(
+  linrob_axis__srv__StartMotion_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__destroy(linrob_axis__srv__StartMotion_Request__Sequence * array);
+linrob_axis__srv__StartMotion_Request__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__StartMotion_Request__Sequence__are_equal(const linrob_axis__srv__StartMotion_Request__Sequence * lhs, const linrob_axis__srv__StartMotion_Request__Sequence * rhs);
+linrob_axis__srv__StartMotion_Request__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Request__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__StartMotion_Response__are_equal(const linrob_axis__srv__StartMotion_Response * lhs, const linrob_axis__srv__StartMotion_Response * rhs);
+linrob_axis__srv__StartMotion_Response__are_equal(
+  const linrob_axis__srv__StartMotion_Response * lhs,
+  const linrob_axis__srv__StartMotion_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__init(linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size);
+linrob_axis__srv__StartMotion_Response__Sequence__init(
+  linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__fini(linrob_axis__srv__StartMotion_Response__Sequence * array);
+linrob_axis__srv__StartMotion_Response__Sequence__fini(
+  linrob_axis__srv__StartMotion_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__destroy(linrob_axis__srv__StartMotion_Response__Sequence * array);
+linrob_axis__srv__StartMotion_Response__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__StartMotion_Response__Sequence__are_equal(const linrob_axis__srv__StartMotion_Response__Sequence * lhs, const linrob_axis__srv__StartMotion_Response__Sequence * rhs);
+linrob_axis__srv__StartMotion_Response__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Response__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Response__Sequence * rhs);

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_c.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_c.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_cpp.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_cpp.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StartMotion_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StartMotion_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StartMotion)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_c.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_c.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_cpp.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_cpp.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StartMotion_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StartMotion_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StartMotion)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__struct.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__struct.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit StartMotion_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -47 +48,3 @@
-  explicit StartMotion_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -178 +181,2 @@
-  explicit StartMotion_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -188 +192,3 @@
-  explicit StartMotion_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -204 +210,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -215 +222,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_init_function(
+void
+linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_member_array[3] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_member_array
+[3] = {
@@ -88 +93,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members
+  =
+  {
@@ -96 +104 @@
-};
+  };
@@ -100 +108,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle
+  =
+  {
@@ -102 +113,2 @@
-  &linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members,
+  &
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members,
@@ -104 +116 @@
-};
+  };
@@ -108,3 +120,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)() {
-  if (!linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Request)() {
+  if (!
+    linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -113 +131,2 @@
-  return &linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle;
@@ -146 +165,2 @@
-void linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_init_function(
+void
+linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_init_function(
@@ -155 +175,3 @@
-void linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_fini_function(
+  void * message_memory)
@@ -160 +182,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_member_array
+[2] = {
@@ -197 +221,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members
+  =
+  {
@@ -205 +232 @@
-};
+  };
@@ -209 +236,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle
+  =
+  {
@@ -211 +241,2 @@
-  &linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members,
+  &
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members,
@@ -213 +244 @@
-};
+  };
@@ -217,3 +248,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)() {
-  if (!linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Response)() {
+  if (!
+    linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -222 +259,2 @@
-  return &linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle;
@@ -238 +276,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members
+  =
+  {
@@ -246,3 +287,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+  =
+  {
@@ -250 +294,2 @@
-  &linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members,
+  &
+  linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members,
@@ -252 +297 @@
-};
+  };
@@ -256 +301,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Request)();
@@ -259 +306,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Response)();
@@ -263,3 +312,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion)() {
-  if (!linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion)() {
+  if (!
+    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+    .typesupport_identifier =
@@ -269 +324,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+    .data;
@@ -274 +331,4 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      StartMotion_Request)()->data;
@@ -279,5 +339,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      StartMotion_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle;
+}

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.cpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.cpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StartMotion_Request_message_member_array[3] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StartMotion_Request_message_member_array[3] = {
@@ -94 +95,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StartMotion_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  StartMotion_Request_message_members = {
@@ -125 +127,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Request_message_type_support_handle;
@@ -137,2 +140,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StartMotion_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Request_message_type_support_handle;
@@ -193 +199,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StartMotion_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StartMotion_Response_message_member_array[2] = {
@@ -230 +237,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StartMotion_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  StartMotion_Response_message_members = {
@@ -261 +269,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Response_message_type_support_handle;
@@ -273,2 +282,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StartMotion_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Response_message_type_support_handle;
@@ -340 +352,2 @@
-    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_service_type_support_handle;
+    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+    StartMotion_service_type_support_handle;
@@ -381 +394,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StartMotion)() {

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__builder.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__builder.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__builder.hpp.uncrustify
@@ -52 +52,2 @@
-  ::linrob_axis::srv::StopAxis_Response message(::linrob_axis::srv::StopAxis_Response::_message_type arg)
+  ::linrob_axis::srv::StopAxis_Response message(
+    ::linrob_axis::srv::StopAxis_Response::_message_type arg)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.c.uncrustify
@@ -33 +33,3 @@
-linrob_axis__srv__StopAxis_Request__are_equal(const linrob_axis__srv__StopAxis_Request * lhs, const linrob_axis__srv__StopAxis_Request * rhs)
+linrob_axis__srv__StopAxis_Request__are_equal(
+  const linrob_axis__srv__StopAxis_Request * lhs,
+  const linrob_axis__srv__StopAxis_Request * rhs)
@@ -62 +64,4 @@
-  linrob_axis__srv__StopAxis_Request * msg = (linrob_axis__srv__StopAxis_Request *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Request), allocator.state);
+  linrob_axis__srv__StopAxis_Request * msg =
+    (linrob_axis__srv__StopAxis_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Request), allocator.state);
@@ -87 +92,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__init(linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size)
+linrob_axis__srv__StopAxis_Request__Sequence__init(
+  linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size)
@@ -96 +102,5 @@
-    data = (linrob_axis__srv__StopAxis_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StopAxis_Request), allocator.state);
+    data =
+      (linrob_axis__srv__StopAxis_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StopAxis_Request),
+      allocator.state);
@@ -124 +134,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__fini(linrob_axis__srv__StopAxis_Request__Sequence * array)
+linrob_axis__srv__StopAxis_Request__Sequence__fini(
+  linrob_axis__srv__StopAxis_Request__Sequence * array)
@@ -153 +164,4 @@
-  linrob_axis__srv__StopAxis_Request__Sequence * array = (linrob_axis__srv__StopAxis_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Request__Sequence), allocator.state);
+  linrob_axis__srv__StopAxis_Request__Sequence * array =
+    (linrob_axis__srv__StopAxis_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Request__Sequence), allocator.state);
@@ -166 +180,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__destroy(linrob_axis__srv__StopAxis_Request__Sequence * array)
+linrob_axis__srv__StopAxis_Request__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Request__Sequence * array)
@@ -176 +191,3 @@
-linrob_axis__srv__StopAxis_Request__Sequence__are_equal(const linrob_axis__srv__StopAxis_Request__Sequence * lhs, const linrob_axis__srv__StopAxis_Request__Sequence * rhs)
+linrob_axis__srv__StopAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Request__Sequence * rhs)
@@ -269 +286,3 @@
-linrob_axis__srv__StopAxis_Response__are_equal(const linrob_axis__srv__StopAxis_Response * lhs, const linrob_axis__srv__StopAxis_Response * rhs)
+linrob_axis__srv__StopAxis_Response__are_equal(
+  const linrob_axis__srv__StopAxis_Response * lhs,
+  const linrob_axis__srv__StopAxis_Response * rhs)
@@ -310 +329,4 @@
-  linrob_axis__srv__StopAxis_Response * msg = (linrob_axis__srv__StopAxis_Response *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Response), allocator.state);
+  linrob_axis__srv__StopAxis_Response * msg =
+    (linrob_axis__srv__StopAxis_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Response), allocator.state);
@@ -335 +357,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__init(linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size)
+linrob_axis__srv__StopAxis_Response__Sequence__init(
+  linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size)
@@ -344 +367,5 @@
-    data = (linrob_axis__srv__StopAxis_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StopAxis_Response), allocator.state);
+    data =
+      (linrob_axis__srv__StopAxis_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StopAxis_Response),
+      allocator.state);
@@ -372 +399,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__fini(linrob_axis__srv__StopAxis_Response__Sequence * array)
+linrob_axis__srv__StopAxis_Response__Sequence__fini(
+  linrob_axis__srv__StopAxis_Response__Sequence * array)
@@ -401 +429,4 @@
-  linrob_axis__srv__StopAxis_Response__Sequence * array = (linrob_axis__srv__StopAxis_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Response__Sequence), allocator.state);
+  linrob_axis__srv__StopAxis_Response__Sequence * array =
+    (linrob_axis__srv__StopAxis_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Response__Sequence), allocator.state);
@@ -414 +445,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__destroy(linrob_axis__srv__StopAxis_Response__Sequence * array)
+linrob_axis__srv__StopAxis_Response__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Response__Sequence * array)
@@ -424 +456,3 @@
-linrob_axis__srv__StopAxis_Response__Sequence__are_equal(const linrob_axis__srv__StopAxis_Response__Sequence * lhs, const linrob_axis__srv__StopAxis_Response__Sequence * rhs)
+linrob_axis__srv__StopAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Response__Sequence * rhs)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__StopAxis_Request__are_equal(const linrob_axis__srv__StopAxis_Request * lhs, const linrob_axis__srv__StopAxis_Request * rhs);
+linrob_axis__srv__StopAxis_Request__are_equal(
+  const linrob_axis__srv__StopAxis_Request * lhs,
+  const linrob_axis__srv__StopAxis_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__init(linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size);
+linrob_axis__srv__StopAxis_Request__Sequence__init(
+  linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__fini(linrob_axis__srv__StopAxis_Request__Sequence * array);
+linrob_axis__srv__StopAxis_Request__Sequence__fini(
+  linrob_axis__srv__StopAxis_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__destroy(linrob_axis__srv__StopAxis_Request__Sequence * array);
+linrob_axis__srv__StopAxis_Request__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__StopAxis_Request__Sequence__are_equal(const linrob_axis__srv__StopAxis_Request__Sequence * lhs, const linrob_axis__srv__StopAxis_Request__Sequence * rhs);
+linrob_axis__srv__StopAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__StopAxis_Response__are_equal(const linrob_axis__srv__StopAxis_Response * lhs, const linrob_axis__srv__StopAxis_Response * rhs);
+linrob_axis__srv__StopAxis_Response__are_equal(
+  const linrob_axis__srv__StopAxis_Response * lhs,
+  const linrob_axis__srv__StopAxis_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__init(linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size);
+linrob_axis__srv__StopAxis_Response__Sequence__init(
+  linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__fini(linrob_axis__srv__StopAxis_Response__Sequence * array);
+linrob_axis__srv__StopAxis_Response__Sequence__fini(
+  linrob_axis__srv__StopAxis_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__destroy(linrob_axis__srv__StopAxis_Response__Sequence * array);
+linrob_axis__srv__StopAxis_Response__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__StopAxis_Response__Sequence__are_equal(const linrob_axis__srv__StopAxis_Response__Sequence * lhs, const linrob_axis__srv__StopAxis_Response__Sequence * rhs);
+linrob_axis__srv__StopAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Response__Sequence * rhs);

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_c.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_c.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_cpp.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_cpp.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StopAxis_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StopAxis_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StopAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_c.h':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_c.h
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_cpp.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_cpp.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StopAxis_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StopAxis_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StopAxis)();

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__struct.hpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__struct.hpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit StopAxis_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -45 +46,3 @@
-  explicit StopAxis_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -143 +146,2 @@
-  explicit StopAxis_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -153 +157,3 @@
-  explicit StopAxis_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -169 +175,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -180 +187,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_init_function(
+void
+linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_member_array[1] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_member_array
+[1] = {
@@ -54 +59,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members
+  =
+  {
@@ -62 +70 @@
-};
+  };
@@ -66 +74,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle
+  =
+  {
@@ -68 +79,2 @@
-  &linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members,
+  &
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members,
@@ -70 +82 @@
-};
+  };
@@ -74,3 +86,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)() {
-  if (!linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Request)() {
+  if (!
+    linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -79 +97,2 @@
-  return &linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle;
@@ -112 +131,2 @@
-void linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_init_function(
+void
+linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_init_function(
@@ -121 +141,3 @@
-void linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_fini_function(
+  void * message_memory)
@@ -126 +148,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_member_array
+[2] = {
@@ -163 +187,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members
+  =
+  {
@@ -171 +198 @@
-};
+  };
@@ -175 +202,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle
+  =
+  {
@@ -177 +207,2 @@
-  &linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members,
+  &
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members,
@@ -179 +210 @@
-};
+  };
@@ -183,3 +214,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)() {
-  if (!linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Response)() {
+  if (!
+    linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -188 +225,2 @@
-  return &linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle;
@@ -204 +242,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_members
+  =
+  {
@@ -212,3 +253,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+  =
+  {
@@ -218 +262 @@
-};
+  };
@@ -222 +266,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Request)();
@@ -225 +271,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Response)();
@@ -229,3 +277,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis)() {
-  if (!linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis)() {
+  if (!
+    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+    .typesupport_identifier =
@@ -235 +289,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+    .data;
@@ -240 +296,3 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv, StopAxis_Request)()->data;
@@ -245,5 +303,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      StopAxis_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle;
+}

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.cpp':

--- debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.cpp
+++ debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StopAxis_Request_message_member_array[1] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StopAxis_Request_message_member_array[1] = {
@@ -60 +61,3 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StopAxis_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers StopAxis_Request_message_members
+  =
+  {
@@ -68 +71 @@
-};
+  };
@@ -91 +94,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Request_message_type_support_handle;
@@ -103,2 +107,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StopAxis_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Request_message_type_support_handle;
@@ -159 +166,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StopAxis_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StopAxis_Response_message_member_array[2] = {
@@ -196 +204,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StopAxis_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  StopAxis_Response_message_members = {
@@ -227 +236,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Response_message_type_support_handle;
@@ -239,2 +249,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StopAxis_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Response_message_type_support_handle;
@@ -347 +360,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StopAxis)() {

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_reference_axis_s.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_reference_axis_s.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_reference_axis_s.c.uncrustify
@@ -21 +21,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -50 +52,4 @@
-    assert(strncmp("linrob_axis.srv._reference_axis.ReferenceAxis_Request", full_classname_dest, 53) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._reference_axis.ReferenceAxis_Request", full_classname_dest,
+        53) == 0);
@@ -100 +105,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -129 +136,4 @@
-    assert(strncmp("linrob_axis.srv._reference_axis.ReferenceAxis_Response", full_classname_dest, 54) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._reference_axis.ReferenceAxis_Response", full_classname_dest,
+        54) == 0);
@@ -177 +187,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_reset_axis_s.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_reset_axis_s.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_reset_axis_s.c.uncrustify
@@ -177 +177,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_start_motion_s.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_start_motion_s.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_start_motion_s.c.uncrustify
@@ -21 +21,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -50 +52,4 @@
-    assert(strncmp("linrob_axis.srv._start_motion.StartMotion_Request", full_classname_dest, 49) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._start_motion.StartMotion_Request", full_classname_dest,
+        49) == 0);
@@ -101 +106,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -159 +165,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -188 +196,4 @@
-    assert(strncmp("linrob_axis.srv._start_motion.StartMotion_Response", full_classname_dest, 50) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._start_motion.StartMotion_Response", full_classname_dest,
+        50) == 0);
@@ -236 +247,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;

Code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_stop_axis_s.c':

--- debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_stop_axis_s.c
+++ debian/ros-humble-linrob-axis/opt/ros/humble/local/lib/python3.10/dist-packages/linrob_axis/srv/_stop_axis_s.c.uncrustify
@@ -177 +177,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;

Code style divergence in file 'include/linrob_axis/AxisStates.h':

--- include/linrob_axis/AxisStates.h
+++ include/linrob_axis/AxisStates.h.uncrustify
@@ -11,16 +11,16 @@
-enum class AxisState : uint8_t
-{
-  ABORTING = 0U,
-  CONTINUOUS_MOTION,
-  COORDINATED_MOTION,
-  DISABLED,
-  DISCRETE_MOTION,
-  ERRORSTOP,
-  GANTRY_SLAVE,
-  HOMING,
-  STANDSTILL,
-  STANDSTILL_PENDING,
-  STOPPING,
-  SYNCHRONIZED_MOTION,
-  STOPPED
-};
+  enum class AxisState: uint8_t
+  {
+    ABORTING = 0U,
+    CONTINUOUS_MOTION,
+    COORDINATED_MOTION,
+    DISABLED,
+    DISCRETE_MOTION,
+    ERRORSTOP,
+    GANTRY_SLAVE,
+    HOMING,
+    STANDSTILL,
+    STANDSTILL_PENDING,
+    STOPPING,
+    SYNCHRONIZED_MOTION,
+    STOPPED
+  };

Code style divergence in file 'include/linrob_axis/Connection.h':

--- include/linrob_axis/Connection.h
+++ include/linrob_axis/Connection.h.uncrustify
@@ -14,13 +14,14 @@
-struct Connection
-{
-  /// IP address.
-  std::string ip;
-  /// Username.
-  std::string user;
-  /// Password.
-  std::string password;
-  /// SSL port.
-  int sslPort;
-  /// Data layer nodes addresses.
-  std::unordered_map<std::string, std::pair<std::string, comm::datalayer::Variant> > datalayerNodeMap;
-};
+  struct Connection
+  {
+    /// IP address.
+    std::string ip;
+    /// Username.
+    std::string user;
+    /// Password.
+    std::string password;
+    /// SSL port.
+    int sslPort;
+    /// Data layer nodes addresses.
+    std::unordered_map < std::string, std::pair < std::string,
+    comm::datalayer::Variant >> datalayerNodeMap;
+  };

Code style divergence in file 'include/linrob_axis/Mode.h':

--- include/linrob_axis/Mode.h
+++ include/linrob_axis/Mode.h.uncrustify
@@ -11,6 +11,6 @@
-enum class Mode : uint8_t
-{
-  MANUAL = 0U,
-  AUTO,
-  AUTO_EXTERNAL
-};
+  enum class Mode: uint8_t
+  {
+    MANUAL = 0U,
+    AUTO,
+    AUTO_EXTERNAL
+  };

Code style divergence in file 'include/linrob_axis/PositionSettings.h':

--- include/linrob_axis/PositionSettings.h
+++ include/linrob_axis/PositionSettings.h.uncrustify
@@ -10,13 +10,13 @@
-struct PositionSettings
-{
-  /// Initial position index.
-  uint16_t initialIndex;
-  /// Index where next position will be written in PLC.
-  uint16_t nextPositionIndex;
-  /// Max index value for next position before it will be restored to initial index.
-  uint16_t maxPositionIndices;
-  /// Number of new positions received.
-  uint32_t newPositionsReceivedCount;
-  /// Value at which command to PLC will be sent to execute movements.
-  uint16_t executeMovementsOnIndex;
-};
+  struct PositionSettings
+  {
+    /// Initial position index.
+    uint16_t initialIndex;
+    /// Index where next position will be written in PLC.
+    uint16_t nextPositionIndex;
+    /// Max index value for next position before it will be restored to initial index.
+    uint16_t maxPositionIndices;
+    /// Number of new positions received.
+    uint32_t newPositionsReceivedCount;
+    /// Value at which command to PLC will be sent to execute movements.
+    uint16_t executeMovementsOnIndex;
+  };

Code style divergence in file 'include/linrob_axis/Resource.h':

--- include/linrob_axis/Resource.h
+++ include/linrob_axis/Resource.h.uncrustify
@@ -23,2 +23,2 @@
-class Resource : public hardware_interface::SystemInterface
-{
+  class Resource: public hardware_interface::SystemInterface
+  {
@@ -26,77 +26,87 @@
-  /**
-   * Constructor.
-   */
-  Resource() = default;
-
-  /**
-   * Destructor.
-   */
-  ~Resource() override;
-
-  /**
-   * Initialization of the hardware interface from data parsed from the robot's URDF.
-   * @param info structure with data from URDF.
-   * @return State of the function.
-   */
-  hardware_interface::CallbackReturn on_init(const hardware_interface::HardwareInfo& info) override;
-
-  /**
-   * Callback function for configure transition.
-   * @param previous_state previous state of the hardware interface.
-   * @return state of the function.
-   */
-  hardware_interface::CallbackReturn on_configure(const rclcpp_lifecycle::State& previous_state) override;
-
-  /**
-   * Function for activating the hardware.AxisState
-   * @param previous_state previous state of the hardware interface.
-   * @return state of the function.
-   */
-  hardware_interface::CallbackReturn on_activate(const rclcpp_lifecycle::State& previous_state) override;
-
-  /**
-   * Function for turning off the hardware.
-   * @param previous_state previous state of the hardware interface.
-   * @return state of the function.
-   */
-  hardware_interface::CallbackReturn on_deactivate(const rclcpp_lifecycle::State& previous_state) override;
-
-  /**
-   * Function for writing latest command to the hardware.
-   * @param time time at the start of this control loop iteration.
-   * @param period measured time taken by the last control loop iteration.
-   * @return state of the function.
-   */
-  hardware_interface::return_type write(const rclcpp::Time& time, const rclcpp::Duration& period) override;
-
-  /**
-   * Function for reading the current state of the hardware.
-   * @param time time at the start of this control loop iteration.
-   * @param period measured time taken by the last control loop iteration.
-   * @return state of the function.
-   */
-  hardware_interface::return_type read(const rclcpp::Time& time, const rclcpp::Duration& period) override;
-
-  /**
-   * Disconnects the datalayer client
-   * @return state of the function.
-   */
-  void disconnect();
-
-  /**
-   * Exports all state interfaces for this hardware interface.
-   * @return vector of state interfaces.
-   */
-  std::vector<hardware_interface::StateInterface> export_state_interfaces() override;
-
-  /**
-   * Exports all command interfaces for this hardware interface.
-   * @return vector of command interfaces.
-   */
-  std::vector<hardware_interface::CommandInterface> export_command_interfaces() override;
-
-  /**
-   * Waits for the system mode to reach the expected mode within a timeout.
-   * Returns SUCCESS if reached, FAILURE on timeout.
-   */
-  hardware_interface::CallbackReturn waitForSystemMode(const std::string& expectedMode, std::chrono::milliseconds timeout);
+    /**
+     * Constructor.
+     */
+    Resource() = default;
+
+    /**
+     * Destructor.
+     */
+    ~Resource() override;
+
+    /**
+     * Initialization of the hardware interface from data parsed from the robot's URDF.
+     * @param info structure with data from URDF.
+     * @return State of the function.
+     */
+    hardware_interface::CallbackReturn on_init(const hardware_interface::HardwareInfo & info)
+    override;
+
+    /**
+     * Callback function for configure transition.
+     * @param previous_state previous state of the hardware interface.
+     * @return state of the function.
+     */
+    hardware_interface::CallbackReturn on_configure(const rclcpp_lifecycle::State & previous_state)
+    override;
+
+    /**
+     * Function for activating the hardware.AxisState
+     * @param previous_state previous state of the hardware interface.
+     * @return state of the function.
+     */
+    hardware_interface::CallbackReturn on_activate(const rclcpp_lifecycle::State & previous_state)
+    override;
+
+    /**
+     * Function for turning off the hardware.
+     * @param previous_state previous state of the hardware interface.
+     * @return state of the function.
+     */
+    hardware_interface::CallbackReturn on_deactivate(const rclcpp_lifecycle::State & previous_state)
+    override;
+
+    /**
+     * Function for writing latest command to the hardware.
+     * @param time time at the start of this control loop iteration.
+     * @param period measured time taken by the last control loop iteration.
+     * @return state of the function.
+     */
+    hardware_interface::return_type write(
+      const rclcpp::Time & time,
+      const rclcpp::Duration & period) override;
+
+    /**
+     * Function for reading the current state of the hardware.
+     * @param time time at the start of this control loop iteration.
+     * @param period measured time taken by the last control loop iteration.
+     * @return state of the function.
+     */
+    hardware_interface::return_type read(
+      const rclcpp::Time & time,
+      const rclcpp::Duration & period) override;
+
+    /**
+     * Disconnects the datalayer client
+     * @return state of the function.
+     */
+    void disconnect();
+
+    /**
+     * Exports all state interfaces for this hardware interface.
+     * @return vector of state interfaces.
+     */
+    std::vector < hardware_interface::StateInterface > export_state_interfaces() override;
+
+    /**
+     * Exports all command interfaces for this hardware interface.
+     * @return vector of command interfaces.
+     */
+    std::vector < hardware_interface::CommandInterface > export_command_interfaces() override;
+
+    /**
+     * Waits for the system mode to reach the expected mode within a timeout.
+     * Returns SUCCESS if reached, FAILURE on timeout.
+     */
+    hardware_interface::CallbackReturn waitForSystemMode(
+      const std::string & expectedMode,
+      std::chrono::milliseconds timeout);
@@ -105,113 +115,115 @@
-  /**
-   * Creates data pair with datalayer node address and variant type for storing data read from datalayer node and stores
-   * created pair in the map at specified key.
-   * @param key key for the datalayer node.
-   * @param address address of the datalayer node.
-   */
-  void registerDatalayerNode(const std::string& key, const std::string& address);
-
-  /**
-   * Reads datalayer node.
-   * @param key key for the datalayer node.
-   * @param expectedType expected variant type of the data.
-   * @return true if the data was read successfully, false otherwise.
-   */
-  bool updateDataFromNode(const std::string& key, comm::datalayer::VariantType expectedType);
-
-  /**
-   * Establishes connection to the datalayer node.
-   * @return state of the function.
-   */
-  hardware_interface::CallbackReturn connect();
-
-  /**
-   * Checks if the axis is in the expected state.
-   * @param expectedState expected axis state.
-   * @return state of the function.
-   */
-  hardware_interface::CallbackReturn checkAxisState(AxisState expectedState);
-
-  /**
-   * Checks if the system is in the expected mode.
-   * @param expectedMode expected system mode.
-   * @return state of the function.
-   */
-  hardware_interface::CallbackReturn checkSystemMode(const std::string& expectedMode);
-
-  /**
-   * Updates the state of the axis. Converts data stored in the connection map to the state interface.
-   * Stored data: current position and velocity.
-   * @return state of the function.
-   */
-  void updateState();
-
-  /**
-   * Writes data to the specified datalayer node.
-   * @tparam T type of the data to be written.
-   * @param key key for the datalayer node.
-   * @param value value to be written to the datalayer node.
-   * @return true if the data was written successfully, false otherwise.
-   */
-  template <typename T>
-  bool writeToDatalayerNode(const std::string& key, const T& value);
-
-  /**
-   * Converts data soted in the datalayer Variant object to vector of specified type.
-   * @tparam T type of the data to be converted.
-   * @param data datalayer Variant object.
-   * @return vector of converted data.
-   */
-  template <typename T>
-  std::vector<T> variantDataToVector(const comm::datalayer::Variant& data);
-
-  /**
-   * Waits until state, status and mode datalayer nodes are valid.
-   */
-  void waitUntilRequiredNodesAreValid();
-
-  /**
-   * Sets the log level for the datalayer system.
-   *
-   * Possible log levels:
-   * - DEBUG
-   * - INFO
-   * - WARN
-   * - ERROR
-   * - FATAL
-   *
-   * @param level log level to be set.
-   *
-   */
-  void setLogLevel(const std::string& level);
-
-  /**
-   * Processes virtual commands from the controller
-   */
-  void processVirtualCommands();
-
-  /**
-   * Checks the axis state periodically and updates mAxisReadyForOperation flag.
-   * This is called during read/write operations to monitor when the axis becomes ready.
-   */
-  void checkAxisReadiness();
-
-  /**
-   * Switches the system to AUTO_EXTERNAL mode and waits for confirmation.
-   * @return true if successful, false otherwise
-   */
-  bool switchToAutoExternalMode();
-
-  /**
-   * Gets the latest error code from the PLC.
-   * @return The latest error code as uint32_t.
-   */
-  uint32_t getLatestErrorCode();
-
-  /**
-   * Helper to reset the axis target positions buffer (local only).
-   * Fills the buffer with the current position (rounded to 4 decimal places).
-   */
-  inline void resetAxisTargetPositionsExt() {
-    double pos = std::round(mState.at("position") * 10000.0) / 10000.0;
-    for (size_t i = 0; i < kMaxPositionsExt; ++i) {
-      mAxisTargetPositionsExt[i] = pos * 1000.0; // Convert to mm
+    /**
+     * Creates data pair with datalayer node address and variant type for storing data read from datalayer node and stores
+     * created pair in the map at specified key.
+     * @param key key for the datalayer node.
+     * @param address address of the datalayer node.
+     */
+    void registerDatalayerNode(const std::string & key, const std::string & address);
+
+    /**
+     * Reads datalayer node.
+     * @param key key for the datalayer node.
+     * @param expectedType expected variant type of the data.
+     * @return true if the data was read successfully, false otherwise.
+     */
+    bool updateDataFromNode(const std::string & key, comm::datalayer::VariantType expectedType);
+
+    /**
+     * Establishes connection to the datalayer node.
+     * @return state of the function.
+     */
+    hardware_interface::CallbackReturn connect();
+
+    /**
+     * Checks if the axis is in the expected state.
+     * @param expectedState expected axis state.
+     * @return state of the function.
+     */
+    hardware_interface::CallbackReturn checkAxisState(AxisState expectedState);
+
+    /**
+     * Checks if the system is in the expected mode.
+     * @param expectedMode expected system mode.
+     * @return state of the function.
+     */
+    hardware_interface::CallbackReturn checkSystemMode(const std::string & expectedMode);
+
+    /**
+     * Updates the state of the axis. Converts data stored in the connection map to the state interface.
+     * Stored data: current position and velocity.
+     * @return state of the function.
+     */
+    void updateState();
+
+    /**
+     * Writes data to the specified datalayer node.
+     * @tparam T type of the data to be written.
+     * @param key key for the datalayer node.
+     * @param value value to be written to the datalayer node.
+     * @return true if the data was written successfully, false otherwise.
+     */
+    template < typename T >
+    bool writeToDatalayerNode(const std::string & key, const T & value);
+
+    /**
+     * Converts data soted in the datalayer Variant object to vector of specified type.
+     * @tparam T type of the data to be converted.
+     * @param data datalayer Variant object.
+     * @return vector of converted data.
+     */
+    template < typename T >
+    std::vector < T > variantDataToVector(const comm::datalayer::Variant & data);
+
+    /**
+     * Waits until state, status and mode datalayer nodes are valid.
+     */
+    void waitUntilRequiredNodesAreValid();
+
+    /**
+     * Sets the log level for the datalayer system.
+     *
+     * Possible log levels:
+     * - DEBUG
+     * - INFO
+     * - WARN
+     * - ERROR
+     * - FATAL
+     *
+     * @param level log level to be set.
+     *
+     */
+    void setLogLevel(const std::string & level);
+
+    /**
+     * Processes virtual commands from the controller
+     */
+    void processVirtualCommands();
+
+    /**
+     * Checks the axis state periodically and updates mAxisReadyForOperation flag.
+     * This is called during read/write operations to monitor when the axis becomes ready.
+     */
+    void checkAxisReadiness();
+
+    /**
+     * Switches the system to AUTO_EXTERNAL mode and waits for confirmation.
+     * @return true if successful, false otherwise
+     */
+    bool switchToAutoExternalMode();
+
+    /**
+     * Gets the latest error code from the PLC.
+     * @return The latest error code as uint32_t.
+     */
+    uint32_t getLatestErrorCode();
+
+    /**
+     * Helper to reset the axis target positions buffer (local only).
+     * Fills the buffer with the current position (rounded to 4 decimal places).
+     */
+    inline void resetAxisTargetPositionsExt()
+    {
+      double pos = std::round(mState.at("position") * 10000.0) / 10000.0;
+      for (size_t i = 0; i < kMaxPositionsExt; ++i) {
+        mAxisTargetPositionsExt[i] = pos * 1000.0; // Convert to mm
+      }
@@ -218,0 +231,108 @@
+
+    /**
+     * Helper to reset the axis target position timestamp buffer (local only).
+     * Fills the buffer with zeros.
+     */
+    inline void resetAxisTargetPositionTimestampExt()
+    {
+      for (size_t i = 0; i < kMaxPositionsExt; ++i) {
+        mAxisTargetPositionTimestampExt[i] = 0.0;
+      }
+    }
+
+    /**
+     * Helper to reset PLC buffer and index (writes to PLC).
+     * Fills local buffer with current position, resets index, and writes both to the PLC.
+     */
+    bool resetPlcBufferAndIndex();
+
+    /// Connection settings.
+    linrob::Connection mConnection;
+
+    /// Datalayer system.
+    comm::datalayer::DatalayerSystem mDatalayerSystem;
+
+    /// Datalayer client.
+    std::unique_ptr < comm::datalayer::IClient > mClient = nullptr;
+
+    /// Hardware state interface.
+    std::unordered_map < std::string,
+    double >
+    mState {{"position", 0.0}, {"velocity", 0.0}, {"error_code", 0.0}, {"axis_ready", 0.0}};
+
+    // Hardware command interface.
+    double mPositionCommand {0.0};
+
+    // Virtual command interfaces
+    double mVirtualResetCommand {0.0};
+    double mVirtualReferenceCommand {0.0};
+    double mVirtualStopCommand {0.0};
+    double mVirtualStartMotionCommand {0.0};
+    double mVirtualTargetPositionCommand {0.0};
+    double mVirtualTargetVelocityCommand {0.0};
+
+    /// Last new position received.
+    double mLastPositionCommand {0.0};
+
+    /// Last time when new position command was received.
+    rclcpp::Time mLastPositionCommandTime;
+
+    /// Last time a buffer entry (new or duplicate) was written to PLC.
+    rclcpp::Time mLastBufferFillTime;
+
+    /// Limit for how many duplicate positions to append after last new target
+    uint32_t mDuplicateAppendLimit {5};
+
+    /// Counter tracking how many duplicates have been appended since the last new target position.
+    uint32_t mDuplicateAppendsSinceLastNew {0};
+
+    /// Position command settings for observing and managing system state.
+    PositionSettings mPositionSettings;
+
+    /// Expected max delay in milliseconds between commands.
+    uint32_t mExpectedDelayBetweenCommandsMs {0U};
+
+    /// Position tolerance in mm for checking if axis reached target position.
+    double mPositionToleranceMm {0.01};
+
+    /// Flag to mark if the movement execution was already stopped.
+    bool mMovementExecutionStopped {true};
+
+    /// Flag to track if the axis is ready for operation (in STANDSTILL state)
+    bool mAxisReadyForOperation {false};
+
+    /// Last time we checked the axis state
+    std::chrono::steady_clock::time_point mLastAxisStateCheck;
+
+    /// Buffer for array write to new_position (ARRAY[LREAL] in PLC).
+    static constexpr size_t kMaxPositionsExt = 1000;
+    double mAxisTargetPositionsExt[kMaxPositionsExt] = {0.0};
+
+    /// Timestamp buffer for target positions (local only).
+    double mAxisTargetPositionTimestampExt[kMaxPositionsExt] = {0.0};
+
+    /// Latest error code from the axis
+    uint32_t mLatestErrorCode {0U};
+    /// Flags to track command execution state
+    bool mResetCommandExecuted {false};
+    bool mReferenceCommandExecuted {false};
+    bool mStopCommandExecuted {false};
+    bool mStartMotionCommandExecuted {false};
+  };
+
+  template < typename T >
+  std::vector < T > Resource::variantDataToVector(const comm::datalayer::Variant & data)
+  {
+    auto expectedType = VARIANT_ARRAY_TYPE_MAP.at(typeid(T).name());
+    if (data.getType() != expectedType) {
+      RCLCPP_ERROR(
+        rclcpp::get_logger("linrob"),
+        "Invalid type for data. Expected: %u; Actual: %u",
+        static_cast < unsigned int > (expectedType),
+        static_cast < unsigned int > (data.getType()));
+      return {};
+    }
+    auto size = data.getCount();
+    auto typeData = static_cast < const T * > (static_cast < const void * > (data.getData()));
+    std::vector < T > result(typeData, typeData + size);
+    return result;
@@ -221,7 +341,11 @@
-  /**
-   * Helper to reset the axis target position timestamp buffer (local only).
-   * Fills the buffer with zeros.
-   */
-  inline void resetAxisTargetPositionTimestampExt() {
-    for (size_t i = 0; i < kMaxPositionsExt; ++i) {
-      mAxisTargetPositionTimestampExt[i] = 0.0;
+  template < typename T >
+  bool Resource::writeToDatalayerNode(const std::string & key, const T & value)
+  {
+    auto & data = mConnection.datalayerNodeMap.at(key);
+    data.second.setValue(value);
+    auto writeResult = mClient->writeSync(data.first, &data.second);
+    if (writeResult != DL_OK) {
+      RCLCPP_ERROR(
+        rclcpp::get_logger("linrob"), "Failed to write data at %s. %s",
+        data.first.c_str(), writeResult.toString());
+      return false;
@@ -228,0 +353 @@
+    return true;
@@ -230,95 +354,0 @@
-
-  /**
-   * Helper to reset PLC buffer and index (writes to PLC).
-   * Fills local buffer with current position, resets index, and writes both to the PLC.
-   */
-  bool resetPlcBufferAndIndex();
-
-  /// Connection settings.
-  linrob::Connection mConnection;
-
-  /// Datalayer system.
-  comm::datalayer::DatalayerSystem mDatalayerSystem;
-
-  /// Datalayer client.
-  std::unique_ptr<comm::datalayer::IClient> mClient = nullptr;
-
-  /// Hardware state interface.
-  std::unordered_map<std::string, double> mState {{"position", 0.0}, {"velocity", 0.0}, {"error_code", 0.0}, {"axis_ready", 0.0}};
-
-  // Hardware command interface.
-  double mPositionCommand {0.0};
-
-  // Virtual command interfaces
-  double mVirtualResetCommand {0.0};
-  double mVirtualReferenceCommand {0.0};
-  double mVirtualStopCommand {0.0};
-  double mVirtualStartMotionCommand {0.0};
-  double mVirtualTargetPositionCommand {0.0};
-  double mVirtualTargetVelocityCommand {0.0};
-
-  /// Last new position received.
-  double mLastPositionCommand {0.0};
-
-  /// Last time when new position command was received.
-  rclcpp::Time mLastPositionCommandTime;
-
-  /// Last time a buffer entry (new or duplicate) was written to PLC.
-  rclcpp::Time mLastBufferFillTime;
-
-  /// Limit for how many duplicate positions to append after last new target
-  uint32_t mDuplicateAppendLimit {5};
-
-  /// Counter tracking how many duplicates have been appended since the last new target position.
-  uint32_t mDuplicateAppendsSinceLastNew {0};
-
-  /// Position command settings for observing and managing system state.
-  PositionSettings mPositionSettings;
-
-  /// Expected max delay in milliseconds between commands.
-  uint32_t mExpectedDelayBetweenCommandsMs {0U};
-
-  /// Position tolerance in mm for checking if axis reached target position.
-  double mPositionToleranceMm {0.01};
-
-  /// Flag to mark if the movement execution was already stopped.
-  bool mMovementExecutionStopped {true};
-
-  /// Flag to track if the axis is ready for operation (in STANDSTILL state)
-  bool mAxisReadyForOperation {false};
-
-  /// Last time we checked the axis state
-  std::chrono::steady_clock::time_point mLastAxisStateCheck;
-
-  /// Buffer for array write to new_position (ARRAY[LREAL] in PLC).
-  static constexpr size_t kMaxPositionsExt = 1000;
-  double mAxisTargetPositionsExt[kMaxPositionsExt] = {0.0};
-
-  /// Timestamp buffer for target positions (local only).
-  double mAxisTargetPositionTimestampExt[kMaxPositionsExt] = {0.0};
-
-  /// Latest error code from the axis
-  uint32_t mLatestErrorCode {0U};
-  /// Flags to track command execution state
-  bool mResetCommandExecuted {false};
-  bool mReferenceCommandExecuted {false};
-  bool mStopCommandExecuted {false};
-  bool mStartMotionCommandExecuted {false};
-};
-
-template <typename T>
-std::vector<T> Resource::variantDataToVector(const comm::datalayer::Variant& data)
-{
-  auto expectedType = VARIANT_ARRAY_TYPE_MAP.at(typeid(T).name());
-  if (data.getType() != expectedType)
-  {
-    RCLCPP_ERROR(rclcpp::get_logger("linrob"),
-                 "Invalid type for data. Expected: %u; Actual: %u",
-                 static_cast<unsigned int>(expectedType),
-                 static_cast<unsigned int>(data.getType()));
-    return {};
-  }
-  auto size = data.getCount();
-  auto typeData = static_cast<const T*>(static_cast<const void*>(data.getData()));
-  std::vector<T> result(typeData, typeData + size);
-  return result;
@@ -327,16 +356,0 @@
-template <typename T>
-bool Resource::writeToDatalayerNode(const std::string& key, const T& value)
-{
-  auto& data = mConnection.datalayerNodeMap.at(key);
-  data.second.setValue(value);
-  auto writeResult = mClient->writeSync(data.first, &data.second);
-  if (writeResult != DL_OK)
-  {
-    RCLCPP_ERROR(
-      rclcpp::get_logger("linrob"), "Failed to write data at %s. %s", data.first.c_str(), writeResult.toString());
-    return false;
-  }
-  return true;
-}
-}
-

Code style divergence in file 'include/linrob_axis/VariantType.h':

--- include/linrob_axis/VariantType.h
+++ include/linrob_axis/VariantType.h.uncrustify
@@ -10,3 +10,4 @@
-const std::unordered_map<std::string, comm::datalayer::VariantType> VARIANT_ARRAY_TYPE_MAP = {
-  {typeid(int).name(), comm::datalayer::VariantType::ARRAY_OF_INT32},
-  {typeid(float).name(), comm::datalayer::VariantType::ARRAY_OF_FLOAT64}};
+  const std::unordered_map < std::string, comm::datalayer::VariantType > VARIANT_ARRAY_TYPE_MAP = {
+    {typeid(int).name(), comm::datalayer::VariantType::ARRAY_OF_INT32},
+    {typeid(float).name(), comm::datalayer::VariantType::ARRAY_OF_FLOAT64}
+  };

Code style divergence in file 'include/linrob_axis/axis_controller.hpp':

--- include/linrob_axis/axis_controller.hpp
+++ include/linrob_axis/axis_controller.hpp.uncrustify
@@ -29 +29 @@
-    const rclcpp::Time& time, const rclcpp::Duration& period) override;
+    const rclcpp::Time & time, const rclcpp::Duration & period) override;
@@ -33 +33 @@
-    const rclcpp_lifecycle::State& previous_state) override;
+    const rclcpp_lifecycle::State & previous_state) override;
@@ -35 +35 @@
-    const rclcpp_lifecycle::State& previous_state) override;
+    const rclcpp_lifecycle::State & previous_state) override;
@@ -37 +37 @@
-    const rclcpp_lifecycle::State& previous_state) override;
+    const rclcpp_lifecycle::State & previous_state) override;

Code style divergence in file 'include/linrob_axis/ctrlx_datalayer_helper.h':

--- include/linrob_axis/ctrlx_datalayer_helper.h
+++ include/linrob_axis/ctrlx_datalayer_helper.h.uncrustify
@@ -10 +10 @@
- /*! \file
+/*! \file
@@ -56,2 +56,2 @@
-  //! Retrieve environment variable SNAP
-static const char* snapPath()
+//! Retrieve environment variable SNAP
+static const char * snapPath()
@@ -75,3 +75,3 @@
-  const std::string& ip = "192.168.1.1",
-  const std::string& user = "boschrexroth",
-  const std::string& password = "boschrexroth",
+  const std::string & ip = "192.168.1.1",
+  const std::string & user = "boschrexroth",
+  const std::string & password = "boschrexroth",
@@ -80,2 +80 @@
-  if (isSnap())
-  {
+  if (isSnap()) {
@@ -85 +84,2 @@
-  std::string connectionString = DL_TCP + user + std::string(":") + password + std::string("@") + ip;
+  std::string connectionString = DL_TCP + user + std::string(":") + password + std::string("@") +
+    ip;
@@ -87,2 +87 @@
-  if (443 == sslPort)
-  {
+  if (443 == sslPort) {
@@ -102,4 +101,5 @@
-inline comm::datalayer::IClient3* getClient(comm::datalayer::DatalayerSystem& datalayerSystem,
-                                           const std::string& ip = "192.168.1.1",
-                                           const std::string& user = "boschrexroth",
-                                           const std::string& password = "boschrexroth", int sslPort = 443)
+inline comm::datalayer::IClient3 * getClient(
+  comm::datalayer::DatalayerSystem & datalayerSystem,
+  const std::string & ip = "192.168.1.1",
+  const std::string & user = "boschrexroth",
+  const std::string & password = "boschrexroth", int sslPort = 443)
@@ -108,3 +108,2 @@
-  comm::datalayer::IClient3* client = datalayerSystem.factory()->createClient3(connectionString);
-  if (client->isConnected())
-  {
+  comm::datalayer::IClient3 * client = datalayerSystem.factory()->createClient3(connectionString);
+  if (client->isConnected()) {
@@ -126,4 +125,5 @@
-inline comm::datalayer::IProvider3* getProvider(comm::datalayer::DatalayerSystem& datalayerSystem,
-                                               const std::string& ip = "192.168.1.1",
-                                               const std::string& user = "boschrexroth",
-                                               const std::string& password = "boschrexroth", int sslPort = 443)
+inline comm::datalayer::IProvider3 * getProvider(
+  comm::datalayer::DatalayerSystem & datalayerSystem,
+  const std::string & ip = "192.168.1.1",
+  const std::string & user = "boschrexroth",
+  const std::string & password = "boschrexroth", int sslPort = 443)
@@ -132,3 +132,3 @@
-  comm::datalayer::IProvider3* provider = datalayerSystem.factory4()->createProvider3(connectionString);
-  if (provider->start() == DL_OK)
-  {
+  comm::datalayer::IProvider3 * provider = datalayerSystem.factory4()->createProvider3(
+    connectionString);
+  if (provider->start() == DL_OK) {

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_c__visibility_control.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_c__visibility_control.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_c__visibility_control.h.uncrustify
@@ -25 +25,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_C_EXPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_C_EXPORT_linrob_axis
@@ -27 +28,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_C_IMPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_C_IMPORT_linrob_axis

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_fastrtps_cpp__visibility_control.h.uncrustify
@@ -25 +25,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_CPP_EXPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_CPP_EXPORT_linrob_axis
@@ -27 +28,2 @@
-    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_FASTRTPS_CPP_IMPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_FASTRTPS_CPP_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_FASTRTPS_CPP_IMPORT_linrob_axis

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_introspection_c__visibility_control.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_introspection_c__visibility_control.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_typesupport_introspection_c__visibility_control.h.uncrustify
@@ -25 +25,2 @@
-    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_INTROSPECTION_C_EXPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_INTROSPECTION_C_EXPORT_linrob_axis
@@ -27 +28,2 @@
-    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis ROSIDL_TYPESUPPORT_INTROSPECTION_C_IMPORT_linrob_axis
+    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis \
+  ROSIDL_TYPESUPPORT_INTROSPECTION_C_IMPORT_linrob_axis
@@ -33 +35,2 @@
-    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis __attribute__ ((visibility("default")))
+    #define ROSIDL_TYPESUPPORT_INTROSPECTION_C_PUBLIC_linrob_axis __attribute__ ((visibility( \
+      "default")))

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__builder.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__builder.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__builder.hpp.uncrustify
@@ -52 +52,2 @@
-  ::linrob_axis::srv::ReferenceAxis_Response message(::linrob_axis::srv::ReferenceAxis_Response::_message_type arg)
+  ::linrob_axis::srv::ReferenceAxis_Response message(
+    ::linrob_axis::srv::ReferenceAxis_Response::_message_type arg)
@@ -68 +69,2 @@
-  Init_ReferenceAxis_Response_message success(::linrob_axis::srv::ReferenceAxis_Response::_success_type arg)
+  Init_ReferenceAxis_Response_message success(
+    ::linrob_axis::srv::ReferenceAxis_Response::_success_type arg)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.c':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.c
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.c.uncrustify
@@ -33 +33,3 @@
-linrob_axis__srv__ReferenceAxis_Request__are_equal(const linrob_axis__srv__ReferenceAxis_Request * lhs, const linrob_axis__srv__ReferenceAxis_Request * rhs)
+linrob_axis__srv__ReferenceAxis_Request__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request * rhs)
@@ -62 +64,4 @@
-  linrob_axis__srv__ReferenceAxis_Request * msg = (linrob_axis__srv__ReferenceAxis_Request *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Request), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Request * msg =
+    (linrob_axis__srv__ReferenceAxis_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Request), allocator.state);
@@ -87 +92,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__init(linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size)
@@ -96 +102,5 @@
-    data = (linrob_axis__srv__ReferenceAxis_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ReferenceAxis_Request), allocator.state);
+    data =
+      (linrob_axis__srv__ReferenceAxis_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ReferenceAxis_Request),
+      allocator.state);
@@ -124 +134,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
@@ -153 +164,4 @@
-  linrob_axis__srv__ReferenceAxis_Request__Sequence * array = (linrob_axis__srv__ReferenceAxis_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Request__Sequence), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array =
+    (linrob_axis__srv__ReferenceAxis_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Request__Sequence), allocator.state);
@@ -166 +180,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array)
@@ -176 +191,3 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs)
+linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs)
@@ -269 +286,3 @@
-linrob_axis__srv__ReferenceAxis_Response__are_equal(const linrob_axis__srv__ReferenceAxis_Response * lhs, const linrob_axis__srv__ReferenceAxis_Response * rhs)
+linrob_axis__srv__ReferenceAxis_Response__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response * rhs)
@@ -310 +329,4 @@
-  linrob_axis__srv__ReferenceAxis_Response * msg = (linrob_axis__srv__ReferenceAxis_Response *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Response), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Response * msg =
+    (linrob_axis__srv__ReferenceAxis_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Response), allocator.state);
@@ -335 +357,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__init(linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size)
@@ -344 +367,5 @@
-    data = (linrob_axis__srv__ReferenceAxis_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ReferenceAxis_Response), allocator.state);
+    data =
+      (linrob_axis__srv__ReferenceAxis_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ReferenceAxis_Response),
+      allocator.state);
@@ -372 +399,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
@@ -401 +429,4 @@
-  linrob_axis__srv__ReferenceAxis_Response__Sequence * array = (linrob_axis__srv__ReferenceAxis_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ReferenceAxis_Response__Sequence), allocator.state);
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array =
+    (linrob_axis__srv__ReferenceAxis_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ReferenceAxis_Response__Sequence), allocator.state);
@@ -414 +445,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array)
@@ -424 +456,3 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs)
+linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__ReferenceAxis_Request__are_equal(const linrob_axis__srv__ReferenceAxis_Request * lhs, const linrob_axis__srv__ReferenceAxis_Request * rhs);
+linrob_axis__srv__ReferenceAxis_Request__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__init(linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs);
+linrob_axis__srv__ReferenceAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__ReferenceAxis_Response__are_equal(const linrob_axis__srv__ReferenceAxis_Response * lhs, const linrob_axis__srv__ReferenceAxis_Response * rhs);
+linrob_axis__srv__ReferenceAxis_Response__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__init(linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__init(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__fini(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ReferenceAxis_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs, const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs);
+linrob_axis__srv__ReferenceAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ReferenceAxis_Response__Sequence * rhs);

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_c.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_c.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ReferenceAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_cpp.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_cpp.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ReferenceAxis_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ReferenceAxis_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ReferenceAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ReferenceAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_c.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_c.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_cpp.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_cpp.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ReferenceAxis_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ReferenceAxis_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ReferenceAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__struct.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__struct.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit ReferenceAxis_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -45 +46,3 @@
-  explicit ReferenceAxis_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -143 +146,2 @@
-  explicit ReferenceAxis_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -153 +157,3 @@
-  explicit ReferenceAxis_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ReferenceAxis_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -169 +175,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -180 +187,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.c':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.c
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_init_function(
+void
+linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_member_array[1] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_member_array
+[1] = {
@@ -54 +59,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members
+  =
+  {
@@ -62 +70 @@
-};
+  };
@@ -66 +74,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle
+  =
+  {
@@ -68 +79,2 @@
-  &linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members,
+  &
+  linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_members,
@@ -70 +82 @@
-};
+  };
@@ -74,3 +86,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)() {
-  if (!linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Request)() {
+  if (!
+    linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -79 +97,2 @@
-  return &linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__ReferenceAxis_Request__rosidl_typesupport_introspection_c__ReferenceAxis_Request_message_type_support_handle;
@@ -112 +131,2 @@
-void linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_init_function(
+void
+linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_init_function(
@@ -121 +141,3 @@
-void linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_fini_function(
+  void * message_memory)
@@ -126 +148,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_member_array
+[2] = {
@@ -163 +187,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members
+  =
+  {
@@ -171 +198 @@
-};
+  };
@@ -175 +202,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle
+  =
+  {
@@ -177 +207,2 @@
-  &linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members,
+  &
+  linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_members,
@@ -179 +210 @@
-};
+  };
@@ -183,3 +214,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)() {
-  if (!linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Response)() {
+  if (!
+    linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -188 +225,2 @@
-  return &linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__ReferenceAxis_Response__rosidl_typesupport_introspection_c__ReferenceAxis_Response_message_type_support_handle;
@@ -204 +242,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members
+  =
+  {
@@ -212,3 +253,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+  =
+  {
@@ -216 +260,2 @@
-  &linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members,
+  &
+  linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_members,
@@ -218 +263 @@
-};
+  };
@@ -222 +267,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Request)();
@@ -225 +272,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis_Response)();
@@ -229,3 +278,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis)() {
-  if (!linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ReferenceAxis)() {
+  if (!
+    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+    .typesupport_identifier =
@@ -235 +290,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle
+    .data;
@@ -240 +297,4 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ReferenceAxis_Request)()->data;
@@ -245,5 +305,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ReferenceAxis_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ReferenceAxis_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__reference_axis__rosidl_typesupport_introspection_c__ReferenceAxis_service_type_support_handle;
+}

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.cpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.cpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ReferenceAxis_Request_message_member_array[1] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ReferenceAxis_Request_message_member_array[1] = {
@@ -60 +61,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ReferenceAxis_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ReferenceAxis_Request_message_members = {
@@ -91 +93,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Request_message_type_support_handle;
@@ -103,2 +106,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ReferenceAxis_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Request_message_type_support_handle;
@@ -159 +165,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ReferenceAxis_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ReferenceAxis_Response_message_member_array[2] = {
@@ -196 +203,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ReferenceAxis_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ReferenceAxis_Response_message_members = {
@@ -227 +235,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Response_message_type_support_handle;
@@ -239,2 +248,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ReferenceAxis_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ReferenceAxis_Response_message_type_support_handle;
@@ -306 +318,2 @@
-    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ReferenceAxis_service_type_support_handle;
+    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+    ReferenceAxis_service_type_support_handle;
@@ -347 +360,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ReferenceAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ReferenceAxis)() {

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__builder.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__builder.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__builder.hpp.uncrustify
@@ -52 +52,2 @@
-  ::linrob_axis::srv::ResetAxis_Response message(::linrob_axis::srv::ResetAxis_Response::_message_type arg)
+  ::linrob_axis::srv::ResetAxis_Response message(
+    ::linrob_axis::srv::ResetAxis_Response::_message_type arg)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.c':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.c
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.c.uncrustify
@@ -33 +33,3 @@
-linrob_axis__srv__ResetAxis_Request__are_equal(const linrob_axis__srv__ResetAxis_Request * lhs, const linrob_axis__srv__ResetAxis_Request * rhs)
+linrob_axis__srv__ResetAxis_Request__are_equal(
+  const linrob_axis__srv__ResetAxis_Request * lhs,
+  const linrob_axis__srv__ResetAxis_Request * rhs)
@@ -62 +64,4 @@
-  linrob_axis__srv__ResetAxis_Request * msg = (linrob_axis__srv__ResetAxis_Request *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Request), allocator.state);
+  linrob_axis__srv__ResetAxis_Request * msg =
+    (linrob_axis__srv__ResetAxis_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Request), allocator.state);
@@ -87 +92,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__init(linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size)
+linrob_axis__srv__ResetAxis_Request__Sequence__init(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size)
@@ -96 +102,5 @@
-    data = (linrob_axis__srv__ResetAxis_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ResetAxis_Request), allocator.state);
+    data =
+      (linrob_axis__srv__ResetAxis_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ResetAxis_Request),
+      allocator.state);
@@ -124 +134,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__fini(linrob_axis__srv__ResetAxis_Request__Sequence * array)
+linrob_axis__srv__ResetAxis_Request__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array)
@@ -153 +164,4 @@
-  linrob_axis__srv__ResetAxis_Request__Sequence * array = (linrob_axis__srv__ResetAxis_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Request__Sequence), allocator.state);
+  linrob_axis__srv__ResetAxis_Request__Sequence * array =
+    (linrob_axis__srv__ResetAxis_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Request__Sequence), allocator.state);
@@ -166 +180,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__destroy(linrob_axis__srv__ResetAxis_Request__Sequence * array)
+linrob_axis__srv__ResetAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array)
@@ -176 +191,3 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Request__Sequence * lhs, const linrob_axis__srv__ResetAxis_Request__Sequence * rhs)
+linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Request__Sequence * rhs)
@@ -269 +286,3 @@
-linrob_axis__srv__ResetAxis_Response__are_equal(const linrob_axis__srv__ResetAxis_Response * lhs, const linrob_axis__srv__ResetAxis_Response * rhs)
+linrob_axis__srv__ResetAxis_Response__are_equal(
+  const linrob_axis__srv__ResetAxis_Response * lhs,
+  const linrob_axis__srv__ResetAxis_Response * rhs)
@@ -310 +329,4 @@
-  linrob_axis__srv__ResetAxis_Response * msg = (linrob_axis__srv__ResetAxis_Response *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Response), allocator.state);
+  linrob_axis__srv__ResetAxis_Response * msg =
+    (linrob_axis__srv__ResetAxis_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Response), allocator.state);
@@ -335 +357,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__init(linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size)
+linrob_axis__srv__ResetAxis_Response__Sequence__init(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size)
@@ -344 +367,5 @@
-    data = (linrob_axis__srv__ResetAxis_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__ResetAxis_Response), allocator.state);
+    data =
+      (linrob_axis__srv__ResetAxis_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__ResetAxis_Response),
+      allocator.state);
@@ -372 +399,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__fini(linrob_axis__srv__ResetAxis_Response__Sequence * array)
+linrob_axis__srv__ResetAxis_Response__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array)
@@ -401 +429,4 @@
-  linrob_axis__srv__ResetAxis_Response__Sequence * array = (linrob_axis__srv__ResetAxis_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__ResetAxis_Response__Sequence), allocator.state);
+  linrob_axis__srv__ResetAxis_Response__Sequence * array =
+    (linrob_axis__srv__ResetAxis_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__ResetAxis_Response__Sequence), allocator.state);
@@ -414 +445,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__destroy(linrob_axis__srv__ResetAxis_Response__Sequence * array)
+linrob_axis__srv__ResetAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array)
@@ -424 +456,3 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Response__Sequence * lhs, const linrob_axis__srv__ResetAxis_Response__Sequence * rhs)
+linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Response__Sequence * rhs)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__ResetAxis_Request__are_equal(const linrob_axis__srv__ResetAxis_Request * lhs, const linrob_axis__srv__ResetAxis_Request * rhs);
+linrob_axis__srv__ResetAxis_Request__are_equal(
+  const linrob_axis__srv__ResetAxis_Request * lhs,
+  const linrob_axis__srv__ResetAxis_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__init(linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size);
+linrob_axis__srv__ResetAxis_Request__Sequence__init(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__fini(linrob_axis__srv__ResetAxis_Request__Sequence * array);
+linrob_axis__srv__ResetAxis_Request__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__destroy(linrob_axis__srv__ResetAxis_Request__Sequence * array);
+linrob_axis__srv__ResetAxis_Request__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Request__Sequence * lhs, const linrob_axis__srv__ResetAxis_Request__Sequence * rhs);
+linrob_axis__srv__ResetAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__ResetAxis_Response__are_equal(const linrob_axis__srv__ResetAxis_Response * lhs, const linrob_axis__srv__ResetAxis_Response * rhs);
+linrob_axis__srv__ResetAxis_Response__are_equal(
+  const linrob_axis__srv__ResetAxis_Response * lhs,
+  const linrob_axis__srv__ResetAxis_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__init(linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size);
+linrob_axis__srv__ResetAxis_Response__Sequence__init(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__fini(linrob_axis__srv__ResetAxis_Response__Sequence * array);
+linrob_axis__srv__ResetAxis_Response__Sequence__fini(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__destroy(linrob_axis__srv__ResetAxis_Response__Sequence * array);
+linrob_axis__srv__ResetAxis_Response__Sequence__destroy(
+  linrob_axis__srv__ResetAxis_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(const linrob_axis__srv__ResetAxis_Response__Sequence * lhs, const linrob_axis__srv__ResetAxis_Response__Sequence * rhs);
+linrob_axis__srv__ResetAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__ResetAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__ResetAxis_Response__Sequence * rhs);

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_c.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_c.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  ResetAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_cpp.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_cpp.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ResetAxis_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ResetAxis_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, ResetAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, ResetAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_c.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_c.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_cpp.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_cpp.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ResetAxis_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ResetAxis_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, ResetAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__struct.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__struct.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit ResetAxis_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -45 +46,3 @@
-  explicit ResetAxis_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -143 +146,2 @@
-  explicit ResetAxis_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -153 +157,3 @@
-  explicit ResetAxis_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit ResetAxis_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -169 +175,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -180 +187,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.c':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.c
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_init_function(
+void
+linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_member_array[1] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_member_array
+[1] = {
@@ -54 +59,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members
+  =
+  {
@@ -62 +70 @@
-};
+  };
@@ -66 +74,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle
+  =
+  {
@@ -68 +79,2 @@
-  &linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members,
+  &
+  linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_members,
@@ -70 +82 @@
-};
+  };
@@ -74,3 +86,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)() {
-  if (!linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Request)() {
+  if (!
+    linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -79 +97,2 @@
-  return &linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__ResetAxis_Request__rosidl_typesupport_introspection_c__ResetAxis_Request_message_type_support_handle;
@@ -112 +131,2 @@
-void linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_init_function(
+void
+linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_init_function(
@@ -121 +141,3 @@
-void linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_fini_function(
+  void * message_memory)
@@ -126 +148,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_member_array
+[2] = {
@@ -163 +187,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members
+  =
+  {
@@ -171 +198 @@
-};
+  };
@@ -175 +202,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle
+  =
+  {
@@ -177 +207,2 @@
-  &linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members,
+  &
+  linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_members,
@@ -179 +210 @@
-};
+  };
@@ -183,3 +214,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)() {
-  if (!linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Response)() {
+  if (!
+    linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -188 +225,2 @@
-  return &linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__ResetAxis_Response__rosidl_typesupport_introspection_c__ResetAxis_Response_message_type_support_handle;
@@ -204 +242,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members
+  =
+  {
@@ -212,3 +253,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+  =
+  {
@@ -216 +260,2 @@
-  &linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members,
+  &
+  linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_members,
@@ -218 +263 @@
-};
+  };
@@ -222 +267,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Request)();
@@ -225 +272,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis_Response)();
@@ -229,3 +278,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis)() {
-  if (!linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, ResetAxis)() {
+  if (!
+    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+    .typesupport_identifier =
@@ -235 +290,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle
+    .data;
@@ -240 +297,4 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ResetAxis_Request)()->data;
@@ -245,5 +305,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, ResetAxis_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      ResetAxis_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__reset_axis__rosidl_typesupport_introspection_c__ResetAxis_service_type_support_handle;
+}

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.cpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.cpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ResetAxis_Request_message_member_array[1] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ResetAxis_Request_message_member_array[1] = {
@@ -60 +61,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ResetAxis_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ResetAxis_Request_message_members = {
@@ -91 +93,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Request_message_type_support_handle;
@@ -103,2 +106,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ResetAxis_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Request_message_type_support_handle;
@@ -159 +165,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember ResetAxis_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  ResetAxis_Response_message_member_array[2] = {
@@ -196 +203,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers ResetAxis_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  ResetAxis_Response_message_members = {
@@ -227 +235,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Response_message_type_support_handle;
@@ -239,2 +248,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::ResetAxis_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ResetAxis_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         ResetAxis_Response_message_type_support_handle;
@@ -347 +359,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, ResetAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, ResetAxis)() {

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__builder.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__builder.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__builder.hpp.uncrustify
@@ -30 +30,2 @@
-  ::linrob_axis::srv::StartMotion_Request velocity(::linrob_axis::srv::StartMotion_Request::_velocity_type arg)
+  ::linrob_axis::srv::StartMotion_Request velocity(
+    ::linrob_axis::srv::StartMotion_Request::_velocity_type arg)
@@ -46 +47,2 @@
-  Init_StartMotion_Request_velocity target_position(::linrob_axis::srv::StartMotion_Request::_target_position_type arg)
+  Init_StartMotion_Request_velocity target_position(
+    ::linrob_axis::srv::StartMotion_Request::_target_position_type arg)
@@ -62 +64,2 @@
-  Init_StartMotion_Request_target_position start(::linrob_axis::srv::StartMotion_Request::_start_type arg)
+  Init_StartMotion_Request_target_position start(
+    ::linrob_axis::srv::StartMotion_Request::_start_type arg)
@@ -104 +107,2 @@
-  ::linrob_axis::srv::StartMotion_Response message(::linrob_axis::srv::StartMotion_Response::_message_type arg)
+  ::linrob_axis::srv::StartMotion_Response message(
+    ::linrob_axis::srv::StartMotion_Response::_message_type arg)
@@ -120 +124,2 @@
-  Init_StartMotion_Response_message success(::linrob_axis::srv::StartMotion_Response::_success_type arg)
+  Init_StartMotion_Response_message success(
+    ::linrob_axis::srv::StartMotion_Response::_success_type arg)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.c':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.c
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.c.uncrustify
@@ -37 +37,3 @@
-linrob_axis__srv__StartMotion_Request__are_equal(const linrob_axis__srv__StartMotion_Request * lhs, const linrob_axis__srv__StartMotion_Request * rhs)
+linrob_axis__srv__StartMotion_Request__are_equal(
+  const linrob_axis__srv__StartMotion_Request * lhs,
+  const linrob_axis__srv__StartMotion_Request * rhs)
@@ -78 +80,4 @@
-  linrob_axis__srv__StartMotion_Request * msg = (linrob_axis__srv__StartMotion_Request *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Request), allocator.state);
+  linrob_axis__srv__StartMotion_Request * msg =
+    (linrob_axis__srv__StartMotion_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Request), allocator.state);
@@ -103 +108,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__init(linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size)
+linrob_axis__srv__StartMotion_Request__Sequence__init(
+  linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size)
@@ -112 +118,5 @@
-    data = (linrob_axis__srv__StartMotion_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StartMotion_Request), allocator.state);
+    data =
+      (linrob_axis__srv__StartMotion_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StartMotion_Request),
+      allocator.state);
@@ -140 +150,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__fini(linrob_axis__srv__StartMotion_Request__Sequence * array)
+linrob_axis__srv__StartMotion_Request__Sequence__fini(
+  linrob_axis__srv__StartMotion_Request__Sequence * array)
@@ -169 +180,4 @@
-  linrob_axis__srv__StartMotion_Request__Sequence * array = (linrob_axis__srv__StartMotion_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Request__Sequence), allocator.state);
+  linrob_axis__srv__StartMotion_Request__Sequence * array =
+    (linrob_axis__srv__StartMotion_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Request__Sequence), allocator.state);
@@ -182 +196,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__destroy(linrob_axis__srv__StartMotion_Request__Sequence * array)
+linrob_axis__srv__StartMotion_Request__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Request__Sequence * array)
@@ -192 +207,3 @@
-linrob_axis__srv__StartMotion_Request__Sequence__are_equal(const linrob_axis__srv__StartMotion_Request__Sequence * lhs, const linrob_axis__srv__StartMotion_Request__Sequence * rhs)
+linrob_axis__srv__StartMotion_Request__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Request__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Request__Sequence * rhs)
@@ -285 +302,3 @@
-linrob_axis__srv__StartMotion_Response__are_equal(const linrob_axis__srv__StartMotion_Response * lhs, const linrob_axis__srv__StartMotion_Response * rhs)
+linrob_axis__srv__StartMotion_Response__are_equal(
+  const linrob_axis__srv__StartMotion_Response * lhs,
+  const linrob_axis__srv__StartMotion_Response * rhs)
@@ -326 +345,4 @@
-  linrob_axis__srv__StartMotion_Response * msg = (linrob_axis__srv__StartMotion_Response *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Response), allocator.state);
+  linrob_axis__srv__StartMotion_Response * msg =
+    (linrob_axis__srv__StartMotion_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Response), allocator.state);
@@ -351 +373,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__init(linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size)
+linrob_axis__srv__StartMotion_Response__Sequence__init(
+  linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size)
@@ -360 +383,5 @@
-    data = (linrob_axis__srv__StartMotion_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StartMotion_Response), allocator.state);
+    data =
+      (linrob_axis__srv__StartMotion_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StartMotion_Response),
+      allocator.state);
@@ -388 +415,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__fini(linrob_axis__srv__StartMotion_Response__Sequence * array)
+linrob_axis__srv__StartMotion_Response__Sequence__fini(
+  linrob_axis__srv__StartMotion_Response__Sequence * array)
@@ -417 +445,4 @@
-  linrob_axis__srv__StartMotion_Response__Sequence * array = (linrob_axis__srv__StartMotion_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StartMotion_Response__Sequence), allocator.state);
+  linrob_axis__srv__StartMotion_Response__Sequence * array =
+    (linrob_axis__srv__StartMotion_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StartMotion_Response__Sequence), allocator.state);
@@ -430 +461,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__destroy(linrob_axis__srv__StartMotion_Response__Sequence * array)
+linrob_axis__srv__StartMotion_Response__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Response__Sequence * array)
@@ -440 +472,3 @@
-linrob_axis__srv__StartMotion_Response__Sequence__are_equal(const linrob_axis__srv__StartMotion_Response__Sequence * lhs, const linrob_axis__srv__StartMotion_Response__Sequence * rhs)
+linrob_axis__srv__StartMotion_Response__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Response__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Response__Sequence * rhs)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__StartMotion_Request__are_equal(const linrob_axis__srv__StartMotion_Request * lhs, const linrob_axis__srv__StartMotion_Request * rhs);
+linrob_axis__srv__StartMotion_Request__are_equal(
+  const linrob_axis__srv__StartMotion_Request * lhs,
+  const linrob_axis__srv__StartMotion_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__init(linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size);
+linrob_axis__srv__StartMotion_Request__Sequence__init(
+  linrob_axis__srv__StartMotion_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__fini(linrob_axis__srv__StartMotion_Request__Sequence * array);
+linrob_axis__srv__StartMotion_Request__Sequence__fini(
+  linrob_axis__srv__StartMotion_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__StartMotion_Request__Sequence__destroy(linrob_axis__srv__StartMotion_Request__Sequence * array);
+linrob_axis__srv__StartMotion_Request__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__StartMotion_Request__Sequence__are_equal(const linrob_axis__srv__StartMotion_Request__Sequence * lhs, const linrob_axis__srv__StartMotion_Request__Sequence * rhs);
+linrob_axis__srv__StartMotion_Request__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Request__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__StartMotion_Response__are_equal(const linrob_axis__srv__StartMotion_Response * lhs, const linrob_axis__srv__StartMotion_Response * rhs);
+linrob_axis__srv__StartMotion_Response__are_equal(
+  const linrob_axis__srv__StartMotion_Response * lhs,
+  const linrob_axis__srv__StartMotion_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__init(linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size);
+linrob_axis__srv__StartMotion_Response__Sequence__init(
+  linrob_axis__srv__StartMotion_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__fini(linrob_axis__srv__StartMotion_Response__Sequence * array);
+linrob_axis__srv__StartMotion_Response__Sequence__fini(
+  linrob_axis__srv__StartMotion_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__StartMotion_Response__Sequence__destroy(linrob_axis__srv__StartMotion_Response__Sequence * array);
+linrob_axis__srv__StartMotion_Response__Sequence__destroy(
+  linrob_axis__srv__StartMotion_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__StartMotion_Response__Sequence__are_equal(const linrob_axis__srv__StartMotion_Response__Sequence * lhs, const linrob_axis__srv__StartMotion_Response__Sequence * rhs);
+linrob_axis__srv__StartMotion_Response__Sequence__are_equal(
+  const linrob_axis__srv__StartMotion_Response__Sequence * lhs,
+  const linrob_axis__srv__StartMotion_Response__Sequence * rhs);

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_c.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_c.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StartMotion)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_cpp.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_cpp.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StartMotion_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StartMotion_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StartMotion)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StartMotion)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_c.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_c.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_cpp.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_cpp.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StartMotion_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StartMotion_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StartMotion)();

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/msg/rosidl_generator_c__visibility_control.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reference_axis__struct.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reference_axis__type_support.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reset_axis__struct.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/reset_axis__type_support.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/start_motion__struct.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/start_motion__type_support.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/stop_axis__struct.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/detail/stop_axis__type_support.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/reference_axis.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/reset_axis.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/start_motion.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_c/linrob_axis/srv/stop_axis.h'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/msg/rosidl_generator_cpp__visibility_control.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reference_axis__traits.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reference_axis__type_support.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reset_axis__traits.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/reset_axis__type_support.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/start_motion__traits.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/start_motion__type_support.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/stop_axis__traits.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/detail/stop_axis__type_support.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/reference_axis.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/reset_axis.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/start_motion.hpp'

No code style divergence in file 'build/linrob_axis/rosidl_generator_cpp/linrob_axis/srv/stop_axis.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_generator_c__visibility_control.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/msg/rosidl_generator_cpp__visibility_control.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__struct.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__traits.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__struct.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__traits.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__struct.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__traits.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__struct.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__traits.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/reference_axis.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/reference_axis.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/reset_axis.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/reset_axis.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/start_motion.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/start_motion.hpp'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/stop_axis.h'

No code style divergence in file 'debian/ros-humble-linrob-axis/opt/ros/humble/include/linrob_axis/linrob_axis/srv/stop_axis.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_generator_c__visibility_control.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/msg/rosidl_generator_cpp__visibility_control.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__struct.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__traits.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reference_axis__type_support.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__struct.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__traits.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/reset_axis__type_support.hpp'

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__struct.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__struct.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit StartMotion_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -47 +48,3 @@
-  explicit StartMotion_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -178 +181,2 @@
-  explicit StartMotion_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -188 +192,3 @@
-  explicit StartMotion_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StartMotion_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -204 +210,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -215 +222,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.c':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.c
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_init_function(
+void
+linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_member_array[3] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_member_array
+[3] = {
@@ -88 +93,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members
+  =
+  {
@@ -96 +104 @@
-};
+  };
@@ -100 +108,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle
+  =
+  {
@@ -102 +113,2 @@
-  &linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members,
+  &
+  linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_members,
@@ -104 +116 @@
-};
+  };
@@ -108,3 +120,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)() {
-  if (!linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Request)() {
+  if (!
+    linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -113 +131,2 @@
-  return &linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__StartMotion_Request__rosidl_typesupport_introspection_c__StartMotion_Request_message_type_support_handle;
@@ -146 +165,2 @@
-void linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_init_function(
+void
+linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_init_function(
@@ -155 +175,3 @@
-void linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_fini_function(
+  void * message_memory)
@@ -160 +182,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_member_array
+[2] = {
@@ -197 +221,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members
+  =
+  {
@@ -205 +232 @@
-};
+  };
@@ -209 +236,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle
+  =
+  {
@@ -211 +241,2 @@
-  &linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members,
+  &
+  linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_members,
@@ -213 +244 @@
-};
+  };
@@ -217,3 +248,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)() {
-  if (!linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Response)() {
+  if (!
+    linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -222 +259,2 @@
-  return &linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__StartMotion_Response__rosidl_typesupport_introspection_c__StartMotion_Response_message_type_support_handle;
@@ -238 +276,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members
+  =
+  {
@@ -246,3 +287,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+  =
+  {
@@ -250 +294,2 @@
-  &linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members,
+  &
+  linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_members,
@@ -252 +297 @@
-};
+  };
@@ -256 +301,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Request)();
@@ -259 +306,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion_Response)();
@@ -263,3 +312,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion)() {
-  if (!linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StartMotion)() {
+  if (!
+    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+    .typesupport_identifier =
@@ -269 +324,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle
+    .data;
@@ -274 +331,4 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      StartMotion_Request)()->data;
@@ -279,5 +339,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StartMotion_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      StartMotion_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__start_motion__rosidl_typesupport_introspection_c__StartMotion_service_type_support_handle;
+}

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.cpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.cpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StartMotion_Request_message_member_array[3] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StartMotion_Request_message_member_array[3] = {
@@ -94 +95,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StartMotion_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  StartMotion_Request_message_members = {
@@ -125 +127,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Request_message_type_support_handle;
@@ -137,2 +140,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StartMotion_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Request_message_type_support_handle;
@@ -193 +199,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StartMotion_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StartMotion_Response_message_member_array[2] = {
@@ -230 +237,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StartMotion_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  StartMotion_Response_message_members = {
@@ -261 +269,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Response_message_type_support_handle;
@@ -273,2 +282,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StartMotion_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StartMotion_Response_message_type_support_handle;
@@ -340 +352,2 @@
-    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StartMotion_service_type_support_handle;
+    &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+    StartMotion_service_type_support_handle;
@@ -381 +394,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StartMotion)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StartMotion)() {

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__builder.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__builder.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__builder.hpp.uncrustify
@@ -52 +52,2 @@
-  ::linrob_axis::srv::StopAxis_Response message(::linrob_axis::srv::StopAxis_Response::_message_type arg)
+  ::linrob_axis::srv::StopAxis_Response message(
+    ::linrob_axis::srv::StopAxis_Response::_message_type arg)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.c':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.c
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.c.uncrustify
@@ -33 +33,3 @@
-linrob_axis__srv__StopAxis_Request__are_equal(const linrob_axis__srv__StopAxis_Request * lhs, const linrob_axis__srv__StopAxis_Request * rhs)
+linrob_axis__srv__StopAxis_Request__are_equal(
+  const linrob_axis__srv__StopAxis_Request * lhs,
+  const linrob_axis__srv__StopAxis_Request * rhs)
@@ -62 +64,4 @@
-  linrob_axis__srv__StopAxis_Request * msg = (linrob_axis__srv__StopAxis_Request *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Request), allocator.state);
+  linrob_axis__srv__StopAxis_Request * msg =
+    (linrob_axis__srv__StopAxis_Request *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Request), allocator.state);
@@ -87 +92,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__init(linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size)
+linrob_axis__srv__StopAxis_Request__Sequence__init(
+  linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size)
@@ -96 +102,5 @@
-    data = (linrob_axis__srv__StopAxis_Request *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StopAxis_Request), allocator.state);
+    data =
+      (linrob_axis__srv__StopAxis_Request *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StopAxis_Request),
+      allocator.state);
@@ -124 +134,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__fini(linrob_axis__srv__StopAxis_Request__Sequence * array)
+linrob_axis__srv__StopAxis_Request__Sequence__fini(
+  linrob_axis__srv__StopAxis_Request__Sequence * array)
@@ -153 +164,4 @@
-  linrob_axis__srv__StopAxis_Request__Sequence * array = (linrob_axis__srv__StopAxis_Request__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Request__Sequence), allocator.state);
+  linrob_axis__srv__StopAxis_Request__Sequence * array =
+    (linrob_axis__srv__StopAxis_Request__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Request__Sequence), allocator.state);
@@ -166 +180,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__destroy(linrob_axis__srv__StopAxis_Request__Sequence * array)
+linrob_axis__srv__StopAxis_Request__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Request__Sequence * array)
@@ -176 +191,3 @@
-linrob_axis__srv__StopAxis_Request__Sequence__are_equal(const linrob_axis__srv__StopAxis_Request__Sequence * lhs, const linrob_axis__srv__StopAxis_Request__Sequence * rhs)
+linrob_axis__srv__StopAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Request__Sequence * rhs)
@@ -269 +286,3 @@
-linrob_axis__srv__StopAxis_Response__are_equal(const linrob_axis__srv__StopAxis_Response * lhs, const linrob_axis__srv__StopAxis_Response * rhs)
+linrob_axis__srv__StopAxis_Response__are_equal(
+  const linrob_axis__srv__StopAxis_Response * lhs,
+  const linrob_axis__srv__StopAxis_Response * rhs)
@@ -310 +329,4 @@
-  linrob_axis__srv__StopAxis_Response * msg = (linrob_axis__srv__StopAxis_Response *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Response), allocator.state);
+  linrob_axis__srv__StopAxis_Response * msg =
+    (linrob_axis__srv__StopAxis_Response *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Response), allocator.state);
@@ -335 +357,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__init(linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size)
+linrob_axis__srv__StopAxis_Response__Sequence__init(
+  linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size)
@@ -344 +367,5 @@
-    data = (linrob_axis__srv__StopAxis_Response *)allocator.zero_allocate(size, sizeof(linrob_axis__srv__StopAxis_Response), allocator.state);
+    data =
+      (linrob_axis__srv__StopAxis_Response *)allocator.zero_allocate(
+      size,
+      sizeof(linrob_axis__srv__StopAxis_Response),
+      allocator.state);
@@ -372 +399,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__fini(linrob_axis__srv__StopAxis_Response__Sequence * array)
+linrob_axis__srv__StopAxis_Response__Sequence__fini(
+  linrob_axis__srv__StopAxis_Response__Sequence * array)
@@ -401 +429,4 @@
-  linrob_axis__srv__StopAxis_Response__Sequence * array = (linrob_axis__srv__StopAxis_Response__Sequence *)allocator.allocate(sizeof(linrob_axis__srv__StopAxis_Response__Sequence), allocator.state);
+  linrob_axis__srv__StopAxis_Response__Sequence * array =
+    (linrob_axis__srv__StopAxis_Response__Sequence *)allocator.allocate(
+    sizeof(
+      linrob_axis__srv__StopAxis_Response__Sequence), allocator.state);
@@ -414 +445,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__destroy(linrob_axis__srv__StopAxis_Response__Sequence * array)
+linrob_axis__srv__StopAxis_Response__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Response__Sequence * array)
@@ -424 +456,3 @@
-linrob_axis__srv__StopAxis_Response__Sequence__are_equal(const linrob_axis__srv__StopAxis_Response__Sequence * lhs, const linrob_axis__srv__StopAxis_Response__Sequence * rhs)
+linrob_axis__srv__StopAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Response__Sequence * rhs)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__functions.h.uncrustify
@@ -77 +77,3 @@
-linrob_axis__srv__StopAxis_Request__are_equal(const linrob_axis__srv__StopAxis_Request * lhs, const linrob_axis__srv__StopAxis_Request * rhs);
+linrob_axis__srv__StopAxis_Request__are_equal(
+  const linrob_axis__srv__StopAxis_Request * lhs,
+  const linrob_axis__srv__StopAxis_Request * rhs);
@@ -109 +111,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__init(linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size);
+linrob_axis__srv__StopAxis_Request__Sequence__init(
+  linrob_axis__srv__StopAxis_Request__Sequence * array, size_t size);
@@ -121 +124,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__fini(linrob_axis__srv__StopAxis_Request__Sequence * array);
+linrob_axis__srv__StopAxis_Request__Sequence__fini(
+  linrob_axis__srv__StopAxis_Request__Sequence * array);
@@ -144 +148,2 @@
-linrob_axis__srv__StopAxis_Request__Sequence__destroy(linrob_axis__srv__StopAxis_Request__Sequence * array);
+linrob_axis__srv__StopAxis_Request__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Request__Sequence * array);
@@ -154 +159,3 @@
-linrob_axis__srv__StopAxis_Request__Sequence__are_equal(const linrob_axis__srv__StopAxis_Request__Sequence * lhs, const linrob_axis__srv__StopAxis_Request__Sequence * rhs);
+linrob_axis__srv__StopAxis_Request__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Request__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Request__Sequence * rhs);
@@ -229 +236,3 @@
-linrob_axis__srv__StopAxis_Response__are_equal(const linrob_axis__srv__StopAxis_Response * lhs, const linrob_axis__srv__StopAxis_Response * rhs);
+linrob_axis__srv__StopAxis_Response__are_equal(
+  const linrob_axis__srv__StopAxis_Response * lhs,
+  const linrob_axis__srv__StopAxis_Response * rhs);
@@ -261 +270,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__init(linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size);
+linrob_axis__srv__StopAxis_Response__Sequence__init(
+  linrob_axis__srv__StopAxis_Response__Sequence * array, size_t size);
@@ -273 +283,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__fini(linrob_axis__srv__StopAxis_Response__Sequence * array);
+linrob_axis__srv__StopAxis_Response__Sequence__fini(
+  linrob_axis__srv__StopAxis_Response__Sequence * array);
@@ -296 +307,2 @@
-linrob_axis__srv__StopAxis_Response__Sequence__destroy(linrob_axis__srv__StopAxis_Response__Sequence * array);
+linrob_axis__srv__StopAxis_Response__Sequence__destroy(
+  linrob_axis__srv__StopAxis_Response__Sequence * array);
@@ -306 +318,3 @@
-linrob_axis__srv__StopAxis_Response__Sequence__are_equal(const linrob_axis__srv__StopAxis_Response__Sequence * lhs, const linrob_axis__srv__StopAxis_Response__Sequence * rhs);
+linrob_axis__srv__StopAxis_Response__Sequence__are_equal(
+  const linrob_axis__srv__StopAxis_Response__Sequence * lhs,
+  const linrob_axis__srv__StopAxis_Response__Sequence * rhs);

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_c.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_c.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_c.h.uncrustify
@@ -31 +31,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis_Request)();
@@ -64 +66,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis_Response)();
@@ -83 +87,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_fastrtps_c, linrob_axis, srv,
+  StopAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_cpp.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_cpp.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_fastrtps_cpp.hpp.uncrustify
@@ -74 +74,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StopAxis_Request)();
@@ -151 +152,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StopAxis_Response)();
@@ -171 +173,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis, srv, StopAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_fastrtps_cpp, linrob_axis,
+  srv, StopAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_c.h':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_c.h
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_c.h.uncrustify
@@ -20 +20,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Request)();
@@ -31 +33,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Response)();
@@ -41 +45,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_cpp.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_cpp.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__rosidl_typesupport_introspection_cpp.hpp.uncrustify
@@ -21 +21,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Request)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StopAxis_Request)();
@@ -42 +43,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Response)();
+  ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StopAxis_Response)();
@@ -61 +63,2 @@
-  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis)();
+  ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp,
+  linrob_axis, srv, StopAxis)();

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__struct.hpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__struct.hpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__struct.hpp.uncrustify
@@ -36 +36,2 @@
-  explicit StopAxis_Request_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Request_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -45 +46,3 @@
-  explicit StopAxis_Request_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Request_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -143 +146,2 @@
-  explicit StopAxis_Response_(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Response_(
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -153 +157,3 @@
-  explicit StopAxis_Response_(const ContainerAllocator & _alloc, rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
+  explicit StopAxis_Response_(
+    const ContainerAllocator & _alloc,
+    rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ALL)
@@ -169 +175,2 @@
-    std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
+    std::basic_string<char, std::char_traits<char>,
+      typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>>;
@@ -180 +187,2 @@
-    const std::basic_string<char, std::char_traits<char>, typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)
+    const std::basic_string<char, std::char_traits<char>,
+    typename std::allocator_traits<ContainerAllocator>::template rebind_alloc<char>> & _arg)

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.c':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.c
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.c.uncrustify
@@ -20 +20,2 @@
-void linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_init_function(
+void
+linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_init_function(
@@ -29 +30,3 @@
-void linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_fini_function(void * message_memory)
+void
+linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_fini_function(
+  void * message_memory)
@@ -34 +37,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_member_array[1] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_member_array
+[1] = {
@@ -54 +59,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members
+  =
+  {
@@ -62 +70 @@
-};
+  };
@@ -66 +74,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle
+  =
+  {
@@ -68 +79,2 @@
-  &linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members,
+  &
+  linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_members,
@@ -70 +82 @@
-};
+  };
@@ -74,3 +86,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)() {
-  if (!linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Request)() {
+  if (!
+    linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle
+    .typesupport_identifier =
@@ -79 +97,2 @@
-  return &linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle;
+  return &
+         linrob_axis__srv__StopAxis_Request__rosidl_typesupport_introspection_c__StopAxis_Request_message_type_support_handle;
@@ -112 +131,2 @@
-void linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_init_function(
+void
+linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_init_function(
@@ -121 +141,3 @@
-void linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_fini_function(void * message_memory)
+void
+linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_fini_function(
+  void * message_memory)
@@ -126 +148,3 @@
-static rosidl_typesupport_introspection_c__MessageMember linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_member_array[2] = {
+static rosidl_typesupport_introspection_c__MessageMember
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_member_array
+[2] = {
@@ -163 +187,4 @@
-static const rosidl_typesupport_introspection_c__MessageMembers linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members = {
+static const rosidl_typesupport_introspection_c__MessageMembers
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members
+  =
+  {
@@ -171 +198 @@
-};
+  };
@@ -175 +202,4 @@
-static rosidl_message_type_support_t linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle = {
+static rosidl_message_type_support_t
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle
+  =
+  {
@@ -177 +207,2 @@
-  &linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members,
+  &
+  linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_members,
@@ -179 +210 @@
-};
+  };
@@ -183,3 +214,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)() {
-  if (!linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Response)() {
+  if (!
+    linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle
+    .typesupport_identifier =
@@ -188 +225,2 @@
-  return &linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle;
+  return &
+         linrob_axis__srv__StopAxis_Response__rosidl_typesupport_introspection_c__StopAxis_Response_message_type_support_handle;
@@ -204 +242,4 @@
-static rosidl_typesupport_introspection_c__ServiceMembers linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_members = {
+static rosidl_typesupport_introspection_c__ServiceMembers
+  linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_members
+  =
+  {
@@ -212,3 +253,6 @@
-};
-
-static rosidl_service_type_support_t linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle = {
+  };
+
+static rosidl_service_type_support_t
+  linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+  =
+  {
@@ -218 +262 @@
-};
+  };
@@ -222 +266,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Request)();
@@ -225 +271,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)();
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis_Response)();
@@ -229,3 +277,9 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis)() {
-  if (!linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle.typesupport_identifier) {
-    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle.typesupport_identifier =
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_c, linrob_axis,
+  srv, StopAxis)() {
+  if (!
+    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+    .typesupport_identifier)
+  {
+    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+    .typesupport_identifier =
@@ -235 +289,3 @@
-    (rosidl_typesupport_introspection_c__ServiceMembers *)linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle.data;
+    (rosidl_typesupport_introspection_c__ServiceMembers *)
+    linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle
+    .data;
@@ -240 +296,3 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Request)()->data;
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv, StopAxis_Request)()->data;
@@ -245,5 +303,9 @@
-      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_c, linrob_axis, srv, StopAxis_Response)()->data;
-  }
-
-  return &linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle;
-}
+      ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+      rosidl_typesupport_introspection_c,
+      linrob_axis, srv,
+      StopAxis_Response)()->data;
+  }
+
+  return &
+         linrob_axis__srv__detail__stop_axis__rosidl_typesupport_introspection_c__StopAxis_service_type_support_handle;
+}

Code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.cpp':

--- install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.cpp
+++ install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.cpp.uncrustify
@@ -40 +40,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StopAxis_Request_message_member_array[1] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StopAxis_Request_message_member_array[1] = {
@@ -60 +61,3 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StopAxis_Request_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers StopAxis_Request_message_members
+  =
+  {
@@ -68 +71 @@
-};
+  };
@@ -91 +94,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Request_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Request_message_type_support_handle;
@@ -103,2 +107,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Request)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Request_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StopAxis_Request)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Request_message_type_support_handle;
@@ -159 +166,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMember StopAxis_Response_message_member_array[2] = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMember
+  StopAxis_Response_message_member_array[2] = {
@@ -196 +204,2 @@
-static const ::rosidl_typesupport_introspection_cpp::MessageMembers StopAxis_Response_message_members = {
+static const ::rosidl_typesupport_introspection_cpp::MessageMembers
+  StopAxis_Response_message_members = {
@@ -227 +236,2 @@
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Response_message_type_support_handle;
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Response_message_type_support_handle;
@@ -239,2 +249,5 @@
-ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis_Response)() {
-  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::StopAxis_Response_message_type_support_handle;
+ROSIDL_TYPESUPPORT_INTERFACE__MESSAGE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StopAxis_Response)() {
+  return &::linrob_axis::srv::rosidl_typesupport_introspection_cpp::
+         StopAxis_Response_message_type_support_handle;
@@ -347 +360,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_introspection_cpp, linrob_axis, srv, StopAxis)() {
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_introspection_cpp, linrob_axis,
+  srv, StopAxis)() {

Code style divergence in file 'install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c':

--- install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c
+++ install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c':

--- install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c
+++ install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_fastrtps_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c':

--- install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c
+++ install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/_linrob_axis_s.ep.rosidl_typesupport_introspection_c.c.uncrustify
@@ -38 +38,2 @@
-  linrob_axis__srv__ResetAxis_Request * ros_message = (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Request * ros_message =
+    (linrob_axis__srv__ResetAxis_Request *)raw_ros_message;
@@ -180 +181,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
@@ -298 +300,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ResetAxis)();
@@ -306 +310,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ResetAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ResetAxis)(),
@@ -348 +354,2 @@
-  linrob_axis__srv__ReferenceAxis_Request * ros_message = (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Request * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Request *)raw_ros_message;
@@ -353 +360,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -490 +499,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
@@ -495 +505,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -608 +620,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  ReferenceAxis)();
@@ -616 +630,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, ReferenceAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, ReferenceAxis)(),
@@ -658 +674,2 @@
-  linrob_axis__srv__StopAxis_Request * ros_message = (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Request * ros_message =
+    (linrob_axis__srv__StopAxis_Request *)raw_ros_message;
@@ -800 +817,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
@@ -918 +936,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StopAxis)();
@@ -926 +946,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StopAxis)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StopAxis)(),
@@ -968 +990,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -973 +996,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1110 +1135,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
@@ -1115 +1141,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * ros_message);
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * ros_message);
@@ -1228 +1256,3 @@
-ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)();
+ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+  rosidl_typesupport_c, linrob_axis, srv,
+  StartMotion)();
@@ -1236 +1266,3 @@
-    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_c, linrob_axis, srv, StartMotion)(),
+    (void *)ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(
+      rosidl_typesupport_c, linrob_axis,
+      srv, StartMotion)(),

Code style divergence in file 'install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_reference_axis_s.c':

--- install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_reference_axis_s.c
+++ install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_reference_axis_s.c.uncrustify
@@ -21 +21,3 @@
-bool linrob_axis__srv__reference_axis__request__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__reference_axis__request__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -50 +52,4 @@
-    assert(strncmp("linrob_axis.srv._reference_axis.ReferenceAxis_Request", full_classname_dest, 53) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._reference_axis.ReferenceAxis_Request", full_classname_dest,
+        53) == 0);
@@ -100 +105,3 @@
-bool linrob_axis__srv__reference_axis__response__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__reference_axis__response__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -129 +136,4 @@
-    assert(strncmp("linrob_axis.srv._reference_axis.ReferenceAxis_Response", full_classname_dest, 54) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._reference_axis.ReferenceAxis_Response", full_classname_dest,
+        54) == 0);
@@ -177 +187,2 @@
-  linrob_axis__srv__ReferenceAxis_Response * ros_message = (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ReferenceAxis_Response * ros_message =
+    (linrob_axis__srv__ReferenceAxis_Response *)raw_ros_message;

Code style divergence in file 'install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_reset_axis_s.c':

--- install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_reset_axis_s.c
+++ install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_reset_axis_s.c.uncrustify
@@ -177 +177,2 @@
-  linrob_axis__srv__ResetAxis_Response * ros_message = (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;
+  linrob_axis__srv__ResetAxis_Response * ros_message =
+    (linrob_axis__srv__ResetAxis_Response *)raw_ros_message;

Code style divergence in file 'install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_start_motion_s.c':

--- install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_start_motion_s.c
+++ install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_start_motion_s.c.uncrustify
@@ -21 +21,3 @@
-bool linrob_axis__srv__start_motion__request__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__start_motion__request__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -50 +52,4 @@
-    assert(strncmp("linrob_axis.srv._start_motion.StartMotion_Request", full_classname_dest, 49) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._start_motion.StartMotion_Request", full_classname_dest,
+        49) == 0);
@@ -101 +106,2 @@
-  linrob_axis__srv__StartMotion_Request * ros_message = (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Request * ros_message =
+    (linrob_axis__srv__StartMotion_Request *)raw_ros_message;
@@ -159 +165,3 @@
-bool linrob_axis__srv__start_motion__response__convert_from_py(PyObject * _pymsg, void * _ros_message)
+bool linrob_axis__srv__start_motion__response__convert_from_py(
+  PyObject * _pymsg,
+  void * _ros_message)
@@ -188 +196,4 @@
-    assert(strncmp("linrob_axis.srv._start_motion.StartMotion_Response", full_classname_dest, 50) == 0);
+    assert(
+      strncmp(
+        "linrob_axis.srv._start_motion.StartMotion_Response", full_classname_dest,
+        50) == 0);
@@ -236 +247,2 @@
-  linrob_axis__srv__StartMotion_Response * ros_message = (linrob_axis__srv__StartMotion_Response *)raw_ros_message;
+  linrob_axis__srv__StartMotion_Response * ros_message =
+    (linrob_axis__srv__StartMotion_Response *)raw_ros_message;

Code style divergence in file 'install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_stop_axis_s.c':

--- install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_stop_axis_s.c
+++ install/linrob_axis/local/lib/python3.10/dist-packages/linrob_axis/srv/_stop_axis_s.c.uncrustify
@@ -177 +177,2 @@
-  linrob_axis__srv__StopAxis_Response * ros_message = (linrob_axis__srv__StopAxis_Response *)raw_ros_message;
+  linrob_axis__srv__StopAxis_Response * ros_message =
+    (linrob_axis__srv__StopAxis_Response *)raw_ros_message;

Code style divergence in file 'src/Resource.cpp':

--- src/Resource.cpp
+++ src/Resource.cpp.uncrustify
@@ -27 +27 @@
-hardware_interface::CallbackReturn Resource::on_init(const hardware_interface::HardwareInfo& info)
+hardware_interface::CallbackReturn Resource::on_init(const hardware_interface::HardwareInfo & info)
@@ -31 +31,2 @@
-  if (hardware_interface::SystemInterface::on_init(info) != hardware_interface::CallbackReturn::SUCCESS)
+  if (hardware_interface::SystemInterface::on_init(info) !=
+    hardware_interface::CallbackReturn::SUCCESS)
@@ -37 +38 @@
-  const auto& params = info.hardware_parameters;
+  const auto & params = info.hardware_parameters;
@@ -66 +67,2 @@
-  mPositionSettings.initialIndex = static_cast<uint16_t>(std::stoi(params.at("initial_position_index")));
+  mPositionSettings.initialIndex =
+    static_cast<uint16_t>(std::stoi(params.at("initial_position_index")));
@@ -68 +70,2 @@
-  mPositionSettings.maxPositionIndices = static_cast<uint16_t>(std::stoi(params.at("max_position_indices")));
+  mPositionSettings.maxPositionIndices =
+    static_cast<uint16_t>(std::stoi(params.at("max_position_indices")));
@@ -73 +76,2 @@
-  mExpectedDelayBetweenCommandsMs = static_cast<uint32_t>(1000.F / std::stof(params.at("update_frequency_hz")));
+  mExpectedDelayBetweenCommandsMs =
+    static_cast<uint32_t>(1000.F / std::stof(params.at("update_frequency_hz")));
@@ -94 +98 @@
-hardware_interface::CallbackReturn Resource::on_configure(const rclcpp_lifecycle::State&)
+hardware_interface::CallbackReturn Resource::on_configure(const rclcpp_lifecycle::State &)
@@ -98,2 +102 @@
-  if (connectionResult != hardware_interface::CallbackReturn::SUCCESS)
-  {
+  if (connectionResult != hardware_interface::CallbackReturn::SUCCESS) {
@@ -106 +109 @@
-hardware_interface::CallbackReturn Resource::on_activate(const rclcpp_lifecycle::State&)
+hardware_interface::CallbackReturn Resource::on_activate(const rclcpp_lifecycle::State &)
@@ -114 +117,3 @@
-    RCLCPP_INFO(rclcpp::get_logger(LINROB), "Axis is in STANDSTILL state - proceeding with full activation");
+    RCLCPP_INFO(
+      rclcpp::get_logger(
+        LINROB), "Axis is in STANDSTILL state - proceeding with full activation");
@@ -130,2 +135 @@
-    if (!resetResult)
-    {
+    if (!resetResult) {
@@ -140,2 +144,3 @@
-  RCLCPP_INFO(rclcpp::get_logger(LINROB), "Resource activation FINISHED. Axis ready for operation: %s",
-             mAxisReadyForOperation ? "YES" : "NO");
+  RCLCPP_INFO(
+    rclcpp::get_logger(LINROB), "Resource activation FINISHED. Axis ready for operation: %s",
+    mAxisReadyForOperation ? "YES" : "NO");
@@ -145 +150 @@
-hardware_interface::CallbackReturn Resource::on_deactivate(const rclcpp_lifecycle::State&)
+hardware_interface::CallbackReturn Resource::on_deactivate(const rclcpp_lifecycle::State &)
@@ -150,2 +155 @@
-  if (axisStateResult != hardware_interface::CallbackReturn::SUCCESS)
-  {
+  if (axisStateResult != hardware_interface::CallbackReturn::SUCCESS) {
@@ -153,3 +157,4 @@
-    if (axisStateResult != hardware_interface::CallbackReturn::SUCCESS)
-    {
-      RCLCPP_ERROR(rclcpp::get_logger(LINROB), "Axis is not in STANDSTILL or STOPPED state during deactivation");
+    if (axisStateResult != hardware_interface::CallbackReturn::SUCCESS) {
+      RCLCPP_ERROR(
+        rclcpp::get_logger(
+          LINROB), "Axis is not in STANDSTILL or STOPPED state during deactivation");
@@ -161,2 +166 @@
-  if (!setSystemModeResult)
-  {
+  if (!setSystemModeResult) {
@@ -166 +170,3 @@
-  RCLCPP_INFO(rclcpp::get_logger(LINROB), "Waiting %ld seconds for PLC to change operation mode...", kSetModeSleep.count());
+  RCLCPP_INFO(
+    rclcpp::get_logger(
+      LINROB), "Waiting %ld seconds for PLC to change operation mode...", kSetModeSleep.count());
@@ -170,2 +176 @@
-  if (systemModeResult != hardware_interface::CallbackReturn::SUCCESS)
-  {
+  if (systemModeResult != hardware_interface::CallbackReturn::SUCCESS) {
@@ -178,2 +183 @@
-  if (!writeResult)
-  {
+  if (!writeResult) {
@@ -190,2 +194 @@
-  if (mClient)
-  {
+  if (mClient) {
@@ -197 +200 @@
-hardware_interface::return_type Resource::write(const rclcpp::Time& time, const rclcpp::Duration&)
+hardware_interface::return_type Resource::write(const rclcpp::Time & time, const rclcpp::Duration &)
@@ -203,2 +206 @@
-  if (!mAxisReadyForOperation)
-  {
+  if (!mAxisReadyForOperation) {
@@ -206,2 +208 @@
-    if (!mAxisReadyForOperation)
-    {
+    if (!mAxisReadyForOperation) {
@@ -214,2 +215,36 @@
-    if (mDuplicateAppendsSinceLastNew >= mDuplicateAppendLimit) {
-      RCLCPP_DEBUG(rclcpp::get_logger(LINROB), "Duplicate append limit (%u) reached, not appending further targets", mDuplicateAppendLimit);
+      if (mDuplicateAppendsSinceLastNew >= mDuplicateAppendLimit) {
+        RCLCPP_DEBUG(
+          rclcpp::get_logger(
+            LINROB), "Duplicate append limit (%u) reached, not appending further targets",
+          mDuplicateAppendLimit);
+        return true;
+      }
+      if (mPositionSettings.nextPositionIndex == kMaxPositionsExt) {
+        mPositionSettings.nextPositionIndex = 1;
+      } else {
+        ++mPositionSettings.nextPositionIndex;
+      }
+
+      size_t pos = mPositionSettings.nextPositionIndex - 1;
+      if (pos >= kMaxPositionsExt) {pos = 0;}
+
+      mAxisTargetPositionsExt[pos] = target * 1000.0; // Convert to mm
+      mAxisTargetPositionTimestampExt[pos] = 20.0;
+
+      if (!writeToDatalayerNode("new_position", mAxisTargetPositionsExt)) {
+        return false;
+      }
+      if (!writeToDatalayerNode("new_position_timestamp", mAxisTargetPositionTimestampExt)) {
+        return false;
+      }
+      if (!writeToDatalayerNode("next_pos_index", mPositionSettings.nextPositionIndex)) {
+        return false;
+      }
+      mLastBufferFillTime = time;
+      if (mDuplicateAppendsSinceLastNew < UINT32_MAX) {
+        ++mDuplicateAppendsSinceLastNew;
+      }
+      RCLCPP_DEBUG(
+        rclcpp::get_logger(
+          LINROB), "Buffered duplicate target %.8f mm at index %u", mLastPositionCommand,
+        mPositionSettings.nextPositionIndex);
@@ -217,25 +252 @@
-    }
-    if (mPositionSettings.nextPositionIndex == kMaxPositionsExt)
-      mPositionSettings.nextPositionIndex = 1;
-    else
-      ++mPositionSettings.nextPositionIndex;
-
-    size_t pos = mPositionSettings.nextPositionIndex - 1;
-    if (pos >= kMaxPositionsExt) pos = 0;
-
-    mAxisTargetPositionsExt[pos] = target * 1000.0; // Convert to mm
-    mAxisTargetPositionTimestampExt[pos] = 20.0;
-
-    if (!writeToDatalayerNode("new_position", mAxisTargetPositionsExt))
-      return false;
-    if (!writeToDatalayerNode("new_position_timestamp", mAxisTargetPositionTimestampExt))
-      return false;
-    if (!writeToDatalayerNode("next_pos_index", mPositionSettings.nextPositionIndex))
-      return false;
-    mLastBufferFillTime = time;
-    if (mDuplicateAppendsSinceLastNew < UINT32_MAX) {
-      ++mDuplicateAppendsSinceLastNew;
-    }
-    RCLCPP_DEBUG(rclcpp::get_logger(LINROB), "Buffered duplicate target %.8f mm at index %u", mLastPositionCommand, mPositionSettings.nextPositionIndex);
-    return true;
-  };
+    };
@@ -244,2 +255 @@
-  if (!receivedNewTarget)
-  {
+  if (!receivedNewTarget) {
@@ -247,2 +257 @@
-    if (mPositionSettings.newPositionsReceivedCount > 0 && !mMovementExecutionStopped)
-    {
+    if (mPositionSettings.newPositionsReceivedCount > 0 && !mMovementExecutionStopped) {
@@ -250,2 +259,4 @@
-      auto expectedDurationBetweenCommands = rclcpp::Duration(std::chrono::milliseconds(mExpectedDelayBetweenCommandsMs));
-      bool timeToRefill = (mLastBufferFillTime.nanoseconds() == 0) || (time - mLastBufferFillTime >= expectedDurationBetweenCommands);
+      auto expectedDurationBetweenCommands =
+        rclcpp::Duration(std::chrono::milliseconds(mExpectedDelayBetweenCommandsMs));
+      bool timeToRefill = (mLastBufferFillTime.nanoseconds() == 0) ||
+        (time - mLastBufferFillTime >= expectedDurationBetweenCommands);
@@ -254,3 +265,2 @@
-      if (timeToRefill)
-      {
-        if (!updateDataFromNode("status", comm::datalayer::VariantType::ARRAY_OF_INT32))
+      if (timeToRefill) {
+        if (!updateDataFromNode("status", comm::datalayer::VariantType::ARRAY_OF_INT32)) {
@@ -258 +268,2 @@
-        auto& statusData = mConnection.datalayerNodeMap.at("status");
+        }
+        auto & statusData = mConnection.datalayerNodeMap.at("status");
@@ -263,5 +274,7 @@
-        RCLCPP_DEBUG(rclcpp::get_logger(LINROB),
-                     "(Buffering) Target %.8f mm tol %.8f mm current %.8f error %.8f state %u", mLastPositionCommand, mPositionToleranceMm, currentPosition, positionError, static_cast<unsigned int>(axisStatus));
-
-        if (positionError <= mPositionToleranceMm)
-        {
+        RCLCPP_DEBUG(
+          rclcpp::get_logger(
+            LINROB),
+          "(Buffering) Target %.8f mm tol %.8f mm current %.8f error %.8f state %u", mLastPositionCommand, mPositionToleranceMm, currentPosition, positionError,
+          static_cast<unsigned int>(axisStatus));
+
+        if (positionError <= mPositionToleranceMm) {
@@ -269,10 +282,10 @@
-            mPositionSettings.newPositionsReceivedCount = 0U;
-            if (!writeToDatalayerNode("execute_movements", false))
-              return hardware_interface::return_type::ERROR;
-            mMovementExecutionStopped = true;
-            RCLCPP_INFO(rclcpp::get_logger(LINROB),
-                        "Movement execution stopped. Axis reached target %.8f mm (tolerance %.8f mm)",
-                        mLastPositionCommand, mPositionToleranceMm);
-        }
-        else
-        {
+          mPositionSettings.newPositionsReceivedCount = 0U;
+          if (!writeToDatalayerNode("execute_movements", false)) {
+            return hardware_interface::return_type::ERROR;
+          }
+          mMovementExecutionStopped = true;
+          RCLCPP_INFO(
+            rclcpp::get_logger(LINROB),
+            "Movement execution stopped. Axis reached target %.8f mm (tolerance %.8f mm)",
+            mLastPositionCommand, mPositionToleranceMm);
+        } else {
@@ -280 +293 @@
-          if (!appendDuplicateTarget(mLastPositionCommand))
+          if (!appendDuplicateTarget(mLastPositionCommand)) {
@@ -281,0 +295 @@
+          }
@@ -312 +326 @@
-  if (mPositionSettings.nextPositionIndex == kMaxPositionsExt)
+  if (mPositionSettings.nextPositionIndex == kMaxPositionsExt) {
@@ -314 +328 @@
-  else
+  } else {
@@ -315,0 +330 @@
+  }
@@ -319 +334 @@
-  if (pos >= kMaxPositionsExt) pos = 0;
+  if (pos >= kMaxPositionsExt) {pos = 0;}
@@ -327 +342 @@
-  if (!writeToDatalayerNode("new_position", mAxisTargetPositionsExt))
+  if (!writeToDatalayerNode("new_position", mAxisTargetPositionsExt)) {
@@ -329 +344,2 @@
-  if (!writeToDatalayerNode("new_position_timestamp", mAxisTargetPositionTimestampExt))
+  }
+  if (!writeToDatalayerNode("new_position_timestamp", mAxisTargetPositionTimestampExt)) {
@@ -331 +347,2 @@
-  if (!writeToDatalayerNode("next_pos_index", mPositionSettings.nextPositionIndex))
+  }
+  if (!writeToDatalayerNode("next_pos_index", mPositionSettings.nextPositionIndex)) {
@@ -332,0 +350 @@
+  }
@@ -336,3 +354,2 @@
-  if (mPositionSettings.newPositionsReceivedCount >= mPositionSettings.executeMovementsOnIndex)
-  {
-    if (!writeToDatalayerNode("execute_movements", true))
+  if (mPositionSettings.newPositionsReceivedCount >= mPositionSettings.executeMovementsOnIndex) {
+    if (!writeToDatalayerNode("execute_movements", true)) {
@@ -339,0 +357 @@
+    }
@@ -347,4 +365,3 @@
-hardware_interface::return_type Resource::read(const rclcpp::Time&, const rclcpp::Duration&)
-{
-  if (!mAxisReadyForOperation)
-  {
+hardware_interface::return_type Resource::read(const rclcpp::Time &, const rclcpp::Duration &)
+{
+  if (!mAxisReadyForOperation) {
@@ -352,2 +369 @@
-    if (!mAxisReadyForOperation)
-    {
+    if (!mAxisReadyForOperation) {
@@ -370,2 +386 @@
-  if (!updateResult)
-  {
+  if (!updateResult) {
@@ -377 +392 @@
-    auto &statusData = mConnection.datalayerNodeMap.at("status");
+    auto & statusData = mConnection.datalayerNodeMap.at("status");
@@ -379,4 +394,2 @@
-    if (axisStatus == AxisState::ERRORSTOP)
-    {
-      if (!mMovementExecutionStopped)
-      {
+    if (axisStatus == AxisState::ERRORSTOP) {
+      if (!mMovementExecutionStopped) {
@@ -384,2 +397 @@
-        if (!writeToDatalayerNode("execute_movements", false))
-        {
+        if (!writeToDatalayerNode("execute_movements", false)) {
@@ -416,2 +428,6 @@
-  command_interfaces.emplace_back("joint_1", "virtual_target_position", &mVirtualTargetPositionCommand);
-  command_interfaces.emplace_back("joint_1", "virtual_target_velocity", &mVirtualTargetVelocityCommand);
+  command_interfaces.emplace_back(
+    "joint_1", "virtual_target_position",
+    &mVirtualTargetPositionCommand);
+  command_interfaces.emplace_back(
+    "joint_1", "virtual_target_velocity",
+    &mVirtualTargetVelocityCommand);
@@ -421,16 +437,22 @@
-hardware_interface::CallbackReturn Resource::waitForSystemMode(const std::string& expectedMode, std::chrono::milliseconds timeout)
-{
-    auto start = std::chrono::steady_clock::now();
-    const std::chrono::milliseconds pollInterval(kStatePollInterval);
-
-    while (std::chrono::steady_clock::now() - start < timeout) {
-        auto result = checkSystemMode(expectedMode);
-        if (result == hardware_interface::CallbackReturn::SUCCESS) {
-            RCLCPP_INFO(rclcpp::get_logger(LINROB), "System reached expected mode: %s", expectedMode.c_str());
-            return result;
-        }
-        RCLCPP_INFO(rclcpp::get_logger(LINROB), "Waiting for system mode '%s'", expectedMode.c_str());
-        std::this_thread::sleep_for(pollInterval);
-    }
-    RCLCPP_ERROR(rclcpp::get_logger(LINROB), "Timeout waiting for system mode '%s'", expectedMode.c_str());
-    return hardware_interface::CallbackReturn::FAILURE;
+hardware_interface::CallbackReturn Resource::waitForSystemMode(
+  const std::string & expectedMode,
+  std::chrono::milliseconds timeout)
+{
+  auto start = std::chrono::steady_clock::now();
+  const std::chrono::milliseconds pollInterval(kStatePollInterval);
+
+  while (std::chrono::steady_clock::now() - start < timeout) {
+    auto result = checkSystemMode(expectedMode);
+    if (result == hardware_interface::CallbackReturn::SUCCESS) {
+      RCLCPP_INFO(
+        rclcpp::get_logger(LINROB), "System reached expected mode: %s",
+        expectedMode.c_str());
+      return result;
+    }
+    RCLCPP_INFO(rclcpp::get_logger(LINROB), "Waiting for system mode '%s'", expectedMode.c_str());
+    std::this_thread::sleep_for(pollInterval);
+  }
+  RCLCPP_ERROR(
+    rclcpp::get_logger(
+      LINROB), "Timeout waiting for system mode '%s'", expectedMode.c_str());
+  return hardware_interface::CallbackReturn::FAILURE;
@@ -443 +465,3 @@
-    getConnectionString(mConnection.ip, mConnection.user, mConnection.password, mConnection.sslPort);
+    getConnectionString(
+    mConnection.ip, mConnection.user, mConnection.password,
+    mConnection.sslPort);
@@ -448,2 +472 @@
-  if (mClient == nullptr)
-  {
+  if (mClient == nullptr) {
@@ -453,2 +476 @@
-  if (!mClient->isConnected())
-  {
+  if (!mClient->isConnected()) {
@@ -465,3 +487,4 @@
-  auto statusUpdateResult = updateDataFromNode("status", comm::datalayer::VariantType::ARRAY_OF_INT32);
-  if (!statusUpdateResult)
-  {
+  auto statusUpdateResult = updateDataFromNode(
+    "status",
+    comm::datalayer::VariantType::ARRAY_OF_INT32);
+  if (!statusUpdateResult) {
@@ -472 +495 @@
-  auto& statusData = mConnection.datalayerNodeMap.at("status");
+  auto & statusData = mConnection.datalayerNodeMap.at("status");
@@ -475,6 +498,6 @@
-  if (axisStatus != expectedState)
-  {
-    RCLCPP_INFO(rclcpp::get_logger(LINROB),
-                "Axis is not in expected state. Expected: %u, Actual: %u",
-                static_cast<unsigned int>(expectedState),
-                static_cast<unsigned int>(axisStatus));
+  if (axisStatus != expectedState) {
+    RCLCPP_INFO(
+      rclcpp::get_logger(LINROB),
+      "Axis is not in expected state. Expected: %u, Actual: %u",
+      static_cast<unsigned int>(expectedState),
+      static_cast<unsigned int>(axisStatus));
@@ -488 +511 @@
-hardware_interface::CallbackReturn Resource::checkSystemMode(const std::string& expectedMode)
+hardware_interface::CallbackReturn Resource::checkSystemMode(const std::string & expectedMode)
@@ -491,2 +514 @@
-  if (!modeUpdateResult)
-  {
+  if (!modeUpdateResult) {
@@ -497 +519 @@
-  const auto& modeData = mConnection.datalayerNodeMap.at("read_mode");
+  const auto & modeData = mConnection.datalayerNodeMap.at("read_mode");
@@ -500,3 +522,4 @@
-  if (mode != expectedMode)
-  {
-    RCLCPP_INFO(rclcpp::get_logger(LINROB), ("System is not in expected mode: " + expectedMode).c_str());
+  if (mode != expectedMode) {
+    RCLCPP_INFO(
+      rclcpp::get_logger(
+        LINROB), ("System is not in expected mode: " + expectedMode).c_str());
@@ -508 +531 @@
-void Resource::registerDatalayerNode(const std::string& key, const std::string& address)
+void Resource::registerDatalayerNode(const std::string & key, const std::string & address)
@@ -513,3 +536,5 @@
-bool Resource::updateDataFromNode(const std::string& key, comm::datalayer::VariantType expectedType)
-{
-  auto& data = mConnection.datalayerNodeMap.at(key);
+bool Resource::updateDataFromNode(
+  const std::string & key,
+  comm::datalayer::VariantType expectedType)
+{
+  auto & data = mConnection.datalayerNodeMap.at(key);
@@ -519,8 +544,12 @@
-  RCLCPP_DEBUG(rclcpp::get_logger(LINROB), "Result is DL_OK %s.", std::to_string(result == DL_OK).c_str());
-  RCLCPP_DEBUG(rclcpp::get_logger(LINROB),
-               "Result type is %u. Expected type is %u.",
-               static_cast<unsigned int>(data.second.getType()),
-               static_cast<unsigned int>(expectedType));
-  if (result != DL_OK)
-  {
-    RCLCPP_ERROR(rclcpp::get_logger(LINROB), "Failed to read data at %s. %s", data.first.c_str(), result.toString());
+  RCLCPP_DEBUG(
+    rclcpp::get_logger(LINROB), "Result is DL_OK %s.", std::to_string(
+      result == DL_OK).c_str());
+  RCLCPP_DEBUG(
+    rclcpp::get_logger(LINROB),
+    "Result type is %u. Expected type is %u.",
+    static_cast<unsigned int>(data.second.getType()),
+    static_cast<unsigned int>(expectedType));
+  if (result != DL_OK) {
+    RCLCPP_ERROR(
+      rclcpp::get_logger(LINROB), "Failed to read data at %s. %s",
+      data.first.c_str(), result.toString());
@@ -530,7 +559,7 @@
-  if (data.second.getType() != expectedType)
-  {
-    RCLCPP_ERROR(rclcpp::get_logger(LINROB),
-                 "Invalid type for data at %s. Expected: %u; Actual: %u",
-                 data.first.c_str(),
-                 static_cast<unsigned int>(expectedType),
-                 static_cast<unsigned int>(data.second.getType()));
+  if (data.second.getType() != expectedType) {
+    RCLCPP_ERROR(
+      rclcpp::get_logger(LINROB),
+      "Invalid type for data at %s. Expected: %u; Actual: %u",
+      data.first.c_str(),
+      static_cast<unsigned int>(expectedType),
+      static_cast<unsigned int>(data.second.getType()));
@@ -546,2 +575,4 @@
-  mState.at("position") = *reinterpret_cast<double*>(mConnection.datalayerNodeMap.at("position").second.getData());
-  mState.at("velocity") = *reinterpret_cast<double*>(mConnection.datalayerNodeMap.at("velocity").second.getData());
+  mState.at("position") =
+    *reinterpret_cast<double *>(mConnection.datalayerNodeMap.at("position").second.getData());
+  mState.at("velocity") =
+    *reinterpret_cast<double *>(mConnection.datalayerNodeMap.at("velocity").second.getData());
@@ -562,2 +593 @@
-  while (wait)
-  {
+  while (wait) {
@@ -573,3 +603,4 @@
-    RCLCPP_DEBUG(rclcpp::get_logger(LINROB),
-                 "Update final result value: %s; If all valid: 1",
-                 std::to_string(updateResult).c_str());
+    RCLCPP_DEBUG(
+      rclcpp::get_logger(LINROB),
+      "Update final result value: %s; If all valid: 1",
+      std::to_string(updateResult).c_str());
@@ -582 +613,2 @@
-bool Resource::resetPlcBufferAndIndex() {
+bool Resource::resetPlcBufferAndIndex()
+{
@@ -587,2 +619,6 @@
-  auto newTimestampWriteResult = writeToDatalayerNode("new_position_timestamp", mAxisTargetPositionTimestampExt);
-  auto nextPosIndexWriteResult = writeToDatalayerNode("next_pos_index", mPositionSettings.nextPositionIndex);
+  auto newTimestampWriteResult = writeToDatalayerNode(
+    "new_position_timestamp",
+    mAxisTargetPositionTimestampExt);
+  auto nextPosIndexWriteResult = writeToDatalayerNode(
+    "next_pos_index",
+    mPositionSettings.nextPositionIndex);
@@ -592 +628 @@
-void Resource::setLogLevel(const std::string& level)
+void Resource::setLogLevel(const std::string & level)
@@ -596,2 +632 @@
-  if (level == "DEBUG")
-  {
+  if (level == "DEBUG") {
@@ -599,3 +634 @@
-  }
-  else if (level == "INFO")
-  {
+  } else if (level == "INFO") {
@@ -603,3 +636 @@
-  }
-  else if (level == "WARN")
-  {
+  } else if (level == "WARN") {
@@ -607,3 +638 @@
-  }
-  else if (level == "ERROR")
-  {
+  } else if (level == "ERROR") {
@@ -611,3 +640 @@
-  }
-  else if (level == "FATAL")
-  {
+  } else if (level == "FATAL") {
@@ -615,3 +642 @@
-  }
-  else
-  {
+  } else {
@@ -627,2 +652 @@
-  if (mVirtualResetCommand > 0.5 && !mResetCommandExecuted)
-  {
+  if (mVirtualResetCommand > 0.5 && !mResetCommandExecuted) {
@@ -630,2 +654 @@
-    if (result)
-    {
+    if (result) {
@@ -634,3 +657 @@
-    }
-    else
-    {
+    } else {
@@ -642,2 +663 @@
-    if (result)
-    {
+    if (result) {
@@ -645,3 +665 @@
-    }
-    else
-    {
+    } else {
@@ -650,3 +668 @@
-  }
-  else if (mVirtualResetCommand <= 0.5)
-  {
+  } else if (mVirtualResetCommand <= 0.5) {
@@ -657,2 +673 @@
-  if (mVirtualReferenceCommand > 0.5 && !mReferenceCommandExecuted)
-  {
+  if (mVirtualReferenceCommand > 0.5 && !mReferenceCommandExecuted) {
@@ -660,2 +675 @@
-    if (result)
-    {
+    if (result) {
@@ -664,3 +678 @@
-    }
-    else
-    {
+    } else {
@@ -669,3 +681 @@
-  }
-  else if (mVirtualReferenceCommand <= 0.5)
-  {
+  } else if (mVirtualReferenceCommand <= 0.5) {
@@ -676,2 +686 @@
-  if (mVirtualStopCommand > 0.5 && !mStopCommandExecuted)
-  {
+  if (mVirtualStopCommand > 0.5 && !mStopCommandExecuted) {
@@ -679,2 +688 @@
-    if (result)
-    {
+    if (result) {
@@ -683,3 +691 @@
-    }
-    else
-    {
+    } else {
@@ -688,3 +694 @@
-  }
-  else if (mVirtualStopCommand <= 0.5)
-  {
+  } else if (mVirtualStopCommand <= 0.5) {
@@ -696,3 +700,3 @@
-      mConnection.datalayerNodeMap.count("virtual_target_position")) {
-    if (mVirtualStartMotionCommand > 0.5 && !mStartMotionCommandExecuted)
-    {
+    mConnection.datalayerNodeMap.count("virtual_target_position"))
+  {
+    if (mVirtualStartMotionCommand > 0.5 && !mStartMotionCommandExecuted) {
@@ -700,2 +704 @@
-      if (result)
-      {
+      if (result) {
@@ -704,3 +707 @@
-      }
-      else
-      {
+      } else {
@@ -709,3 +710 @@
-    }
-    else if (mVirtualStartMotionCommand <= 0.5)
-    {
+    } else if (mVirtualStartMotionCommand <= 0.5) {
@@ -733,4 +732,3 @@
-  auto& errorData = mConnection.datalayerNodeMap.at("error_code");
-  if (errorData.second.getType() == comm::datalayer::VariantType::UINT32)
-  {
-    mLatestErrorCode = *reinterpret_cast<uint32_t*>(errorData.second.getData());
+  auto & errorData = mConnection.datalayerNodeMap.at("error_code");
+  if (errorData.second.getType() == comm::datalayer::VariantType::UINT32) {
+    mLatestErrorCode = *reinterpret_cast<uint32_t *>(errorData.second.getData());
@@ -744 +742,2 @@
-  auto setSystemModeResult = writeToDatalayerNode("set_mode", static_cast<uint8_t>(Mode::AUTO_EXTERNAL));
+  auto setSystemModeResult =
+    writeToDatalayerNode("set_mode", static_cast<uint8_t>(Mode::AUTO_EXTERNAL));
@@ -750 +749,3 @@
-  RCLCPP_INFO(rclcpp::get_logger(LINROB), "Waiting %ld seconds for PLC to change operation mode...", kSetModeSleep.count());
+  RCLCPP_INFO(
+    rclcpp::get_logger(
+      LINROB), "Waiting %ld seconds for PLC to change operation mode...", kSetModeSleep.count());
@@ -777 +778,4 @@
-      RCLCPP_INFO(rclcpp::get_logger(LINROB), "Axis has reached STANDSTILL state - enabling operations and switching to AUTO_EXTERNAL mode");
+      RCLCPP_INFO(
+        rclcpp::get_logger(
+          LINROB),
+        "Axis has reached STANDSTILL state - enabling operations and switching to AUTO_EXTERNAL mode");
@@ -789 +793,3 @@
-        RCLCPP_ERROR(rclcpp::get_logger(LINROB), "Failed to reset PLC buffer and index after axis became ready");
+        RCLCPP_ERROR(
+          rclcpp::get_logger(
+            LINROB), "Failed to reset PLC buffer and index after axis became ready");
@@ -793 +799,3 @@
-      RCLCPP_ERROR(rclcpp::get_logger(LINROB), "Axis is in ERROR state - operations will remain disabled");
+      RCLCPP_ERROR(
+        rclcpp::get_logger(
+          LINROB), "Axis is in ERROR state - operations will remain disabled");

Code style divergence in file 'src/axis_controller.cpp':

--- src/axis_controller.cpp
+++ src/axis_controller.cpp.uncrustify
@@ -45,2 +45,3 @@
-    std::bind(&AxisController::resetAxisService, this,
-              std::placeholders::_1, std::placeholders::_2));
+    std::bind(
+      &AxisController::resetAxisService, this,
+      std::placeholders::_1, std::placeholders::_2));
@@ -50,2 +51,3 @@
-    std::bind(&AxisController::referenceAxisService, this,
-              std::placeholders::_1, std::placeholders::_2));
+    std::bind(
+      &AxisController::referenceAxisService, this,
+      std::placeholders::_1, std::placeholders::_2));
@@ -55,2 +57,3 @@
-    std::bind(&AxisController::stopAxisService, this,
-              std::placeholders::_1, std::placeholders::_2));
+    std::bind(
+      &AxisController::stopAxisService, this,
+      std::placeholders::_1, std::placeholders::_2));
@@ -60,2 +63,3 @@
-    std::bind(&AxisController::startMotionService, this,
-              std::placeholders::_1, std::placeholders::_2));
+    std::bind(
+      &AxisController::startMotionService, this,
+      std::placeholders::_1, std::placeholders::_2));
@@ -175 +179 @@
-  const std::shared_ptr<linrob_axis::srv::ResetAxis::Request> /*request*/,
+  const std::shared_ptr<linrob_axis::srv::ResetAxis::Request>/*request*/,
@@ -187 +191 @@
-  const std::shared_ptr<linrob_axis::srv::ReferenceAxis::Request> /*request*/,
+  const std::shared_ptr<linrob_axis::srv::ReferenceAxis::Request>/*request*/,
@@ -199 +203 @@
-  const std::shared_ptr<linrob_axis::srv::StopAxis::Request> /*request*/,
+  const std::shared_ptr<linrob_axis::srv::StopAxis::Request>/*request*/,
@@ -214,2 +218,3 @@
-  RCLCPP_INFO(get_node()->get_logger(), "Start motion service called (start=%s, target=%f, velocity=%f)",
-              request->start ? "true" : "false", request->target_position, request->velocity);
+  RCLCPP_INFO(
+    get_node()->get_logger(), "Start motion service called (start=%s, target=%f, velocity=%f)",
+    request->start ? "true" : "false", request->target_position, request->velocity);

185 files with code style divergence
No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__struct.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__traits.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/start_motion__type_support.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__struct.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__traits.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/detail/stop_axis__type_support.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/reference_axis.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/reference_axis.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/reset_axis.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/reset_axis.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/start_motion.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/start_motion.hpp'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/stop_axis.h'

No code style divergence in file 'install/linrob_axis/include/linrob_axis/linrob_axis/srv/stop_axis.hpp'



-- run_test.py: return code 1
-- run_test.py: verify result file '/home/boschrexroth/ctrlx-automation-sdk/samples-python/SNAP_ROS2/ros2_ws/src/linrob_axis/.obj-x86_64-linux-gnu/test_results/linrob_axis/uncrustify.xunit.xml'
